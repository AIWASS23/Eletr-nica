

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Aug 02 19:03:37 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F45K20 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007EDF                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _mensagem1
    59  007EDF  54                 	db	84
    60  007EE0  69                 	db	105
    61  007EE1  61                 	db	97
    62  007EE2  67                 	db	103
    63  007EE3  6F                 	db	111
    64  007EE4  20                 	db	32
    65  007EE5  44                 	db	68
    66  007EE6  69                 	db	105
    67  007EE7  6F                 	db	111
    68  007EE8  67                 	db	103
    69  007EE9  65                 	db	101
    70  007EEA  6E                 	db	110
    71  007EEB  65                 	db	101
    72  007EEC  73                 	db	115
    73  007EED  00                 	db	0
    74  0000                     _TRISD	set	3989
    75  0000                     _TRISC	set	3988
    76  0000                     _PORTD	set	3971
    77  0000                     _PORTCbits	set	3970
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82  007FA6                     __pcinit:
    83                           	opt stack 0
    84  007FA6                     start_initialization:
    85                           	opt stack 0
    86  007FA6                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Initialize objects allocated to COMRAM (15 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91  007FA6  0EDF               	movlw	low __pidataCOMRAM
    92  007FA8  6EF6               	movwf	tblptrl,c
    93  007FAA  0E7E               	movlw	high __pidataCOMRAM
    94  007FAC  6EF7               	movwf	tblptrh,c
    95  007FAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96  007FB0  6EF8               	movwf	tblptru,c
    97  007FB2  EE00  F001         	lfsr	0,__pdataCOMRAM
    98  007FB6  EE10 F00F          	lfsr	1,15
    99  007FBA                     copy_data0:
   100  007FBA  0009               	tblrd		*+
   101  007FBC  CFF5 FFEE          	movff	tablat,postinc0
   102  007FC0  50E5               	movf	postdec1,w,c
   103  007FC2  50E1               	movf	fsr1l,w,c
   104  007FC4  E1FA               	bnz	copy_data0
   105  007FC6                     end_of_initialization:
   106                           	opt stack 0
   107  007FC6                     __end_of__initialization:
   108                           	opt stack 0
   109  007FC6  0100               	movlb	0
   110  007FC8  EF77  F03F         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           postdec1	equ	0xFE5
   117                           fsr1l	equ	0xFE1
   118                           
   119                           	psect	dataCOMRAM
   120  000001                     __pdataCOMRAM:
   121                           	opt stack 0
   122  000001                     _mensagem1:
   123                           	opt stack 0
   124  000001                     	ds	15
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	cstackCOMRAM
   134  000010                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000010                     Delay_LCD@i:
   137                           	opt stack 0
   138  000010                     Delay_inicializacao_LCD@i:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x0
   142  000010                     	ds	2
   143  000012                     Envia_Comando_Lcd@comando:
   144                           	opt stack 0
   145  000012                     Envia_Dado_Lcd@dado:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x2
   149  000012                     	ds	1
   150  000013                     Print_Mensagem_Lcd@mensagem:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x3
   154  000013                     	ds	2
   155  000015                     Print_Mensagem_Lcd@i:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x5
   159  000015                     	ds	2
   160  000017                     tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           postdec1	equ	0xFE5
   166                           fsr1l	equ	0xFE1
   167                           
   168                           ; 1 bytes @ 0x7
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 84 in file "main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   188 ;;      Params:         0       0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels required when called:    3
   194 ;; This function calls:
   195 ;;		_Inicializa_Lcd
   196 ;;		_Print_Mensagem_Lcd
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  007EEE                     __ptext0:
   204                           	opt stack 0
   205  007EEE                     _main:
   206                           	opt stack 28
   207                           
   208                           ;main.c: 87: TRISC=0b11111100;
   209                           
   210                           ;incstack = 0
   211  007EEE  0EFC               	movlw	252
   212  007EF0  6E94               	movwf	3988,c	;volatile
   213                           
   214                           ;main.c: 88: TRISD=0b00000000;
   215  007EF2  0E00               	movlw	0
   216  007EF4  6E95               	movwf	3989,c	;volatile
   217                           
   218                           ;main.c: 89: Inicializa_Lcd ();
   219  007EF6  ECA2  F03F         	call	_Inicializa_Lcd	;wreg free
   220                           
   221                           ;main.c: 90: Print_Mensagem_Lcd (mensagem1);
   222  007EFA  0E01               	movlw	low _mensagem1
   223  007EFC  6E13               	movwf	Print_Mensagem_Lcd@mensagem,c
   224  007EFE  0E00               	movlw	high _mensagem1
   225  007F00  6E14               	movwf	Print_Mensagem_Lcd@mensagem+1,c
   226  007F02  ECE6  F03F         	call	_Print_Mensagem_Lcd	;wreg free
   227  007F06                     l40:
   228  007F06  D7FF               	goto	l40
   229  007F08                     __end_of_main:
   230                           	opt stack 0
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           postdec1	equ	0xFE5
   237                           fsr1l	equ	0xFE1
   238                           
   239 ;; *************** function _Print_Mensagem_Lcd *****************
   240 ;; Defined at:
   241 ;;		line 69 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;  mensagem        2    3[COMRAM] PTR unsigned char 
   244 ;;		 -> mensagem1(15), 
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  i               2    5[COMRAM] int 
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   256 ;;      Params:         2       0       0       0       0       0       0
   257 ;;      Locals:         2       0       0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0
   259 ;;      Totals:         4       0       0       0       0       0       0
   260 ;;Total ram usage:        4 bytes
   261 ;; Hardware stack levels used:    1
   262 ;; Hardware stack levels required when called:    2
   263 ;; This function calls:
   264 ;;		_Envia_Dado_Lcd
   265 ;; This function is called by:
   266 ;;		_main
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text1
   271  007FCC                     __ptext1:
   272                           	opt stack 0
   273  007FCC                     _Print_Mensagem_Lcd:
   274                           	opt stack 28
   275                           
   276                           ;main.c: 71: int i=0;
   277                           
   278                           ;incstack = 0
   279  007FCC  0E00               	movlw	0
   280  007FCE  6E16               	movwf	Print_Mensagem_Lcd@i+1,c
   281  007FD0  0E00               	movlw	0
   282  007FD2  6E15               	movwf	Print_Mensagem_Lcd@i,c
   283                           
   284                           ;main.c: 72: while (mensagem[i]) {
   285  007FD4  D00B               	goto	l731
   286  007FD6                     l727:
   287                           
   288                           ;main.c: 73: Envia_Dado_Lcd (mensagem[i]);
   289  007FD6  5015               	movf	Print_Mensagem_Lcd@i,w,c
   290  007FD8  2413               	addwf	Print_Mensagem_Lcd@mensagem,w,c
   291  007FDA  6ED9               	movwf	fsr2l,c
   292  007FDC  5016               	movf	Print_Mensagem_Lcd@i+1,w,c
   293  007FDE  2014               	addwfc	Print_Mensagem_Lcd@mensagem+1,w,c
   294  007FE0  6EDA               	movwf	fsr2h,c
   295  007FE2  50DF               	movf	indf2,w,c
   296  007FE4  ECC2  F03F         	call	_Envia_Dado_Lcd
   297                           
   298                           ;main.c: 74: i++;
   299  007FE8  4A15               	infsnz	Print_Mensagem_Lcd@i,f,c
   300  007FEA  2A16               	incf	Print_Mensagem_Lcd@i+1,f,c
   301  007FEC                     l731:
   302  007FEC  5015               	movf	Print_Mensagem_Lcd@i,w,c
   303  007FEE  2413               	addwf	Print_Mensagem_Lcd@mensagem,w,c
   304  007FF0  6ED9               	movwf	fsr2l,c
   305  007FF2  5016               	movf	Print_Mensagem_Lcd@i+1,w,c
   306  007FF4  2014               	addwfc	Print_Mensagem_Lcd@mensagem+1,w,c
   307  007FF6  6EDA               	movwf	fsr2h,c
   308  007FF8  50DF               	movf	indf2,w,c
   309  007FFA  B4D8               	btfsc	status,2,c
   310  007FFC  0012               	return	
   311  007FFE  D7EB               	goto	l727
   312  008000                     __end_of_Print_Mensagem_Lcd:
   313                           	opt stack 0
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           indf2	equ	0xFDF
   322                           fsr2h	equ	0xFDA
   323                           fsr2l	equ	0xFD9
   324                           status	equ	0xFD8
   325                           
   326 ;; *************** function _Envia_Dado_Lcd *****************
   327 ;; Defined at:
   328 ;;		line 40 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  dado            1    wreg     unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  dado            1    2[COMRAM] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   342 ;;      Params:         0       0       0       0       0       0       0
   343 ;;      Locals:         1       0       0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0
   345 ;;      Totals:         1       0       0       0       0       0       0
   346 ;;Total ram usage:        1 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; Hardware stack levels required when called:    1
   349 ;; This function calls:
   350 ;;		_Delay_LCD
   351 ;; This function is called by:
   352 ;;		_Print_Mensagem_Lcd
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text2
   357  007F84                     __ptext2:
   358                           	opt stack 0
   359  007F84                     _Envia_Dado_Lcd:
   360                           	opt stack 28
   361                           
   362                           ;incstack = 0
   363                           ;Envia_Dado_Lcd@dado stored from wreg
   364  007F84  6E12               	movwf	Envia_Dado_Lcd@dado,c
   365                           
   366                           ;main.c: 42: PORTCbits.RC1=0;
   367  007F86  9282               	bcf	3970,1,c	;volatile
   368                           
   369                           ;main.c: 43: PORTCbits.RC0=1;
   370  007F88  8082               	bsf	3970,0,c	;volatile
   371                           
   372                           ;main.c: 45: PORTCbits.RC1=1;
   373  007F8A  8282               	bsf	3970,1,c	;volatile
   374                           
   375                           ;main.c: 46: PORTD=dado;
   376  007F8C  C012  FF83         	movff	Envia_Dado_Lcd@dado,3971	;volatile
   377                           
   378                           ;main.c: 47: PORTCbits.RC1=0;
   379  007F90  9282               	bcf	3970,1,c	;volatile
   380                           
   381                           ;main.c: 49: PORTCbits.RC1=1;
   382  007F92  8282               	bsf	3970,1,c	;volatile
   383                           
   384                           ;main.c: 50: dado=dado<<4;
   385  007F94  3812               	swapf	Envia_Dado_Lcd@dado,w,c
   386  007F96  0BF0               	andlw	240
   387  007F98  6E12               	movwf	Envia_Dado_Lcd@dado,c
   388                           
   389                           ;main.c: 51: PORTD=dado;
   390  007F9A  C012  FF83         	movff	Envia_Dado_Lcd@dado,3971	;volatile
   391                           
   392                           ;main.c: 52: PORTCbits.RC1=0;
   393  007F9E  9282               	bcf	3970,1,c	;volatile
   394                           
   395                           ;main.c: 54: Delay_LCD();
   396  007FA0  EC93  F03F         	call	_Delay_LCD	;wreg free
   397  007FA4  0012               	return		;funcret
   398  007FA6                     __end_of_Envia_Dado_Lcd:
   399                           	opt stack 0
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           indf2	equ	0xFDF
   408                           fsr2h	equ	0xFDA
   409                           fsr2l	equ	0xFD9
   410                           status	equ	0xFD8
   411                           
   412 ;; *************** function _Inicializa_Lcd *****************
   413 ;; Defined at:
   414 ;;		line 57 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   428 ;;      Params:         0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels used:    1
   434 ;; Hardware stack levels required when called:    2
   435 ;; This function calls:
   436 ;;		_Delay_inicializacao_LCD
   437 ;;		_Envia_Comando_Lcd
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text3
   444  007F44                     __ptext3:
   445                           	opt stack 0
   446  007F44                     _Inicializa_Lcd:
   447                           	opt stack 28
   448                           
   449                           ;main.c: 59: Delay_inicializacao_LCD ();
   450                           
   451                           ;incstack = 0
   452  007F44  EC84  F03F         	call	_Delay_inicializacao_LCD	;wreg free
   453                           
   454                           ;main.c: 60: Envia_Comando_Lcd (0b000000010);
   455  007F48  0E02               	movlw	2
   456  007F4A  ECB1  F03F         	call	_Envia_Comando_Lcd
   457                           
   458                           ;main.c: 61: Envia_Comando_Lcd (0b001001000);
   459  007F4E  0E48               	movlw	72
   460  007F50  ECB1  F03F         	call	_Envia_Comando_Lcd
   461                           
   462                           ;main.c: 62: Envia_Comando_Lcd (0b000001110);
   463  007F54  0E0E               	movlw	14
   464  007F56  ECB1  F03F         	call	_Envia_Comando_Lcd
   465                           
   466                           ;main.c: 63: Envia_Comando_Lcd (0b000000001);
   467  007F5A  0E01               	movlw	1
   468  007F5C  ECB1  F03F         	call	_Envia_Comando_Lcd
   469  007F60  0012               	return		;funcret
   470  007F62                     __end_of_Inicializa_Lcd:
   471                           	opt stack 0
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           indf2	equ	0xFDF
   480                           fsr2h	equ	0xFDA
   481                           fsr2l	equ	0xFD9
   482                           status	equ	0xFD8
   483                           
   484 ;; *************** function _Envia_Comando_Lcd *****************
   485 ;; Defined at:
   486 ;;		line 23 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;  comando         1    wreg     unsigned char 
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  comando         1    2[COMRAM] unsigned char 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, status,2, status,0, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   500 ;;      Params:         0       0       0       0       0       0       0
   501 ;;      Locals:         1       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0
   503 ;;      Totals:         1       0       0       0       0       0       0
   504 ;;Total ram usage:        1 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    1
   507 ;; This function calls:
   508 ;;		_Delay_LCD
   509 ;; This function is called by:
   510 ;;		_Inicializa_Lcd
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text4
   515  007F62                     __ptext4:
   516                           	opt stack 0
   517  007F62                     _Envia_Comando_Lcd:
   518                           	opt stack 28
   519                           
   520                           ;incstack = 0
   521                           ;Envia_Comando_Lcd@comando stored from wreg
   522  007F62  6E12               	movwf	Envia_Comando_Lcd@comando,c
   523                           
   524                           ;main.c: 25: PORTCbits.RC1=0;
   525  007F64  9282               	bcf	3970,1,c	;volatile
   526                           
   527                           ;main.c: 26: PORTCbits.RC0=0;
   528  007F66  9082               	bcf	3970,0,c	;volatile
   529                           
   530                           ;main.c: 28: PORTCbits.RC1=1;
   531  007F68  8282               	bsf	3970,1,c	;volatile
   532                           
   533                           ;main.c: 29: PORTD=comando;
   534  007F6A  C012  FF83         	movff	Envia_Comando_Lcd@comando,3971	;volatile
   535                           
   536                           ;main.c: 30: PORTCbits.RC1=0;
   537  007F6E  9282               	bcf	3970,1,c	;volatile
   538                           
   539                           ;main.c: 32: PORTCbits.RC1=1;
   540  007F70  8282               	bsf	3970,1,c	;volatile
   541                           
   542                           ;main.c: 33: comando = comando<<4;
   543  007F72  3812               	swapf	Envia_Comando_Lcd@comando,w,c
   544  007F74  0BF0               	andlw	240
   545  007F76  6E12               	movwf	Envia_Comando_Lcd@comando,c
   546                           
   547                           ;main.c: 34: PORTD = comando;
   548  007F78  C012  FF83         	movff	Envia_Comando_Lcd@comando,3971	;volatile
   549                           
   550                           ;main.c: 35: PORTCbits.RC1=0;
   551  007F7C  9282               	bcf	3970,1,c	;volatile
   552                           
   553                           ;main.c: 37: Delay_LCD();
   554  007F7E  EC93  F03F         	call	_Delay_LCD	;wreg free
   555  007F82  0012               	return		;funcret
   556  007F84                     __end_of_Envia_Comando_Lcd:
   557                           	opt stack 0
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           postdec1	equ	0xFE5
   564                           fsr1l	equ	0xFE1
   565                           indf2	equ	0xFDF
   566                           fsr2h	equ	0xFDA
   567                           fsr2l	equ	0xFD9
   568                           status	equ	0xFD8
   569                           
   570 ;; *************** function _Delay_LCD *****************
   571 ;; Defined at:
   572 ;;		line 17 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  i               2    0[COMRAM] int 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         0       0       0       0       0       0       0
   587 ;;      Locals:         2       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0
   589 ;;      Totals:         2       0       0       0       0       0       0
   590 ;;Total ram usage:        2 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_Envia_Comando_Lcd
   596 ;;		_Envia_Dado_Lcd
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text5
   601  007F26                     __ptext5:
   602                           	opt stack 0
   603  007F26                     _Delay_LCD:
   604                           	opt stack 28
   605                           
   606                           ;main.c: 19: int i;
   607                           ;main.c: 20: for (i=0;i<400;i++){}
   608                           
   609                           ;incstack = 0
   610  007F26  0E00               	movlw	0
   611  007F28  6E11               	movwf	Delay_LCD@i+1,c
   612  007F2A  0E00               	movlw	0
   613  007F2C  6E10               	movwf	Delay_LCD@i,c
   614  007F2E                     l659:
   615  007F2E  BE11               	btfsc	Delay_LCD@i+1,7,c
   616  007F30  D006               	goto	l663
   617  007F32  0E90               	movlw	144
   618  007F34  5C10               	subwf	Delay_LCD@i,w,c
   619  007F36  0E01               	movlw	1
   620  007F38  5811               	subwfb	Delay_LCD@i+1,w,c
   621  007F3A  B0D8               	btfsc	status,0,c
   622  007F3C  0012               	return	
   623  007F3E                     l663:
   624  007F3E  4A10               	infsnz	Delay_LCD@i,f,c
   625  007F40  2A11               	incf	Delay_LCD@i+1,f,c
   626  007F42  D7F5               	goto	l659
   627  007F44                     __end_of_Delay_LCD:
   628                           	opt stack 0
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           indf2	equ	0xFDF
   637                           fsr2h	equ	0xFDA
   638                           fsr2l	equ	0xFD9
   639                           status	equ	0xFD8
   640                           
   641 ;; *************** function _Delay_inicializacao_LCD *****************
   642 ;; Defined at:
   643 ;;		line 78 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  i               2    0[COMRAM] int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   657 ;;      Params:         0       0       0       0       0       0       0
   658 ;;      Locals:         2       0       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0
   660 ;;      Totals:         2       0       0       0       0       0       0
   661 ;;Total ram usage:        2 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_Inicializa_Lcd
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text6
   671  007F08                     __ptext6:
   672                           	opt stack 0
   673  007F08                     _Delay_inicializacao_LCD:
   674                           	opt stack 29
   675                           
   676                           ;main.c: 80: int i;
   677                           ;main.c: 81: for (i=0;i<4000;i++) {}
   678                           
   679                           ;incstack = 0
   680  007F08  0E00               	movlw	0
   681  007F0A  6E11               	movwf	Delay_inicializacao_LCD@i+1,c
   682  007F0C  0E00               	movlw	0
   683  007F0E  6E10               	movwf	Delay_inicializacao_LCD@i,c
   684  007F10                     l701:
   685  007F10  BE11               	btfsc	Delay_inicializacao_LCD@i+1,7,c
   686  007F12  D006               	goto	l705
   687  007F14  0EA0               	movlw	160
   688  007F16  5C10               	subwf	Delay_inicializacao_LCD@i,w,c
   689  007F18  0E0F               	movlw	15
   690  007F1A  5811               	subwfb	Delay_inicializacao_LCD@i+1,w,c
   691  007F1C  B0D8               	btfsc	status,0,c
   692  007F1E  0012               	return	
   693  007F20                     l705:
   694  007F20  4A10               	infsnz	Delay_inicializacao_LCD@i,f,c
   695  007F22  2A11               	incf	Delay_inicializacao_LCD@i+1,f,c
   696  007F24  D7F5               	goto	l701
   697  007F26                     __end_of_Delay_inicializacao_LCD:
   698                           	opt stack 0
   699  0000                     tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           postdec1	equ	0xFE5
   705                           fsr1l	equ	0xFE1
   706                           indf2	equ	0xFDF
   707                           fsr2h	equ	0xFDA
   708                           fsr2l	equ	0xFD9
   709                           status	equ	0xFD8
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           postinc0	equ	0xFEE
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           indf2	equ	0xFDF
   718                           fsr2h	equ	0xFDA
   719                           fsr2l	equ	0xFD9
   720                           status	equ	0xFD8
   721                           
   722                           	psect	rparam
   723  0000                     tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           indf2	equ	0xFDF
   731                           fsr2h	equ	0xFDA
   732                           fsr2l	equ	0xFD9
   733                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Print_Mensagem_Lcd@mensagem	PTR unsigned char  size(2) Largest target is 15
		 -> mensagem1(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _main->_Print_Mensagem_Lcd
    _Print_Mensagem_Lcd->_Envia_Dado_Lcd
    _Envia_Dado_Lcd->_Delay_LCD
    _Inicializa_Lcd->_Envia_Comando_Lcd
    _Envia_Comando_Lcd->_Delay_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     334
                     _Inicializa_Lcd
                 _Print_Mensagem_Lcd
 ---------------------------------------------------------------------------------
 (1) _Print_Mensagem_Lcd                                   4     2      2     229
                                              3 COMRAM     4     2      2
                     _Envia_Dado_Lcd
 ---------------------------------------------------------------------------------
 (2) _Envia_Dado_Lcd                                       1     1      0      75
                                              2 COMRAM     1     1      0
                          _Delay_LCD
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Lcd                                       0     0      0     105
            _Delay_inicializacao_LCD
                  _Envia_Comando_Lcd
 ---------------------------------------------------------------------------------
 (2) _Envia_Comando_Lcd                                    1     1      0      75
                                              2 COMRAM     1     1      0
                          _Delay_LCD
 ---------------------------------------------------------------------------------
 (3) _Delay_LCD                                            2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Delay_inicializacao_LCD                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Inicializa_Lcd
     _Delay_inicializacao_LCD
     _Envia_Comando_Lcd
       _Delay_LCD
   _Print_Mensagem_Lcd
     _Envia_Dado_Lcd
       _Delay_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7      16       1       23.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      15        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Aug 02 19:03:37 2020

                              l40 7F06                               l701 7F10  
                             l705 7F20                               l731 7FEC  
                             l663 7F3E                               l727 7FD6  
                             l659 7F2E                    _Inicializa_Lcd 7F44  
                            _main 7EEE                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            start 0000                      ___param_bank 000000  
                           ?_main 0010                             _PORTD 000F83  
                           _TRISC 000F94                             _TRISD 000F95  
               _Envia_Comando_Lcd 7F62            __end_of_Inicializa_Lcd 7F62  
              ?_Envia_Comando_Lcd 0010                             tablat 000FF5  
         _Delay_inicializacao_LCD 7F08                             status 000FD8  
             ??_Envia_Comando_Lcd 0012                   __initialization 7FA6  
                    __end_of_main 7F08                __size_of_Delay_LCD 001E  
                          ??_main 0017                     __activetblptr 000000  
       __end_of_Envia_Comando_Lcd 7F84                   ?_Inicializa_Lcd 0010  
      __end_of_Print_Mensagem_Lcd 8000          Envia_Comando_Lcd@comando 0012  
                    __pdataCOMRAM 0001               Print_Mensagem_Lcd@i 0015  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8         ??_Delay_inicializacao_LCD 0010  
               __end_of_Delay_LCD 7F44                  ??_Envia_Dado_Lcd 0012  
                      __accesstop 0060           __end_of__initialization 7FC6  
                   ___rparam_used 000001                    __pcstackCOMRAM 0010  
      __size_of_Envia_Comando_Lcd 0022                           __Hparam 0000  
                         __Lparam 0000                           __pcinit 7FA6  
                         __ramtop 0600                           __ptext0 7EEE  
                         __ptext1 7FCC                           __ptext2 7F84  
                         __ptext3 7F44                           __ptext4 7F62  
                         __ptext5 7F26                           __ptext6 7F08  
      Print_Mensagem_Lcd@mensagem 0013                  ??_Inicializa_Lcd 0013  
            end_of_initialization 7FC6                           postdec1 000FE5  
                         postinc0 000FEE                Envia_Dado_Lcd@dado 0012  
                       _PORTCbits 000F82                _Print_Mensagem_Lcd 7FCC  
             ?_Print_Mensagem_Lcd 0013                         _Delay_LCD 7F26  
            ??_Print_Mensagem_Lcd 0015                     __pidataCOMRAM 7EDF  
             start_initialization 7FA6          Delay_inicializacao_LCD@i 0010  
                      ?_Delay_LCD 0010          ?_Delay_inicializacao_LCD 0010  
         __size_of_Envia_Dado_Lcd 0022                         _mensagem1 0001  
                     ??_Delay_LCD 0010   __end_of_Delay_inicializacao_LCD 7F26  
                       copy_data0 7FBA                          __Hrparam 0000  
                        __Lrparam 0000           __size_of_Inicializa_Lcd 001E  
                   __size_of_main 001A       __size_of_Print_Mensagem_Lcd 0034  
                  _Envia_Dado_Lcd 7F84                        Delay_LCD@i 0010  
__size_of_Delay_inicializacao_LCD 001E            __end_of_Envia_Dado_Lcd 7FA6  
                 ?_Envia_Dado_Lcd 0010  

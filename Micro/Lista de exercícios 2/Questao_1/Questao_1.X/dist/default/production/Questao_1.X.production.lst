

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Aug 24 18:15:28 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.41
    15                           ; Generated 25/01/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISBbits	set	3987
    49  0000                     _TRISD	set	3989
    50  0000                     _INTCON3bits	set	4080
    51  0000                     _PORTDbits	set	3971
    52  0000                     _INTCON2bits	set	4081
    53  0000                     _INTCONbits	set	4082
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  000160                     __pcinit:
    59                           	opt stack 0
    60  000160                     start_initialization:
    61                           	opt stack 0
    62  000160                     __initialization:
    63                           	opt stack 0
    64  000160                     end_of_initialization:
    65                           	opt stack 0
    66  000160                     __end_of__initialization:
    67                           	opt stack 0
    68  000160  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    69  000162  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    70  000164  0100               	movlb	0
    71  000166  EF95  F000         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74  000001                     __pcstackCOMRAM:
    75                           	opt stack 0
    76  000001                     ??_ISR:
    77  000001                     
    78                           ; 1 bytes @ 0x0
    79  000001                     	ds	15
    80  000010                     ??_main:
    81                           
    82                           ; 1 bytes @ 0xF
    83  000010                     	ds	2
    84                           
    85 ;;
    86 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    87 ;;
    88 ;; *************** function _main *****************
    89 ;; Defined at:
    90 ;;		line 32 in file "main.c"
    91 ;; Parameters:    Size  Location     Type
    92 ;;		None
    93 ;; Auto vars:     Size  Location     Type
    94 ;;		None
    95 ;; Return value:  Size  Location     Type
    96 ;;                  1    wreg      void 
    97 ;; Registers used:
    98 ;;		wreg, status,2
    99 ;; Tracked objects:
   100 ;;		On entry : 0/0
   101 ;;		On exit  : 0/0
   102 ;;		Unchanged: 0/0
   103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   104 ;;      Params:         0       0       0       0       0       0       0
   105 ;;      Locals:         0       0       0       0       0       0       0
   106 ;;      Temps:          2       0       0       0       0       0       0
   107 ;;      Totals:         2       0       0       0       0       0       0
   108 ;;Total ram usage:        2 bytes
   109 ;; Hardware stack levels required when called:    1
   110 ;; This function calls:
   111 ;;		Nothing
   112 ;; This function is called by:
   113 ;;		Startup code after reset
   114 ;; This function uses a non-reentrant model
   115 ;;
   116                           
   117                           	psect	text0
   118  00012A                     __ptext0:
   119                           	opt stack 0
   120  00012A                     _main:
   121                           	opt stack 30
   122                           
   123                           ;main.c: 33: TRISD=0b11111110;
   124                           
   125                           ;incstack = 0
   126  00012A  0EFE               	movlw	254
   127  00012C  6E95               	movwf	3989,c	;volatile
   128                           
   129                           ;main.c: 34: TRISBbits.TRISB0=1;
   130  00012E  8093               	bsf	3987,0,c	;volatile
   131                           
   132                           ;main.c: 35: PORTDbits.RD0=0;
   133  000130  9083               	bcf	3971,0,c	;volatile
   134                           
   135                           ;main.c: 36: INTCON2bits.RBPU=0;
   136  000132  9EF1               	bcf	intcon2,7,c	;volatile
   137                           
   138                           ;main.c: 38: INTCONbits.INT0IF=0;
   139  000134  92F2               	bcf	intcon,1,c	;volatile
   140                           
   141                           ;main.c: 39: INTCONbits.INT0IE=1;
   142  000136  88F2               	bsf	intcon,4,c	;volatile
   143                           
   144                           ;main.c: 41: INTCON3bits.INT1IF=0;
   145  000138  90F0               	bcf	intcon3,0,c	;volatile
   146                           
   147                           ;main.c: 42: INTCON3bits.INT1IE=1;
   148  00013A  86F0               	bsf	intcon3,3,c	;volatile
   149                           
   150                           ;main.c: 44: INTCON3bits.INT2IF=0;
   151  00013C  92F0               	bcf	intcon3,1,c	;volatile
   152                           
   153                           ;main.c: 45: INTCON3bits.INT2IE=1;
   154  00013E  88F0               	bsf	intcon3,4,c	;volatile
   155                           
   156                           ;main.c: 47: INTCON2bits.INTEDG0=0;
   157  000140  9CF1               	bcf	intcon2,6,c	;volatile
   158                           
   159                           ;main.c: 48: INTCON2bits.INTEDG1=0;
   160  000142  9AF1               	bcf	intcon2,5,c	;volatile
   161                           
   162                           ;main.c: 49: INTCON2bits.INTEDG2=0;
   163  000144  98F1               	bcf	intcon2,4,c	;volatile
   164                           
   165                           ;main.c: 51: INTCONbits.GIE=1;
   166  000146  8EF2               	bsf	intcon,7,c	;volatile
   167  000148                     l670:
   168                           
   169                           ;main.c: 54: _delay((unsigned long)((1000)*(4000000/4000.0)));
   170  000148  0E06               	movlw	6
   171  00014A  6E11               	movwf	(??_main+1)& (0+255),c
   172  00014C  0E13               	movlw	19
   173  00014E  6E10               	movwf	??_main& (0+255),c
   174  000150  0EAE               	movlw	174
   175  000152                     u167:
   176  000152  2EE8               	decfsz	wreg,f,c
   177  000154  D7FE               	bra	u167
   178  000156  2E10               	decfsz	??_main& (0+255),f,c
   179  000158  D7FC               	bra	u167
   180  00015A  2E11               	decfsz	(??_main+1)& (0+255),f,c
   181  00015C  D7FA               	bra	u167
   182  00015E  D7F4               	goto	l670
   183  000160                     __end_of_main:
   184                           	opt stack 0
   185                           intcon	equ	0xFF2
   186                           intcon2	equ	0xFF1
   187                           intcon3	equ	0xFF0
   188                           wreg	equ	0xFE8
   189                           
   190 ;; *************** function _ISR *****************
   191 ;; Defined at:
   192 ;;		line 9 in file "main.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   206 ;;      Params:         0       0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0
   208 ;;      Temps:         15       0       0       0       0       0       0
   209 ;;      Totals:        15       0       0       0       0       0       0
   210 ;;Total ram usage:       15 bytes
   211 ;; Hardware stack levels used:    1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		Interrupt level 2
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	intcode
   220  000008                     __pintcode:
   221                           	opt stack 0
   222  000008                     _ISR:
   223                           	opt stack 30
   224                           
   225                           ;incstack = 0
   226  000008  8212               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   227  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   228                           intcon	equ	0xFF2
   229                           intcon2	equ	0xFF1
   230                           intcon3	equ	0xFF0
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	intcode_body
   234  000012                     __pintcode_body:
   235                           	opt stack 30
   236  000012                     int_func:
   237                           	opt stack 30
   238  000012  0006               	pop		; remove dummy address from shadow register refresh
   239  000014  CFFA F002          	movff	pclath,??_ISR+1
   240  000018  CFFB F003          	movff	pclatu,??_ISR+2
   241  00001C  CFE9 F004          	movff	fsr0l,??_ISR+3
   242  000020  CFEA F005          	movff	fsr0h,??_ISR+4
   243  000024  CFE1 F006          	movff	fsr1l,??_ISR+5
   244  000028  CFE2 F007          	movff	fsr1h,??_ISR+6
   245  00002C  CFD9 F008          	movff	fsr2l,??_ISR+7
   246  000030  CFDA F009          	movff	fsr2h,??_ISR+8
   247  000034  CFF3 F00A          	movff	prodl,??_ISR+9
   248  000038  CFF4 F00B          	movff	prodh,??_ISR+10
   249  00003C  CFF6 F00C          	movff	tblptrl,??_ISR+11
   250  000040  CFF7 F00D          	movff	tblptrh,??_ISR+12
   251  000044  CFF8 F00E          	movff	tblptru,??_ISR+13
   252  000048  CFF5 F00F          	movff	tablat,??_ISR+14
   253                           
   254                           ;main.c: 10: if(INTCONbits.INT0IF==1){
   255  00004C  A2F2               	btfss	intcon,1,c	;volatile
   256  00004E  D01A               	goto	i2l630
   257                           
   258                           ;main.c: 11: INTCON2bits.INTEDG0=!INTCON2bits.INTEDG0;
   259  000050  BCF1               	btfsc	intcon2,6,c	;volatile
   260  000052  D003               	goto	i2u2_40
   261  000054  6A01               	clrf	??_ISR& (0+255),c
   262  000056  2A01               	incf	??_ISR& (0+255),f,c
   263  000058  D001               	goto	i2u3_48
   264  00005A                     i2u2_40:
   265  00005A  6A01               	clrf	??_ISR& (0+255),c
   266  00005C                     i2u3_48:
   267  00005C  3A01               	swapf	??_ISR,f,c
   268  00005E  4601               	rlncf	??_ISR,f,c
   269  000060  4601               	rlncf	??_ISR,f,c
   270  000062  50F1               	movf	intcon2,w,c	;volatile
   271  000064  1801               	xorwf	??_ISR,w,c
   272  000066  0BBF               	andlw	-65
   273  000068  1801               	xorwf	??_ISR,w,c
   274  00006A  6EF1               	movwf	intcon2,c	;volatile
   275                           
   276                           ;main.c: 12: INTCONbits.INT0IF=0;
   277  00006C  92F2               	bcf	intcon,1,c	;volatile
   278                           
   279                           ;main.c: 13: PORTDbits.RD0=!PORTDbits.RD0;
   280  00006E  B083               	btfsc	3971,0,c	;volatile
   281  000070  D003               	goto	i2u4_40
   282  000072  6A01               	clrf	??_ISR& (0+255),c
   283  000074  2A01               	incf	??_ISR& (0+255),f,c
   284  000076  D001               	goto	i2u5_48
   285  000078                     i2u4_40:
   286  000078  6A01               	clrf	??_ISR& (0+255),c
   287  00007A                     i2u5_48:
   288  00007A  5083               	movf	3971,w,c	;volatile
   289  00007C  1801               	xorwf	??_ISR,w,c
   290  00007E  0BFE               	andlw	-2
   291  000080  1801               	xorwf	??_ISR,w,c
   292  000082  6E83               	movwf	3971,c	;volatile
   293  000084                     i2l630:
   294                           
   295                           ;main.c: 14: }
   296                           ;main.c: 16: if(INTCON3bits.INT1IF==1){
   297  000084  A0F0               	btfss	intcon3,0,c	;volatile
   298  000086  D019               	goto	i2l636
   299                           
   300                           ;main.c: 17: INTCON2bits.INTEDG1=!INTCON2bits.INTEDG1;
   301  000088  BAF1               	btfsc	intcon2,5,c	;volatile
   302  00008A  D003               	goto	i2u7_40
   303  00008C  6A01               	clrf	??_ISR& (0+255),c
   304  00008E  2A01               	incf	??_ISR& (0+255),f,c
   305  000090  D001               	goto	i2u8_48
   306  000092                     i2u7_40:
   307  000092  6A01               	clrf	??_ISR& (0+255),c
   308  000094                     i2u8_48:
   309  000094  3A01               	swapf	??_ISR,f,c
   310  000096  4601               	rlncf	??_ISR,f,c
   311  000098  50F1               	movf	intcon2,w,c	;volatile
   312  00009A  1801               	xorwf	??_ISR,w,c
   313  00009C  0BDF               	andlw	-33
   314  00009E  1801               	xorwf	??_ISR,w,c
   315  0000A0  6EF1               	movwf	intcon2,c	;volatile
   316                           
   317                           ;main.c: 18: INTCON3bits.INT1IF=0;
   318  0000A2  90F0               	bcf	intcon3,0,c	;volatile
   319                           
   320                           ;main.c: 19: PORTDbits.RD0=!PORTDbits.RD0;
   321  0000A4  B083               	btfsc	3971,0,c	;volatile
   322  0000A6  D003               	goto	i2u9_40
   323  0000A8  6A01               	clrf	??_ISR& (0+255),c
   324  0000AA  2A01               	incf	??_ISR& (0+255),f,c
   325  0000AC  D001               	goto	i2u10_48
   326  0000AE                     i2u9_40:
   327  0000AE  6A01               	clrf	??_ISR& (0+255),c
   328  0000B0                     i2u10_48:
   329  0000B0  5083               	movf	3971,w,c	;volatile
   330  0000B2  1801               	xorwf	??_ISR,w,c
   331  0000B4  0BFE               	andlw	-2
   332  0000B6  1801               	xorwf	??_ISR,w,c
   333  0000B8  6E83               	movwf	3971,c	;volatile
   334  0000BA                     i2l636:
   335                           
   336                           ;main.c: 20: }
   337                           ;main.c: 22: if(INTCON3bits.INT2IF==1){
   338  0000BA  A2F0               	btfss	intcon3,1,c	;volatile
   339  0000BC  D018               	goto	i2l20
   340                           
   341                           ;main.c: 23: INTCON2bits.INTEDG2=!INTCON2bits.INTEDG2;
   342  0000BE  B8F1               	btfsc	intcon2,4,c	;volatile
   343  0000C0  D003               	goto	i2u12_40
   344  0000C2  6A01               	clrf	??_ISR& (0+255),c
   345  0000C4  2A01               	incf	??_ISR& (0+255),f,c
   346  0000C6  D001               	goto	i2u13_48
   347  0000C8                     i2u12_40:
   348  0000C8  6A01               	clrf	??_ISR& (0+255),c
   349  0000CA                     i2u13_48:
   350  0000CA  3A01               	swapf	??_ISR,f,c
   351  0000CC  50F1               	movf	intcon2,w,c	;volatile
   352  0000CE  1801               	xorwf	??_ISR,w,c
   353  0000D0  0BEF               	andlw	-17
   354  0000D2  1801               	xorwf	??_ISR,w,c
   355  0000D4  6EF1               	movwf	intcon2,c	;volatile
   356                           
   357                           ;main.c: 24: INTCON3bits.INT2IF=0;
   358  0000D6  92F0               	bcf	intcon3,1,c	;volatile
   359                           
   360                           ;main.c: 25: PORTDbits.RD0=!PORTDbits.RD0;
   361  0000D8  B083               	btfsc	3971,0,c	;volatile
   362  0000DA  D003               	goto	i2u14_40
   363  0000DC  6A01               	clrf	??_ISR& (0+255),c
   364  0000DE  2A01               	incf	??_ISR& (0+255),f,c
   365  0000E0  D001               	goto	i2u15_48
   366  0000E2                     i2u14_40:
   367  0000E2  6A01               	clrf	??_ISR& (0+255),c
   368  0000E4                     i2u15_48:
   369  0000E4  5083               	movf	3971,w,c	;volatile
   370  0000E6  1801               	xorwf	??_ISR,w,c
   371  0000E8  0BFE               	andlw	-2
   372  0000EA  1801               	xorwf	??_ISR,w,c
   373  0000EC  6E83               	movwf	3971,c	;volatile
   374  0000EE                     i2l20:
   375  0000EE  C00F  FFF5         	movff	??_ISR+14,tablat
   376  0000F2  C00E  FFF8         	movff	??_ISR+13,tblptru
   377  0000F6  C00D  FFF7         	movff	??_ISR+12,tblptrh
   378  0000FA  C00C  FFF6         	movff	??_ISR+11,tblptrl
   379  0000FE  C00B  FFF4         	movff	??_ISR+10,prodh
   380  000102  C00A  FFF3         	movff	??_ISR+9,prodl
   381  000106  C009  FFDA         	movff	??_ISR+8,fsr2h
   382  00010A  C008  FFD9         	movff	??_ISR+7,fsr2l
   383  00010E  C007  FFE2         	movff	??_ISR+6,fsr1h
   384  000112  C006  FFE1         	movff	??_ISR+5,fsr1l
   385  000116  C005  FFEA         	movff	??_ISR+4,fsr0h
   386  00011A  C004  FFE9         	movff	??_ISR+3,fsr0l
   387  00011E  C003  FFFB         	movff	??_ISR+2,pclatu
   388  000122  C002  FFFA         	movff	??_ISR+1,pclath
   389  000126  9212               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   390  000128  0011               	retfie		f
   391  00012A                     __end_of_ISR:
   392                           	opt stack 0
   393  0000                     pclatu	equ	0xFFB
   394                           pclath	equ	0xFFA
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           prodh	equ	0xFF4
   400                           prodl	equ	0xFF3
   401                           intcon	equ	0xFF2
   402                           intcon2	equ	0xFF1
   403                           intcon3	equ	0xFF0
   404                           fsr0h	equ	0xFEA
   405                           fsr0l	equ	0xFE9
   406                           wreg	equ	0xFE8
   407                           fsr1h	equ	0xFE2
   408                           fsr1l	equ	0xFE1
   409                           fsr2h	equ	0xFDA
   410                           fsr2l	equ	0xFD9
   411                           pclatu	equ	0xFFB
   412                           pclath	equ	0xFFA
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           prodh	equ	0xFF4
   418                           prodl	equ	0xFF3
   419                           intcon	equ	0xFF2
   420                           intcon2	equ	0xFF1
   421                           intcon3	equ	0xFF0
   422                           fsr0h	equ	0xFEA
   423                           fsr0l	equ	0xFE9
   424                           wreg	equ	0xFE8
   425                           fsr1h	equ	0xFE2
   426                           fsr1l	equ	0xFE1
   427                           fsr2h	equ	0xFDA
   428                           fsr2l	equ	0xFD9
   429                           
   430                           	psect	rparam
   431  0000                     pclatu	equ	0xFFB
   432                           pclath	equ	0xFFA
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           prodh	equ	0xFF4
   438                           prodl	equ	0xFF3
   439                           intcon	equ	0xFF2
   440                           intcon2	equ	0xFF1
   441                           intcon3	equ	0xFF0
   442                           fsr0h	equ	0xFEA
   443                           fsr0l	equ	0xFE9
   444                           wreg	equ	0xFE8
   445                           fsr1h	equ	0xFE2
   446                           fsr1l	equ	0xFE1
   447                           fsr2h	equ	0xFDA
   448                           fsr2l	equ	0xFD9
   449                           
   450                           	psect	temp
   451  000012                     btemp:
   452                           	opt stack 0
   453  000012                     	ds	1
   454  0000                     int$flags	set	btemp
   455                           pclatu	equ	0xFFB
   456                           pclath	equ	0xFFA
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           prodh	equ	0xFF4
   462                           prodl	equ	0xFF3
   463                           intcon	equ	0xFF2
   464                           intcon2	equ	0xFF1
   465                           intcon3	equ	0xFF0
   466                           fsr0h	equ	0xFEA
   467                           fsr0l	equ	0xFE9
   468                           wreg	equ	0xFE8
   469                           fsr1h	equ	0xFE2
   470                           fsr1l	equ	0xFE1
   471                           fsr2h	equ	0xFDA
   472                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                 15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E     11      11       1       13.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Aug 24 18:15:28 2020

                    l670 0148                      u167 0152                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0001                     i2l20 00EE  
                   _main 012A                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0012                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ??_ISR 0001                    ?_main 0001                    i2l630 0084  
                  i2l636 00BA                    _TRISD 000F95                    pclath 000FFA  
                  tablat 000FF5          __initialization 0160             __end_of_main 0160  
                 ??_main 0010            __activetblptr 000000                   i2u2_40 005A  
                 i2u4_40 0078                   i2u3_48 005C                   i2u5_48 007A  
                 i2u7_40 0092                   i2u9_40 00AE                   i2u8_48 0094  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0160          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  i2u10_48 00B0  
                i2u12_40 00C8                  i2u14_40 00E2                  i2u13_48 00CA  
                i2u15_48 00E4                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0160                  __ramtop 0600                  __ptext0 012A  
           __size_of_ISR 0122           __pintcode_body 0012     end_of_initialization 0160  
                int_func 0012                _PORTDbits 000F83                _TRISBbits 000F93  
    start_initialization 0160              __end_of_ISR 012A                __pintcode 0008  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0036                 int$flags 0012  
             _INTCONbits 000FF2                 intlevel2 0000  



Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 18 19:15:16 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 1.41
    26                           ; Generated 25/01/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F45K20 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	nvCOMRAM
    61  000048                     __pnvCOMRAM:
    62                           	opt stack 0
    63  000048                     _frequencia:
    64                           	opt stack 0
    65  000048                     	ds	2
    66  00004A                     _periodo:
    67                           	opt stack 0
    68  00004A                     	ds	2
    69  0000                     _TRISD	set	3989
    70  0000                     _PORTC	set	3970
    71  0000                     _INTCONbits	set	4082
    72  0000                     _PIE1bits	set	3997
    73  0000                     _IPR1bits	set	3999
    74  0000                     _T1CON	set	4045
    75  0000                     _CCP1CONbits	set	4029
    76  0000                     _TRISC	set	3988
    77  0000                     _PORTCbits	set	3970
    78  0000                     _PORTD	set	3971
    79  0000                     _CCPR1L	set	4030
    80  0000                     _CCPR1H	set	4031
    81  0000                     _TMR1L	set	4046
    82  0000                     _TMR1H	set	4047
    83  0000                     _PIR1bits	set	3998
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  00071C                     __pcinit:
    89                           	opt stack 0
    90  00071C                     start_initialization:
    91                           	opt stack 0
    92  00071C                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Clear objects allocated to COMRAM (4 bytes)
    96  00071C  6A4F               	clrf	(__pbssCOMRAM+3)& (0+255),c
    97  00071E  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
    98  000720  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    99  000722  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   100  000724                     end_of_initialization:
   101                           	opt stack 0
   102  000724                     __end_of__initialization:
   103                           	opt stack 0
   104  000724  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   105  000726  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   106  000728  0E00               	movlw	low (__Lmediumconst shr (0+16))
   107  00072A  6EF8               	movwf	tblptru,c
   108  00072C  0100               	movlb	0
   109  00072E  EF8D  F002         	goto	_main	;jump to C main() function
   110                           tblptru	equ	0xFF8
   111                           
   112                           	psect	bssCOMRAM
   113  00004C                     __pbssCOMRAM:
   114                           	opt stack 0
   115  00004C                     _captura_l:
   116                           	opt stack 0
   117  00004C                     	ds	2
   118  00004E                     _captura_h:
   119                           	opt stack 0
   120  00004E                     	ds	2
   121                           tblptru	equ	0xFF8
   122                           
   123                           	psect	cstackBANK0
   124  000060                     __pcstackBANK0:
   125                           	opt stack 0
   126  000060                     ??_main:
   127                           
   128                           ; 1 bytes @ 0x0
   129  000060                     	ds	2
   130                           tblptru	equ	0xFF8
   131                           
   132                           	psect	cstackCOMRAM
   133  000001                     __pcstackCOMRAM:
   134                           	opt stack 0
   135  000001                     ??_MY_ISR:
   136  000001                     
   137                           ; 1 bytes @ 0x0
   138  000001                     	ds	14
   139  00000F                     ?___lwdiv:
   140                           	opt stack 0
   141  00000F                     ?___ftpack:
   142                           	opt stack 0
   143  00000F                     ___lwdiv@dividend:
   144                           	opt stack 0
   145  00000F                     ___ftpack@arg:
   146                           	opt stack 0
   147                           
   148                           ; 3 bytes @ 0xE
   149  00000F                     	ds	2
   150  000011                     ___lwdiv@divisor:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x10
   154  000011                     	ds	1
   155  000012                     ___ftpack@exp:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x11
   159  000012                     	ds	1
   160  000013                     ___ftpack@sign:
   161                           	opt stack 0
   162  000013                     ___lwdiv@quotient:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x12
   166  000013                     	ds	1
   167  000014                     ??___ftpack:
   168                           
   169                           ; 1 bytes @ 0x13
   170  000014                     	ds	1
   171  000015                     ___lwdiv@counter:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x14
   175  000015                     	ds	1
   176  000016                     ?___lwmod:
   177                           	opt stack 0
   178  000016                     ___lwmod@dividend:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x15
   182  000016                     	ds	1
   183  000017                     ?___awtoft:
   184                           	opt stack 0
   185  000017                     ___awtoft@c:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x16
   189  000017                     	ds	1
   190  000018                     ___lwmod@divisor:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x17
   194  000018                     	ds	2
   195  00001A                     ___awtoft@sign:
   196                           	opt stack 0
   197  00001A                     ___lwmod@counter:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x19
   201  00001A                     	ds	1
   202  00001B                     ?___ftmul:
   203                           	opt stack 0
   204  00001B                     Numero@num:
   205                           	opt stack 0
   206  00001B                     ___ftmul@f1:
   207                           	opt stack 0
   208                           
   209                           ; 3 bytes @ 0x1A
   210  00001B                     	ds	2
   211  00001D                     ??_Numero:
   212                           
   213                           ; 1 bytes @ 0x1C
   214  00001D                     	ds	1
   215  00001E                     ___ftmul@f2:
   216                           	opt stack 0
   217                           
   218                           ; 3 bytes @ 0x1D
   219  00001E                     	ds	1
   220  00001F                     Display@num:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x1E
   224  00001F                     	ds	2
   225  000021                     ??___ftmul:
   226  000021                     ??_Display:
   227                           
   228                           ; 1 bytes @ 0x20
   229  000021                     	ds	3
   230  000024                     ___ftmul@exp:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x23
   234  000024                     	ds	1
   235  000025                     ___ftmul@f3_as_product:
   236                           	opt stack 0
   237                           
   238                           ; 3 bytes @ 0x24
   239  000025                     	ds	3
   240  000028                     ___ftmul@cntr:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x27
   244  000028                     	ds	1
   245  000029                     ___ftmul@sign:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x28
   249  000029                     	ds	1
   250  00002A                     ?___ftdiv:
   251                           	opt stack 0
   252  00002A                     ___ftdiv@f1:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x29
   256  00002A                     	ds	3
   257  00002D                     ___ftdiv@f2:
   258                           	opt stack 0
   259                           
   260                           ; 3 bytes @ 0x2C
   261  00002D                     	ds	3
   262  000030                     ??___ftdiv:
   263                           
   264                           ; 1 bytes @ 0x2F
   265  000030                     	ds	3
   266  000033                     ___ftdiv@cntr:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x32
   270  000033                     	ds	1
   271  000034                     ___ftdiv@f3:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0x33
   275  000034                     	ds	3
   276  000037                     ___ftdiv@exp:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x36
   280  000037                     	ds	1
   281  000038                     ___ftdiv@sign:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x37
   285  000038                     	ds	1
   286  000039                     ?___fttol:
   287                           	opt stack 0
   288  000039                     ___fttol@f1:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x38
   292  000039                     	ds	4
   293  00003D                     ??___fttol:
   294                           
   295                           ; 1 bytes @ 0x3C
   296  00003D                     	ds	5
   297  000042                     ___fttol@sign1:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x41
   301  000042                     	ds	1
   302  000043                     ___fttol@lval:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x42
   306  000043                     	ds	4
   307  000047                     ___fttol@exp1:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x46
   311  000047                     	ds	1
   312                           tblptru	equ	0xFF8
   313                           
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 88 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       2       0       0       0       0       0
   336 ;;      Totals:         0       2       0       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels required when called:    3
   339 ;; This function calls:
   340 ;;		_Display
   341 ;;		___awtoft
   342 ;;		___ftdiv
   343 ;;		___ftmul
   344 ;;		___fttol
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text0
   351  00051A                     __ptext0:
   352                           	opt stack 0
   353  00051A                     _main:
   354                           	opt stack 28
   355                           
   356                           ;main.c: 94: TRISC=0b00001111;
   357                           
   358                           ;incstack = 0
   359  00051A  0E0F               	movlw	15
   360  00051C  6E94               	movwf	3988,c	;volatile
   361                           
   362                           ;main.c: 97: CCP1CONbits.CCP1M3 = 0;
   363  00051E  96BD               	bcf	4029,3,c	;volatile
   364                           
   365                           ;main.c: 98: CCP1CONbits.CCP1M2 = 1;
   366  000520  84BD               	bsf	4029,2,c	;volatile
   367                           
   368                           ;main.c: 99: CCP1CONbits.CCP1M1 = 0;
   369  000522  92BD               	bcf	4029,1,c	;volatile
   370                           
   371                           ;main.c: 100: CCP1CONbits.CCP1M0 = 0;
   372  000524  90BD               	bcf	4029,0,c	;volatile
   373                           
   374                           ;main.c: 103: T1CON = 0b10010101;
   375  000526  0E95               	movlw	149
   376  000528  6ECD               	movwf	4045,c	;volatile
   377                           
   378                           ;main.c: 106: IPR1bits.CCP1IP = 1;
   379  00052A  849F               	bsf	3999,2,c	;volatile
   380                           
   381                           ;main.c: 107: PIE1bits.CCP1IE = 1;
   382  00052C  849D               	bsf	3997,2,c	;volatile
   383                           
   384                           ;main.c: 108: PIR1bits.CCP1IF = 0;
   385  00052E  949E               	bcf	3998,2,c	;volatile
   386                           
   387                           ;main.c: 109: INTCONbits.GIE = 1;
   388  000530  8EF2               	bsf	intcon,7,c	;volatile
   389                           
   390                           ;main.c: 110: INTCONbits.PEIE = 1;
   391  000532  8CF2               	bsf	intcon,6,c	;volatile
   392                           
   393                           ;main.c: 113: PORTC=0b00000000;
   394  000534  0E00               	movlw	0
   395  000536  6E82               	movwf	3970,c	;volatile
   396                           
   397                           ;main.c: 114: TRISD=0b00000000;
   398  000538  0E00               	movlw	0
   399  00053A  6E95               	movwf	3989,c	;volatile
   400                           
   401                           ;main.c: 115: PORTD=0b00000000;
   402  00053C  0E00               	movlw	0
   403  00053E  6E83               	movwf	3971,c	;volatile
   404  000540                     l1340:
   405                           
   406                           ;main.c: 118: {
   407                           ;main.c: 119: periodo=captura_h<<8|captura_l;
   408  000540  504E               	movf	_captura_h,w,c
   409  000542  0100               	movlb	0	; () banked
   410  000544  6F61               	movwf	(??_main+1)& (0+255),b
   411  000546  6B60               	clrf	??_main& (0+255),b
   412  000548  504C               	movf	_captura_l,w,c
   413  00054A  0100               	movlb	0	; () banked
   414  00054C  1160               	iorwf	??_main& (0+255),w,b
   415  00054E  6E4A               	movwf	_periodo,c
   416  000550  504D               	movf	_captura_l+1,w,c
   417  000552  0100               	movlb	0	; () banked
   418  000554  1161               	iorwf	(??_main+1)& (0+255),w,b
   419  000556  6E4B               	movwf	_periodo+1,c
   420                           
   421                           ; BSR set to: 0
   422                           ;main.c: 120: frequencia=1l/(periodo*0.000001);
   423  000558  0E38               	movlw	56
   424  00055A  6E1E               	movwf	___ftmul@f2,c
   425  00055C  0E86               	movlw	134
   426  00055E  6E1F               	movwf	___ftmul@f2+1,c
   427  000560  0E35               	movlw	53
   428  000562  6E20               	movwf	___ftmul@f2+2,c
   429  000564  C04A  F017         	movff	_periodo,___awtoft@c
   430  000568  C04B  F018         	movff	_periodo+1,___awtoft@c+1
   431  00056C  EC72  F003         	call	___awtoft	;wreg free
   432  000570  C017  F01B         	movff	?___awtoft,___ftmul@f1
   433  000574  C018  F01C         	movff	?___awtoft+1,___ftmul@f1+1
   434  000578  C019  F01D         	movff	?___awtoft+2,___ftmul@f1+2
   435  00057C  EC49  F001         	call	___ftmul	;wreg free
   436  000580  C01B  F02D         	movff	?___ftmul,___ftdiv@f2
   437  000584  C01C  F02E         	movff	?___ftmul+1,___ftdiv@f2+1
   438  000588  C01D  F02F         	movff	?___ftmul+2,___ftdiv@f2+2
   439  00058C  0E00               	movlw	0
   440  00058E  6E2A               	movwf	___ftdiv@f1,c
   441  000590  0E80               	movlw	128
   442  000592  6E2B               	movwf	___ftdiv@f1+1,c
   443  000594  0E3F               	movlw	63
   444  000596  6E2C               	movwf	___ftdiv@f1+2,c
   445  000598  ECC3  F001         	call	___ftdiv	;wreg free
   446  00059C  C02A  F039         	movff	?___ftdiv,___fttol@f1
   447  0005A0  C02B  F03A         	movff	?___ftdiv+1,___fttol@f1+1
   448  0005A4  C02C  F03B         	movff	?___ftdiv+2,___fttol@f1+2
   449  0005A8  ECCF  F000         	call	___fttol	;wreg free
   450  0005AC  C039  F048         	movff	?___fttol,_frequencia
   451  0005B0  C03A  F049         	movff	?___fttol+1,_frequencia+1
   452                           
   453                           ;main.c: 121: Display(frequencia);
   454  0005B4  C048  F01F         	movff	_frequencia,Display@num
   455  0005B8  C049  F020         	movff	_frequencia+1,Display@num+1
   456  0005BC  EC4E  F000         	call	_Display	;wreg free
   457  0005C0  D7BF               	goto	l1340
   458  0005C2                     __end_of_main:
   459                           	opt stack 0
   460                           tblptru	equ	0xFF8
   461                           intcon	equ	0xFF2
   462                           
   463 ;; *************** function ___fttol *****************
   464 ;; Defined at:
   465 ;;		line 44 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\fttol.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;  f1              3   56[COMRAM] float 
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  lval            4   66[COMRAM] unsigned long 
   470 ;;  exp1            1   70[COMRAM] unsigned char 
   471 ;;  sign1           1   65[COMRAM] unsigned char 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  4   56[COMRAM] long 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   481 ;;      Params:         4       0       0       0       0       0       0
   482 ;;      Locals:         6       0       0       0       0       0       0
   483 ;;      Temps:          5       0       0       0       0       0       0
   484 ;;      Totals:        15       0       0       0       0       0       0
   485 ;;Total ram usage:       15 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text1
   496  00019E                     __ptext1:
   497                           	opt stack 0
   498  00019E                     ___fttol:
   499                           	opt stack 29
   500                           
   501                           ;incstack = 0
   502  00019E  C03B  F03D         	movff	___fttol@f1+2,??___fttol
   503  0001A2  6A3E               	clrf	(??___fttol+1)& (0+255),c
   504  0001A4  6A3F               	clrf	(??___fttol+2)& (0+255),c
   505  0001A6  343A               	rlcf	___fttol@f1+1,w,c
   506  0001A8  363D               	rlcf	??___fttol& (0+255),f,c
   507  0001AA  E301               	bnc	u621
   508  0001AC  803E               	bsf	(??___fttol+1)& (0+255),0,c
   509  0001AE                     u621:
   510  0001AE  503D               	movf	??___fttol,w,c
   511  0001B0  6E47               	movwf	___fttol@exp1,c
   512  0001B2  5047               	movf	___fttol@exp1,w,c
   513  0001B4  A4D8               	btfss	status,2,c
   514  0001B6  D009               	goto	l1250
   515  0001B8  0E00               	movlw	0
   516  0001BA  6E39               	movwf	?___fttol,c
   517  0001BC  0E00               	movlw	0
   518  0001BE  6E3A               	movwf	?___fttol+1,c
   519  0001C0  0E00               	movlw	0
   520  0001C2  6E3B               	movwf	?___fttol+2,c
   521  0001C4  0E00               	movlw	0
   522  0001C6  6E3C               	movwf	?___fttol+3,c
   523  0001C8  0012               	return	
   524  0001CA                     l1250:
   525  0001CA  0E17               	movlw	23
   526  0001CC  6E3D               	movwf	??___fttol& (0+255),c
   527  0001CE  C039  F03E         	movff	___fttol@f1,??___fttol+1
   528  0001D2  C03A  F03F         	movff	___fttol@f1+1,??___fttol+2
   529  0001D6  C03B  F040         	movff	___fttol@f1+2,??___fttol+3
   530  0001DA  283D               	incf	??___fttol,w,c
   531  0001DC  6E41               	movwf	(??___fttol+4)& (0+255),c
   532  0001DE  D004               	goto	u640
   533  0001E0                     u645:
   534  0001E0  90D8               	bcf	status,0,c
   535  0001E2  3240               	rrcf	??___fttol+3,f,c
   536  0001E4  323F               	rrcf	??___fttol+2,f,c
   537  0001E6  323E               	rrcf	??___fttol+1,f,c
   538  0001E8                     u640:
   539  0001E8  2E41               	decfsz	(??___fttol+4)& (0+255),f,c
   540  0001EA  D7FA               	goto	u645
   541  0001EC  503E               	movf	??___fttol+1,w,c
   542  0001EE  6E42               	movwf	___fttol@sign1,c
   543  0001F0  8E3A               	bsf	___fttol@f1+1,7,c
   544  0001F2  0EFF               	movlw	255
   545  0001F4  1639               	andwf	___fttol@f1,f,c
   546  0001F6  0EFF               	movlw	255
   547  0001F8  163A               	andwf	___fttol@f1+1,f,c
   548  0001FA  0E00               	movlw	0
   549  0001FC  163B               	andwf	___fttol@f1+2,f,c
   550  0001FE  5039               	movf	___fttol@f1,w,c
   551  000200  6E43               	movwf	___fttol@lval,c
   552  000202  503A               	movf	___fttol@f1+1,w,c
   553  000204  6E44               	movwf	___fttol@lval+1,c
   554  000206  503B               	movf	___fttol@f1+2,w,c
   555  000208  6E45               	movwf	___fttol@lval+2,c
   556  00020A  6A46               	clrf	___fttol@lval+3,c
   557  00020C  0E8E               	movlw	142
   558  00020E  5E47               	subwf	___fttol@exp1,f,c
   559  000210  AE47               	btfss	___fttol@exp1,7,c
   560  000212  D016               	goto	l1272
   561  000214  5047               	movf	___fttol@exp1,w,c
   562  000216  0A80               	xorlw	128
   563  000218  0F8F               	addlw	143
   564  00021A  B0D8               	btfsc	status,0,c
   565  00021C  D009               	goto	l1268
   566  00021E  0E00               	movlw	0
   567  000220  6E39               	movwf	?___fttol,c
   568  000222  0E00               	movlw	0
   569  000224  6E3A               	movwf	?___fttol+1,c
   570  000226  0E00               	movlw	0
   571  000228  6E3B               	movwf	?___fttol+2,c
   572  00022A  0E00               	movlw	0
   573  00022C  6E3C               	movwf	?___fttol+3,c
   574  00022E  0012               	return	
   575  000230                     l1268:
   576  000230  90D8               	bcf	status,0,c
   577  000232  3246               	rrcf	___fttol@lval+3,f,c
   578  000234  3245               	rrcf	___fttol@lval+2,f,c
   579  000236  3244               	rrcf	___fttol@lval+1,f,c
   580  000238  3243               	rrcf	___fttol@lval,f,c
   581  00023A  3E47               	incfsz	___fttol@exp1,f,c
   582  00023C  D7F9               	goto	l1268
   583  00023E  D015               	goto	l1282
   584  000240                     l1272:
   585  000240  0E17               	movlw	23
   586  000242  6447               	cpfsgt	___fttol@exp1,c
   587  000244  D00F               	goto	l1280
   588  000246  0E00               	movlw	0
   589  000248  6E39               	movwf	?___fttol,c
   590  00024A  0E00               	movlw	0
   591  00024C  6E3A               	movwf	?___fttol+1,c
   592  00024E  0E00               	movlw	0
   593  000250  6E3B               	movwf	?___fttol+2,c
   594  000252  0E00               	movlw	0
   595  000254  6E3C               	movwf	?___fttol+3,c
   596  000256  0012               	return	
   597  000258                     l1278:
   598  000258  90D8               	bcf	status,0,c
   599  00025A  3643               	rlcf	___fttol@lval,f,c
   600  00025C  3644               	rlcf	___fttol@lval+1,f,c
   601  00025E  3645               	rlcf	___fttol@lval+2,f,c
   602  000260  3646               	rlcf	___fttol@lval+3,f,c
   603  000262  0647               	decf	___fttol@exp1,f,c
   604  000264                     l1280:
   605  000264  5047               	movf	___fttol@exp1,w,c
   606  000266  A4D8               	btfss	status,2,c
   607  000268  D7F7               	goto	l1278
   608  00026A                     l1282:
   609  00026A  5042               	movf	___fttol@sign1,w,c
   610  00026C  B4D8               	btfsc	status,2,c
   611  00026E  D008               	goto	l1286
   612  000270  1E46               	comf	___fttol@lval+3,f,c
   613  000272  1E45               	comf	___fttol@lval+2,f,c
   614  000274  1E44               	comf	___fttol@lval+1,f,c
   615  000276  6C43               	negf	___fttol@lval,c
   616  000278  0E00               	movlw	0
   617  00027A  2244               	addwfc	___fttol@lval+1,f,c
   618  00027C  2245               	addwfc	___fttol@lval+2,f,c
   619  00027E  2246               	addwfc	___fttol@lval+3,f,c
   620  000280                     l1286:
   621  000280  C043  F039         	movff	___fttol@lval,?___fttol
   622  000284  C044  F03A         	movff	___fttol@lval+1,?___fttol+1
   623  000288  C045  F03B         	movff	___fttol@lval+2,?___fttol+2
   624  00028C  C046  F03C         	movff	___fttol@lval+3,?___fttol+3
   625  000290  0012               	return	
   626  000292                     __end_of___fttol:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           intcon	equ	0xFF2
   630                           status	equ	0xFD8
   631                           
   632 ;; *************** function ___ftmul *****************
   633 ;; Defined at:
   634 ;;		line 62 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftmul.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  f1              3   26[COMRAM] float 
   637 ;;  f2              3   29[COMRAM] float 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  f3_as_produc    3   36[COMRAM] unsigned um
   640 ;;  sign            1   40[COMRAM] unsigned char 
   641 ;;  cntr            1   39[COMRAM] unsigned char 
   642 ;;  exp             1   35[COMRAM] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  3   26[COMRAM] float 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   652 ;;      Params:         6       0       0       0       0       0       0
   653 ;;      Locals:         6       0       0       0       0       0       0
   654 ;;      Temps:          3       0       0       0       0       0       0
   655 ;;      Totals:        15       0       0       0       0       0       0
   656 ;;Total ram usage:       15 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    2
   659 ;; This function calls:
   660 ;;		___ftpack
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text2
   667  000292                     __ptext2:
   668                           	opt stack 0
   669  000292                     ___ftmul:
   670                           	opt stack 28
   671                           
   672                           ;incstack = 0
   673  000292  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
   674  000296  6A22               	clrf	(??___ftmul+1)& (0+255),c
   675  000298  6A23               	clrf	(??___ftmul+2)& (0+255),c
   676  00029A  341C               	rlcf	___ftmul@f1+1,w,c
   677  00029C  3621               	rlcf	??___ftmul& (0+255),f,c
   678  00029E  E301               	bnc	u551
   679  0002A0  8022               	bsf	(??___ftmul+1)& (0+255),0,c
   680  0002A2                     u551:
   681  0002A2  5021               	movf	??___ftmul,w,c
   682  0002A4  6E24               	movwf	___ftmul@exp,c
   683  0002A6  5024               	movf	___ftmul@exp,w,c
   684  0002A8  A4D8               	btfss	status,2,c
   685  0002AA  D007               	goto	l1190
   686  0002AC  0E00               	movlw	0
   687  0002AE  6E1B               	movwf	?___ftmul,c
   688  0002B0  0E00               	movlw	0
   689  0002B2  6E1C               	movwf	?___ftmul+1,c
   690  0002B4  0E00               	movlw	0
   691  0002B6  6E1D               	movwf	?___ftmul+2,c
   692  0002B8  0012               	return	
   693  0002BA                     l1190:
   694  0002BA  C020  F021         	movff	___ftmul@f2+2,??___ftmul
   695  0002BE  6A22               	clrf	(??___ftmul+1)& (0+255),c
   696  0002C0  6A23               	clrf	(??___ftmul+2)& (0+255),c
   697  0002C2  341F               	rlcf	___ftmul@f2+1,w,c
   698  0002C4  3621               	rlcf	??___ftmul& (0+255),f,c
   699  0002C6  E301               	bnc	u571
   700  0002C8  8022               	bsf	(??___ftmul+1)& (0+255),0,c
   701  0002CA                     u571:
   702  0002CA  5021               	movf	??___ftmul,w,c
   703  0002CC  6E29               	movwf	___ftmul@sign,c
   704  0002CE  5029               	movf	___ftmul@sign,w,c
   705  0002D0  A4D8               	btfss	status,2,c
   706  0002D2  D007               	goto	l1196
   707  0002D4  0E00               	movlw	0
   708  0002D6  6E1B               	movwf	?___ftmul,c
   709  0002D8  0E00               	movlw	0
   710  0002DA  6E1C               	movwf	?___ftmul+1,c
   711  0002DC  0E00               	movlw	0
   712  0002DE  6E1D               	movwf	?___ftmul+2,c
   713  0002E0  0012               	return	
   714  0002E2                     l1196:
   715  0002E2  5029               	movf	___ftmul@sign,w,c
   716  0002E4  0F7B               	addlw	123
   717  0002E6  2624               	addwf	___ftmul@exp,f,c
   718  0002E8  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
   719  0002EC  5020               	movf	___ftmul@f2+2,w,c
   720  0002EE  1A29               	xorwf	___ftmul@sign,f,c
   721  0002F0  0E80               	movlw	128
   722  0002F2  1629               	andwf	___ftmul@sign,f,c
   723  0002F4  8E1C               	bsf	___ftmul@f1+1,7,c
   724  0002F6  8E1F               	bsf	___ftmul@f2+1,7,c
   725  0002F8  0EFF               	movlw	255
   726  0002FA  161E               	andwf	___ftmul@f2,f,c
   727  0002FC  0EFF               	movlw	255
   728  0002FE  161F               	andwf	___ftmul@f2+1,f,c
   729  000300  0E00               	movlw	0
   730  000302  1620               	andwf	___ftmul@f2+2,f,c
   731  000304  0E00               	movlw	0
   732  000306  6E25               	movwf	___ftmul@f3_as_product,c
   733  000308  0E00               	movlw	0
   734  00030A  6E26               	movwf	___ftmul@f3_as_product+1,c
   735  00030C  0E00               	movlw	0
   736  00030E  6E27               	movwf	___ftmul@f3_as_product+2,c
   737  000310  0E07               	movlw	7
   738  000312  6E28               	movwf	___ftmul@cntr,c
   739  000314                     l1210:
   740  000314  A01B               	btfss	___ftmul@f1,0,c
   741  000316  D006               	goto	l1214
   742  000318  501E               	movf	___ftmul@f2,w,c
   743  00031A  2625               	addwf	___ftmul@f3_as_product,f,c
   744  00031C  501F               	movf	___ftmul@f2+1,w,c
   745  00031E  2226               	addwfc	___ftmul@f3_as_product+1,f,c
   746  000320  5020               	movf	___ftmul@f2+2,w,c
   747  000322  2227               	addwfc	___ftmul@f3_as_product+2,f,c
   748  000324                     l1214:
   749  000324  90D8               	bcf	status,0,c
   750  000326  321D               	rrcf	___ftmul@f1+2,f,c
   751  000328  321C               	rrcf	___ftmul@f1+1,f,c
   752  00032A  321B               	rrcf	___ftmul@f1,f,c
   753  00032C  90D8               	bcf	status,0,c
   754  00032E  361E               	rlcf	___ftmul@f2,f,c
   755  000330  361F               	rlcf	___ftmul@f2+1,f,c
   756  000332  3620               	rlcf	___ftmul@f2+2,f,c
   757  000334  2E28               	decfsz	___ftmul@cntr,f,c
   758  000336  D7EE               	goto	l1210
   759  000338  0E09               	movlw	9
   760  00033A  6E28               	movwf	___ftmul@cntr,c
   761  00033C                     l1220:
   762  00033C  A01B               	btfss	___ftmul@f1,0,c
   763  00033E  D006               	goto	l1224
   764  000340  501E               	movf	___ftmul@f2,w,c
   765  000342  2625               	addwf	___ftmul@f3_as_product,f,c
   766  000344  501F               	movf	___ftmul@f2+1,w,c
   767  000346  2226               	addwfc	___ftmul@f3_as_product+1,f,c
   768  000348  5020               	movf	___ftmul@f2+2,w,c
   769  00034A  2227               	addwfc	___ftmul@f3_as_product+2,f,c
   770  00034C                     l1224:
   771  00034C  90D8               	bcf	status,0,c
   772  00034E  321D               	rrcf	___ftmul@f1+2,f,c
   773  000350  321C               	rrcf	___ftmul@f1+1,f,c
   774  000352  321B               	rrcf	___ftmul@f1,f,c
   775  000354  90D8               	bcf	status,0,c
   776  000356  3227               	rrcf	___ftmul@f3_as_product+2,f,c
   777  000358  3226               	rrcf	___ftmul@f3_as_product+1,f,c
   778  00035A  3225               	rrcf	___ftmul@f3_as_product,f,c
   779  00035C  2E28               	decfsz	___ftmul@cntr,f,c
   780  00035E  D7EE               	goto	l1220
   781  000360  C025  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
   782  000364  C026  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
   783  000368  C027  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
   784  00036C  C024  F012         	movff	___ftmul@exp,___ftpack@exp
   785  000370  C029  F013         	movff	___ftmul@sign,___ftpack@sign
   786  000374  EC36  F002         	call	___ftpack	;wreg free
   787  000378  C00F  F01B         	movff	?___ftpack,?___ftmul
   788  00037C  C010  F01C         	movff	?___ftpack+1,?___ftmul+1
   789  000380  C011  F01D         	movff	?___ftpack+2,?___ftmul+2
   790  000384  0012               	return	
   791  000386                     __end_of___ftmul:
   792                           	opt stack 0
   793                           tblptru	equ	0xFF8
   794                           intcon	equ	0xFF2
   795                           status	equ	0xFD8
   796                           
   797 ;; *************** function ___ftdiv *****************
   798 ;; Defined at:
   799 ;;		line 54 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftdiv.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  f1              3   41[COMRAM] float 
   802 ;;  f2              3   44[COMRAM] float 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  f3              3   51[COMRAM] float 
   805 ;;  sign            1   55[COMRAM] unsigned char 
   806 ;;  exp             1   54[COMRAM] unsigned char 
   807 ;;  cntr            1   50[COMRAM] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  3   41[COMRAM] float 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   817 ;;      Params:         6       0       0       0       0       0       0
   818 ;;      Locals:         6       0       0       0       0       0       0
   819 ;;      Temps:          3       0       0       0       0       0       0
   820 ;;      Totals:        15       0       0       0       0       0       0
   821 ;;Total ram usage:       15 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    2
   824 ;; This function calls:
   825 ;;		___ftpack
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text3
   832  000386                     __ptext3:
   833                           	opt stack 0
   834  000386                     ___ftdiv:
   835                           	opt stack 28
   836                           
   837                           ;incstack = 0
   838  000386  C02C  F030         	movff	___ftdiv@f1+2,??___ftdiv
   839  00038A  6A31               	clrf	(??___ftdiv+1)& (0+255),c
   840  00038C  6A32               	clrf	(??___ftdiv+2)& (0+255),c
   841  00038E  342B               	rlcf	___ftdiv@f1+1,w,c
   842  000390  3630               	rlcf	??___ftdiv& (0+255),f,c
   843  000392  E301               	bnc	u501
   844  000394  8031               	bsf	(??___ftdiv+1)& (0+255),0,c
   845  000396                     u501:
   846  000396  5030               	movf	??___ftdiv,w,c
   847  000398  6E37               	movwf	___ftdiv@exp,c
   848  00039A  5037               	movf	___ftdiv@exp,w,c
   849  00039C  A4D8               	btfss	status,2,c
   850  00039E  D007               	goto	l1144
   851  0003A0  0E00               	movlw	0
   852  0003A2  6E2A               	movwf	?___ftdiv,c
   853  0003A4  0E00               	movlw	0
   854  0003A6  6E2B               	movwf	?___ftdiv+1,c
   855  0003A8  0E00               	movlw	0
   856  0003AA  6E2C               	movwf	?___ftdiv+2,c
   857  0003AC  0012               	return	
   858  0003AE                     l1144:
   859  0003AE  C02F  F030         	movff	___ftdiv@f2+2,??___ftdiv
   860  0003B2  6A31               	clrf	(??___ftdiv+1)& (0+255),c
   861  0003B4  6A32               	clrf	(??___ftdiv+2)& (0+255),c
   862  0003B6  342E               	rlcf	___ftdiv@f2+1,w,c
   863  0003B8  3630               	rlcf	??___ftdiv& (0+255),f,c
   864  0003BA  E301               	bnc	u521
   865  0003BC  8031               	bsf	(??___ftdiv+1)& (0+255),0,c
   866  0003BE                     u521:
   867  0003BE  5030               	movf	??___ftdiv,w,c
   868  0003C0  6E38               	movwf	___ftdiv@sign,c
   869  0003C2  5038               	movf	___ftdiv@sign,w,c
   870  0003C4  A4D8               	btfss	status,2,c
   871  0003C6  D007               	goto	l1150
   872  0003C8  0E00               	movlw	0
   873  0003CA  6E2A               	movwf	?___ftdiv,c
   874  0003CC  0E00               	movlw	0
   875  0003CE  6E2B               	movwf	?___ftdiv+1,c
   876  0003D0  0E00               	movlw	0
   877  0003D2  6E2C               	movwf	?___ftdiv+2,c
   878  0003D4  0012               	return	
   879  0003D6                     l1150:
   880  0003D6  0E00               	movlw	0
   881  0003D8  6E34               	movwf	___ftdiv@f3,c
   882  0003DA  0E00               	movlw	0
   883  0003DC  6E35               	movwf	___ftdiv@f3+1,c
   884  0003DE  0E00               	movlw	0
   885  0003E0  6E36               	movwf	___ftdiv@f3+2,c
   886  0003E2  5038               	movf	___ftdiv@sign,w,c
   887  0003E4  0F89               	addlw	137
   888  0003E6  5E37               	subwf	___ftdiv@exp,f,c
   889  0003E8  C02C  F038         	movff	___ftdiv@f1+2,___ftdiv@sign
   890  0003EC  502F               	movf	___ftdiv@f2+2,w,c
   891  0003EE  1A38               	xorwf	___ftdiv@sign,f,c
   892  0003F0  0E80               	movlw	128
   893  0003F2  1638               	andwf	___ftdiv@sign,f,c
   894  0003F4  8E2B               	bsf	___ftdiv@f1+1,7,c
   895  0003F6  0EFF               	movlw	255
   896  0003F8  162A               	andwf	___ftdiv@f1,f,c
   897  0003FA  0EFF               	movlw	255
   898  0003FC  162B               	andwf	___ftdiv@f1+1,f,c
   899  0003FE  0E00               	movlw	0
   900  000400  162C               	andwf	___ftdiv@f1+2,f,c
   901  000402  8E2E               	bsf	___ftdiv@f2+1,7,c
   902  000404  0EFF               	movlw	255
   903  000406  162D               	andwf	___ftdiv@f2,f,c
   904  000408  0EFF               	movlw	255
   905  00040A  162E               	andwf	___ftdiv@f2+1,f,c
   906  00040C  0E00               	movlw	0
   907  00040E  162F               	andwf	___ftdiv@f2+2,f,c
   908  000410  0E18               	movlw	24
   909  000412  6E33               	movwf	___ftdiv@cntr,c
   910  000414                     l1170:
   911  000414  90D8               	bcf	status,0,c
   912  000416  3634               	rlcf	___ftdiv@f3,f,c
   913  000418  3635               	rlcf	___ftdiv@f3+1,f,c
   914  00041A  3636               	rlcf	___ftdiv@f3+2,f,c
   915  00041C  502D               	movf	___ftdiv@f2,w,c
   916  00041E  5C2A               	subwf	___ftdiv@f1,w,c
   917  000420  502E               	movf	___ftdiv@f2+1,w,c
   918  000422  582B               	subwfb	___ftdiv@f1+1,w,c
   919  000424  502F               	movf	___ftdiv@f2+2,w,c
   920  000426  582C               	subwfb	___ftdiv@f1+2,w,c
   921  000428  A0D8               	btfss	status,0,c
   922  00042A  D007               	goto	l351
   923  00042C  502D               	movf	___ftdiv@f2,w,c
   924  00042E  5E2A               	subwf	___ftdiv@f1,f,c
   925  000430  502E               	movf	___ftdiv@f2+1,w,c
   926  000432  5A2B               	subwfb	___ftdiv@f1+1,f,c
   927  000434  502F               	movf	___ftdiv@f2+2,w,c
   928  000436  5A2C               	subwfb	___ftdiv@f1+2,f,c
   929  000438  8034               	bsf	___ftdiv@f3,0,c
   930  00043A                     l351:
   931  00043A  90D8               	bcf	status,0,c
   932  00043C  362A               	rlcf	___ftdiv@f1,f,c
   933  00043E  362B               	rlcf	___ftdiv@f1+1,f,c
   934  000440  362C               	rlcf	___ftdiv@f1+2,f,c
   935  000442  2E33               	decfsz	___ftdiv@cntr,f,c
   936  000444  D7E7               	goto	l1170
   937  000446  C034  F00F         	movff	___ftdiv@f3,___ftpack@arg
   938  00044A  C035  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
   939  00044E  C036  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
   940  000452  C037  F012         	movff	___ftdiv@exp,___ftpack@exp
   941  000456  C038  F013         	movff	___ftdiv@sign,___ftpack@sign
   942  00045A  EC36  F002         	call	___ftpack	;wreg free
   943  00045E  C00F  F02A         	movff	?___ftpack,?___ftdiv
   944  000462  C010  F02B         	movff	?___ftpack+1,?___ftdiv+1
   945  000466  C011  F02C         	movff	?___ftpack+2,?___ftdiv+2
   946  00046A  0012               	return	
   947  00046C                     __end_of___ftdiv:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           intcon	equ	0xFF2
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function ___awtoft *****************
   954 ;; Defined at:
   955 ;;		line 32 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\awtoft.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  c               2   22[COMRAM] int 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  sign            1   25[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  3   22[COMRAM] float 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   969 ;;      Params:         3       0       0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0
   972 ;;      Totals:         4       0       0       0       0       0       0
   973 ;;Total ram usage:        4 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    2
   976 ;; This function calls:
   977 ;;		___ftpack
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text4
   984  0006E4                     __ptext4:
   985                           	opt stack 0
   986  0006E4                     ___awtoft:
   987                           	opt stack 28
   988                           
   989                           ;incstack = 0
   990  0006E4  0E00               	movlw	0
   991  0006E6  6E1A               	movwf	___awtoft@sign,c
   992  0006E8  AE18               	btfss	___awtoft@c+1,7,c
   993  0006EA  D006               	goto	l1240
   994  0006EC  6C17               	negf	___awtoft@c,c
   995  0006EE  1E18               	comf	___awtoft@c+1,f,c
   996  0006F0  B0D8               	btfsc	status,0,c
   997  0006F2  2A18               	incf	___awtoft@c+1,f,c
   998  0006F4  0E01               	movlw	1
   999  0006F6  6E1A               	movwf	___awtoft@sign,c
  1000  0006F8                     l1240:
  1001  0006F8  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  1002  0006FC  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  1003  000700  6A11               	clrf	___ftpack@arg+2,c
  1004  000702  0E8E               	movlw	142
  1005  000704  6E12               	movwf	___ftpack@exp,c
  1006  000706  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  1007  00070A  EC36  F002         	call	___ftpack	;wreg free
  1008  00070E  C00F  F017         	movff	?___ftpack,?___awtoft
  1009  000712  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  1010  000716  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  1011  00071A  0012               	return	
  1012  00071C                     __end_of___awtoft:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           intcon	equ	0xFF2
  1016                           status	equ	0xFD8
  1017                           
  1018 ;; *************** function ___ftpack *****************
  1019 ;; Defined at:
  1020 ;;		line 62 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\float.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  arg             3   14[COMRAM] unsigned um
  1023 ;;  exp             1   17[COMRAM] unsigned char 
  1024 ;;  sign            1   18[COMRAM] unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  3   14[COMRAM] float 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         5       0       0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0       0       0
  1038 ;;      Temps:          3       0       0       0       0       0       0
  1039 ;;      Totals:         8       0       0       0       0       0       0
  1040 ;;Total ram usage:        8 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		___awtoft
  1047 ;;		___ftdiv
  1048 ;;		___ftmul
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text5
  1053  00046C                     __ptext5:
  1054                           	opt stack 0
  1055  00046C                     ___ftpack:
  1056                           	opt stack 28
  1057                           
  1058                           ;incstack = 0
  1059  00046C  5012               	movf	___ftpack@exp,w,c
  1060  00046E  B4D8               	btfsc	status,2,c
  1061  000470  D005               	goto	l1040
  1062  000472  500F               	movf	___ftpack@arg,w,c
  1063  000474  1010               	iorwf	___ftpack@arg+1,w,c
  1064  000476  1011               	iorwf	___ftpack@arg+2,w,c
  1065  000478  A4D8               	btfss	status,2,c
  1066  00047A  D00C               	goto	l1046
  1067  00047C                     l1040:
  1068  00047C  0E00               	movlw	0
  1069  00047E  6E0F               	movwf	?___ftpack,c
  1070  000480  0E00               	movlw	0
  1071  000482  6E10               	movwf	?___ftpack+1,c
  1072  000484  0E00               	movlw	0
  1073  000486  6E11               	movwf	?___ftpack+2,c
  1074  000488  0012               	return	
  1075  00048A                     l1044:
  1076  00048A  2A12               	incf	___ftpack@exp,f,c
  1077  00048C  90D8               	bcf	status,0,c
  1078  00048E  3211               	rrcf	___ftpack@arg+2,f,c
  1079  000490  3210               	rrcf	___ftpack@arg+1,f,c
  1080  000492  320F               	rrcf	___ftpack@arg,f,c
  1081  000494                     l1046:
  1082  000494  0E00               	movlw	0
  1083  000496  140F               	andwf	___ftpack@arg,w,c
  1084  000498  6E14               	movwf	??___ftpack& (0+255),c
  1085  00049A  0E00               	movlw	0
  1086  00049C  1410               	andwf	___ftpack@arg+1,w,c
  1087  00049E  6E15               	movwf	(??___ftpack+1)& (0+255),c
  1088  0004A0  0EFE               	movlw	254
  1089  0004A2  1411               	andwf	___ftpack@arg+2,w,c
  1090  0004A4  6E16               	movwf	(??___ftpack+2)& (0+255),c
  1091  0004A6  5014               	movf	??___ftpack,w,c
  1092  0004A8  1015               	iorwf	??___ftpack+1,w,c
  1093  0004AA  1016               	iorwf	??___ftpack+2,w,c
  1094  0004AC  B4D8               	btfsc	status,2,c
  1095  0004AE  D00C               	goto	l1052
  1096  0004B0  D7EC               	goto	l1044
  1097  0004B2                     l1048:
  1098  0004B2  2A12               	incf	___ftpack@exp,f,c
  1099  0004B4  0E01               	movlw	1
  1100  0004B6  260F               	addwf	___ftpack@arg,f,c
  1101  0004B8  0E00               	movlw	0
  1102  0004BA  2210               	addwfc	___ftpack@arg+1,f,c
  1103  0004BC  0E00               	movlw	0
  1104  0004BE  2211               	addwfc	___ftpack@arg+2,f,c
  1105  0004C0  90D8               	bcf	status,0,c
  1106  0004C2  3211               	rrcf	___ftpack@arg+2,f,c
  1107  0004C4  3210               	rrcf	___ftpack@arg+1,f,c
  1108  0004C6  320F               	rrcf	___ftpack@arg,f,c
  1109  0004C8                     l1052:
  1110  0004C8  0E00               	movlw	0
  1111  0004CA  140F               	andwf	___ftpack@arg,w,c
  1112  0004CC  6E14               	movwf	??___ftpack& (0+255),c
  1113  0004CE  0E00               	movlw	0
  1114  0004D0  1410               	andwf	___ftpack@arg+1,w,c
  1115  0004D2  6E15               	movwf	(??___ftpack+1)& (0+255),c
  1116  0004D4  0EFF               	movlw	255
  1117  0004D6  1411               	andwf	___ftpack@arg+2,w,c
  1118  0004D8  6E16               	movwf	(??___ftpack+2)& (0+255),c
  1119  0004DA  5014               	movf	??___ftpack,w,c
  1120  0004DC  1015               	iorwf	??___ftpack+1,w,c
  1121  0004DE  1016               	iorwf	??___ftpack+2,w,c
  1122  0004E0  B4D8               	btfsc	status,2,c
  1123  0004E2  D006               	goto	l1056
  1124  0004E4  D7E6               	goto	l1048
  1125  0004E6                     l1054:
  1126  0004E6  0612               	decf	___ftpack@exp,f,c
  1127  0004E8  90D8               	bcf	status,0,c
  1128  0004EA  360F               	rlcf	___ftpack@arg,f,c
  1129  0004EC  3610               	rlcf	___ftpack@arg+1,f,c
  1130  0004EE  3611               	rlcf	___ftpack@arg+2,f,c
  1131  0004F0                     l1056:
  1132  0004F0  BE10               	btfsc	___ftpack@arg+1,7,c
  1133  0004F2  D003               	goto	l293
  1134  0004F4  0E02               	movlw	2
  1135  0004F6  6012               	cpfslt	___ftpack@exp,c
  1136  0004F8  D7F6               	goto	l1054
  1137  0004FA                     l293:
  1138  0004FA  A012               	btfss	___ftpack@exp,0,c
  1139  0004FC  9E10               	bcf	___ftpack@arg+1,7,c
  1140  0004FE  90D8               	bcf	status,0,c
  1141  000500  3212               	rrcf	___ftpack@exp,f,c
  1142  000502  5012               	movf	___ftpack@exp,w,c
  1143  000504  1211               	iorwf	___ftpack@arg+2,f,c
  1144  000506  5013               	movf	___ftpack@sign,w,c
  1145  000508  A4D8               	btfss	status,2,c
  1146  00050A  8E11               	bsf	___ftpack@arg+2,7,c
  1147  00050C  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  1148  000510  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  1149  000514  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  1150  000518  0012               	return	
  1151  00051A                     __end_of___ftpack:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           intcon	equ	0xFF2
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _Display *****************
  1158 ;; Defined at:
  1159 ;;		line 65 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  num             2   30[COMRAM] int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1173 ;;      Params:         2       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0
  1175 ;;      Temps:          1       0       0       0       0       0       0
  1176 ;;      Totals:         3       0       0       0       0       0       0
  1177 ;;Total ram usage:        3 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    2
  1180 ;; This function calls:
  1181 ;;		_Numero
  1182 ;;		___lwdiv
  1183 ;;		___lwmod
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text6
  1190  00009C                     __ptext6:
  1191                           	opt stack 0
  1192  00009C                     _Display:
  1193                           	opt stack 28
  1194                           
  1195                           ;main.c: 67: Numero(num/1000u);
  1196                           
  1197                           ;incstack = 0
  1198  00009C  C01F  F00F         	movff	Display@num,___lwdiv@dividend
  1199  0000A0  C020  F010         	movff	Display@num+1,___lwdiv@dividend+1
  1200  0000A4  0E03               	movlw	3
  1201  0000A6  6E12               	movwf	___lwdiv@divisor+1,c
  1202  0000A8  0EE8               	movlw	232
  1203  0000AA  6E11               	movwf	___lwdiv@divisor,c
  1204  0000AC  EC28  F003         	call	___lwdiv	;wreg free
  1205  0000B0  C00F  F01B         	movff	?___lwdiv,Numero@num
  1206  0000B4  C010  F01C         	movff	?___lwdiv+1,Numero@num+1
  1207  0000B8  ECE1  F002         	call	_Numero	;wreg free
  1208                           
  1209                           ;main.c: 68: PORTCbits.RC4 = 1;
  1210  0000BC  8882               	bsf	3970,4,c	;volatile
  1211                           
  1212                           ;main.c: 69: _delay((unsigned long)((10)*(8000000/4000.0)));
  1213  0000BE  0E1A               	movlw	26
  1214  0000C0  6E21               	movwf	??_Display& (0+255),c
  1215  0000C2  0EF8               	movlw	248
  1216  0000C4                     u707:
  1217  0000C4  2EE8               	decfsz	wreg,f,c
  1218  0000C6  D7FE               	bra	u707
  1219  0000C8  2E21               	decfsz	??_Display& (0+255),f,c
  1220  0000CA  D7FC               	bra	u707
  1221  0000CC  F000 F000          	nop2	
  1222                           
  1223                           ;main.c: 70: PORTCbits.RC4 = 0;
  1224  0000D0  9882               	bcf	3970,4,c	;volatile
  1225                           
  1226                           ;main.c: 72: Numero((num / 100u) % 10u);
  1227  0000D2  0E00               	movlw	0
  1228  0000D4  6E12               	movwf	___lwdiv@divisor+1,c
  1229  0000D6  0E64               	movlw	100
  1230  0000D8  6E11               	movwf	___lwdiv@divisor,c
  1231  0000DA  C01F  F00F         	movff	Display@num,___lwdiv@dividend
  1232  0000DE  C020  F010         	movff	Display@num+1,___lwdiv@dividend+1
  1233  0000E2  EC28  F003         	call	___lwdiv	;wreg free
  1234  0000E6  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  1235  0000EA  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  1236  0000EE  0E00               	movlw	0
  1237  0000F0  6E19               	movwf	___lwmod@divisor+1,c
  1238  0000F2  0E0A               	movlw	10
  1239  0000F4  6E18               	movwf	___lwmod@divisor,c
  1240  0000F6  EC51  F003         	call	___lwmod	;wreg free
  1241  0000FA  C016  F01B         	movff	?___lwmod,Numero@num
  1242  0000FE  C017  F01C         	movff	?___lwmod+1,Numero@num+1
  1243  000102  ECE1  F002         	call	_Numero	;wreg free
  1244                           
  1245                           ;main.c: 73: PORTCbits.RC5 = 1;
  1246  000106  8A82               	bsf	3970,5,c	;volatile
  1247                           
  1248                           ;main.c: 74: _delay((unsigned long)((10)*(8000000/4000.0)));
  1249  000108  0E1A               	movlw	26
  1250  00010A  6E21               	movwf	??_Display& (0+255),c
  1251  00010C  0EF8               	movlw	248
  1252  00010E                     u717:
  1253  00010E  2EE8               	decfsz	wreg,f,c
  1254  000110  D7FE               	bra	u717
  1255  000112  2E21               	decfsz	??_Display& (0+255),f,c
  1256  000114  D7FC               	bra	u717
  1257  000116  F000 F000          	nop2	
  1258                           
  1259                           ;main.c: 75: PORTCbits.RC5 = 0;
  1260  00011A  9A82               	bcf	3970,5,c	;volatile
  1261                           
  1262                           ;main.c: 77: Numero((num / 10u) % 10u);
  1263  00011C  0E00               	movlw	0
  1264  00011E  6E12               	movwf	___lwdiv@divisor+1,c
  1265  000120  0E0A               	movlw	10
  1266  000122  6E11               	movwf	___lwdiv@divisor,c
  1267  000124  C01F  F00F         	movff	Display@num,___lwdiv@dividend
  1268  000128  C020  F010         	movff	Display@num+1,___lwdiv@dividend+1
  1269  00012C  EC28  F003         	call	___lwdiv	;wreg free
  1270  000130  C00F  F016         	movff	?___lwdiv,___lwmod@dividend
  1271  000134  C010  F017         	movff	?___lwdiv+1,___lwmod@dividend+1
  1272  000138  0E00               	movlw	0
  1273  00013A  6E19               	movwf	___lwmod@divisor+1,c
  1274  00013C  0E0A               	movlw	10
  1275  00013E  6E18               	movwf	___lwmod@divisor,c
  1276  000140  EC51  F003         	call	___lwmod	;wreg free
  1277  000144  C016  F01B         	movff	?___lwmod,Numero@num
  1278  000148  C017  F01C         	movff	?___lwmod+1,Numero@num+1
  1279  00014C  ECE1  F002         	call	_Numero	;wreg free
  1280                           
  1281                           ;main.c: 78: PORTCbits.RC6 = 1;
  1282  000150  8C82               	bsf	3970,6,c	;volatile
  1283                           
  1284                           ;main.c: 79: _delay((unsigned long)((10)*(8000000/4000.0)));
  1285  000152  0E1A               	movlw	26
  1286  000154  6E21               	movwf	??_Display& (0+255),c
  1287  000156  0EF8               	movlw	248
  1288  000158                     u727:
  1289  000158  2EE8               	decfsz	wreg,f,c
  1290  00015A  D7FE               	bra	u727
  1291  00015C  2E21               	decfsz	??_Display& (0+255),f,c
  1292  00015E  D7FC               	bra	u727
  1293  000160  F000 F000          	nop2	
  1294                           
  1295                           ;main.c: 80: PORTCbits.RC6 = 0;
  1296  000164  9C82               	bcf	3970,6,c	;volatile
  1297                           
  1298                           ;main.c: 82: Numero(num % 10u);
  1299  000166  C01F  F016         	movff	Display@num,___lwmod@dividend
  1300  00016A  C020  F017         	movff	Display@num+1,___lwmod@dividend+1
  1301  00016E  0E00               	movlw	0
  1302  000170  6E19               	movwf	___lwmod@divisor+1,c
  1303  000172  0E0A               	movlw	10
  1304  000174  6E18               	movwf	___lwmod@divisor,c
  1305  000176  EC51  F003         	call	___lwmod	;wreg free
  1306  00017A  C016  F01B         	movff	?___lwmod,Numero@num
  1307  00017E  C017  F01C         	movff	?___lwmod+1,Numero@num+1
  1308  000182  ECE1  F002         	call	_Numero	;wreg free
  1309                           
  1310                           ;main.c: 83: PORTCbits.RC7 = 1;
  1311  000186  8E82               	bsf	3970,7,c	;volatile
  1312                           
  1313                           ;main.c: 84: _delay((unsigned long)((10)*(8000000/4000.0)));
  1314  000188  0E1A               	movlw	26
  1315  00018A  6E21               	movwf	??_Display& (0+255),c
  1316  00018C  0EF8               	movlw	248
  1317  00018E                     u737:
  1318  00018E  2EE8               	decfsz	wreg,f,c
  1319  000190  D7FE               	bra	u737
  1320  000192  2E21               	decfsz	??_Display& (0+255),f,c
  1321  000194  D7FC               	bra	u737
  1322  000196  F000 F000          	nop2	
  1323                           
  1324                           ;main.c: 85: PORTCbits.RC7 = 0;
  1325  00019A  9E82               	bcf	3970,7,c	;volatile
  1326  00019C  0012               	return		;funcret
  1327  00019E                     __end_of_Display:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           intcon	equ	0xFF2
  1331                           wreg	equ	0xFE8
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function ___lwmod *****************
  1335 ;; Defined at:
  1336 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  dividend        2   21[COMRAM] unsigned int 
  1339 ;;  divisor         2   23[COMRAM] unsigned int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  counter         1   25[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2   21[COMRAM] unsigned int 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1351 ;;      Params:         4       0       0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0
  1354 ;;      Totals:         5       0       0       0       0       0       0
  1355 ;;Total ram usage:        5 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_Display
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text7
  1366  0006A2                     __ptext7:
  1367                           	opt stack 0
  1368  0006A2                     ___lwmod:
  1369                           	opt stack 28
  1370                           
  1371                           ;incstack = 0
  1372  0006A2  5018               	movf	___lwmod@divisor,w,c
  1373  0006A4  1019               	iorwf	___lwmod@divisor+1,w,c
  1374  0006A6  B4D8               	btfsc	status,2,c
  1375  0006A8  D018               	goto	l481
  1376  0006AA  0E01               	movlw	1
  1377  0006AC  6E1A               	movwf	___lwmod@counter,c
  1378  0006AE  D004               	goto	l1100
  1379  0006B0                     l1098:
  1380  0006B0  90D8               	bcf	status,0,c
  1381  0006B2  3618               	rlcf	___lwmod@divisor,f,c
  1382  0006B4  3619               	rlcf	___lwmod@divisor+1,f,c
  1383  0006B6  2A1A               	incf	___lwmod@counter,f,c
  1384  0006B8                     l1100:
  1385  0006B8  AE19               	btfss	___lwmod@divisor+1,7,c
  1386  0006BA  D7FA               	goto	l1098
  1387  0006BC                     l1102:
  1388  0006BC  5018               	movf	___lwmod@divisor,w,c
  1389  0006BE  5C16               	subwf	___lwmod@dividend,w,c
  1390  0006C0  5019               	movf	___lwmod@divisor+1,w,c
  1391  0006C2  5817               	subwfb	___lwmod@dividend+1,w,c
  1392  0006C4  A0D8               	btfss	status,0,c
  1393  0006C6  D004               	goto	l1106
  1394  0006C8  5018               	movf	___lwmod@divisor,w,c
  1395  0006CA  5E16               	subwf	___lwmod@dividend,f,c
  1396  0006CC  5019               	movf	___lwmod@divisor+1,w,c
  1397  0006CE  5A17               	subwfb	___lwmod@dividend+1,f,c
  1398  0006D0                     l1106:
  1399  0006D0  90D8               	bcf	status,0,c
  1400  0006D2  3219               	rrcf	___lwmod@divisor+1,f,c
  1401  0006D4  3218               	rrcf	___lwmod@divisor,f,c
  1402  0006D6  2E1A               	decfsz	___lwmod@counter,f,c
  1403  0006D8  D7F1               	goto	l1102
  1404  0006DA                     l481:
  1405  0006DA  C016  F016         	movff	___lwmod@dividend,?___lwmod
  1406  0006DE  C017  F017         	movff	___lwmod@dividend+1,?___lwmod+1
  1407  0006E2  0012               	return		;funcret
  1408  0006E4                     __end_of___lwmod:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           intcon	equ	0xFF2
  1412                           wreg	equ	0xFE8
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function ___lwdiv *****************
  1416 ;; Defined at:
  1417 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  dividend        2   14[COMRAM] unsigned int 
  1420 ;;  divisor         2   16[COMRAM] unsigned int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  quotient        2   18[COMRAM] unsigned int 
  1423 ;;  counter         1   20[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2   14[COMRAM] unsigned int 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         4       0       0       0       0       0       0
  1434 ;;      Locals:         3       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         7       0       0       0       0       0       0
  1437 ;;Total ram usage:        7 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_Display
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text8
  1448  000650                     __ptext8:
  1449                           	opt stack 0
  1450  000650                     ___lwdiv:
  1451                           	opt stack 28
  1452                           
  1453                           ;incstack = 0
  1454  000650  0E00               	movlw	0
  1455  000652  6E14               	movwf	___lwdiv@quotient+1,c
  1456  000654  0E00               	movlw	0
  1457  000656  6E13               	movwf	___lwdiv@quotient,c
  1458  000658  5011               	movf	___lwdiv@divisor,w,c
  1459  00065A  1012               	iorwf	___lwdiv@divisor+1,w,c
  1460  00065C  B4D8               	btfsc	status,2,c
  1461  00065E  D01C               	goto	l471
  1462  000660  0E01               	movlw	1
  1463  000662  6E15               	movwf	___lwdiv@counter,c
  1464  000664  D004               	goto	l1080
  1465  000666                     l1078:
  1466  000666  90D8               	bcf	status,0,c
  1467  000668  3611               	rlcf	___lwdiv@divisor,f,c
  1468  00066A  3612               	rlcf	___lwdiv@divisor+1,f,c
  1469  00066C  2A15               	incf	___lwdiv@counter,f,c
  1470  00066E                     l1080:
  1471  00066E  AE12               	btfss	___lwdiv@divisor+1,7,c
  1472  000670  D7FA               	goto	l1078
  1473  000672                     l1082:
  1474  000672  90D8               	bcf	status,0,c
  1475  000674  3613               	rlcf	___lwdiv@quotient,f,c
  1476  000676  3614               	rlcf	___lwdiv@quotient+1,f,c
  1477  000678  5011               	movf	___lwdiv@divisor,w,c
  1478  00067A  5C0F               	subwf	___lwdiv@dividend,w,c
  1479  00067C  5012               	movf	___lwdiv@divisor+1,w,c
  1480  00067E  5810               	subwfb	___lwdiv@dividend+1,w,c
  1481  000680  A0D8               	btfss	status,0,c
  1482  000682  D005               	goto	l1090
  1483  000684  5011               	movf	___lwdiv@divisor,w,c
  1484  000686  5E0F               	subwf	___lwdiv@dividend,f,c
  1485  000688  5012               	movf	___lwdiv@divisor+1,w,c
  1486  00068A  5A10               	subwfb	___lwdiv@dividend+1,f,c
  1487  00068C  8013               	bsf	___lwdiv@quotient,0,c
  1488  00068E                     l1090:
  1489  00068E  90D8               	bcf	status,0,c
  1490  000690  3212               	rrcf	___lwdiv@divisor+1,f,c
  1491  000692  3211               	rrcf	___lwdiv@divisor,f,c
  1492  000694  2E15               	decfsz	___lwdiv@counter,f,c
  1493  000696  D7ED               	goto	l1082
  1494  000698                     l471:
  1495  000698  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  1496  00069C  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1497  0006A0  0012               	return		;funcret
  1498  0006A2                     __end_of___lwdiv:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           intcon	equ	0xFF2
  1502                           wreg	equ	0xFE8
  1503                           status	equ	0xFD8
  1504                           
  1505 ;; *************** function _Numero *****************
  1506 ;; Defined at:
  1507 ;;		line 29 in file "main.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  num             2   26[COMRAM] int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1521 ;;      Params:         2       0       0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0
  1523 ;;      Temps:          2       0       0       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_Display
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text9
  1536  0005C2                     __ptext9:
  1537                           	opt stack 0
  1538  0005C2                     _Numero:
  1539                           	opt stack 28
  1540                           
  1541                           ;main.c: 31: switch(num)
  1542                           
  1543                           ;incstack = 0
  1544  0005C2  D01E               	goto	l1030
  1545  0005C4                     l1008:
  1546                           
  1547                           ;main.c: 34: PORTD=0b11000000;
  1548  0005C4  0EC0               	movlw	192
  1549  0005C6  6E83               	movwf	3971,c	;volatile
  1550                           
  1551                           ;main.c: 35: break;
  1552  0005C8  0012               	return	
  1553  0005CA                     l1010:
  1554                           
  1555                           ;main.c: 37: PORTD=0b11111001;
  1556  0005CA  0EF9               	movlw	249
  1557  0005CC  6E83               	movwf	3971,c	;volatile
  1558                           
  1559                           ;main.c: 38: break;
  1560  0005CE  0012               	return	
  1561  0005D0                     l1012:
  1562                           
  1563                           ;main.c: 40: PORTD=0b10100100;
  1564  0005D0  0EA4               	movlw	164
  1565  0005D2  6E83               	movwf	3971,c	;volatile
  1566                           
  1567                           ;main.c: 41: break;
  1568  0005D4  0012               	return	
  1569  0005D6                     l1014:
  1570                           
  1571                           ;main.c: 43: PORTD=0b10110000;
  1572  0005D6  0EB0               	movlw	176
  1573  0005D8  6E83               	movwf	3971,c	;volatile
  1574                           
  1575                           ;main.c: 44: break;
  1576  0005DA  0012               	return	
  1577  0005DC                     l1016:
  1578                           
  1579                           ;main.c: 46: PORTD=0b10011001;
  1580  0005DC  0E99               	movlw	153
  1581  0005DE  6E83               	movwf	3971,c	;volatile
  1582                           
  1583                           ;main.c: 47: break;
  1584  0005E0  0012               	return	
  1585  0005E2                     l1018:
  1586                           
  1587                           ;main.c: 49: PORTD=0b10010010;
  1588  0005E2  0E92               	movlw	146
  1589  0005E4  6E83               	movwf	3971,c	;volatile
  1590                           
  1591                           ;main.c: 50: break;
  1592  0005E6  0012               	return	
  1593  0005E8                     l1020:
  1594                           
  1595                           ;main.c: 52: PORTD=0b10000010;
  1596  0005E8  0E82               	movlw	130
  1597  0005EA  6E83               	movwf	3971,c	;volatile
  1598                           
  1599                           ;main.c: 53: break;
  1600  0005EC  0012               	return	
  1601  0005EE                     l1022:
  1602                           
  1603                           ;main.c: 55: PORTD=0b11111000;
  1604  0005EE  0EF8               	movlw	248
  1605  0005F0  6E83               	movwf	3971,c	;volatile
  1606                           
  1607                           ;main.c: 56: break;
  1608  0005F2  0012               	return	
  1609  0005F4                     l1024:
  1610                           
  1611                           ;main.c: 58: PORTD=0b10000000;
  1612  0005F4  0E80               	movlw	128
  1613  0005F6  6E83               	movwf	3971,c	;volatile
  1614                           
  1615                           ;main.c: 59: break;
  1616  0005F8  0012               	return	
  1617  0005FA                     l1026:
  1618                           
  1619                           ;main.c: 61: PORTD=0b10010000;
  1620  0005FA  0E90               	movlw	144
  1621  0005FC  6E83               	movwf	3971,c	;volatile
  1622                           
  1623                           ;main.c: 63: }
  1624                           
  1625                           ;main.c: 62: break;
  1626  0005FE  0012               	return	
  1627  000600                     l1030:
  1628  000600  C01B  F01D         	movff	Numero@num,??_Numero
  1629  000604  C01C  F01E         	movff	Numero@num+1,??_Numero+1
  1630                           
  1631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1632                           ; Switch size 1, requested type "space"
  1633                           ; Number of cases is 1, Range of values is 0 to 0
  1634                           ; switch strategies available:
  1635                           ; Name         Instructions Cycles
  1636                           ; simple_byte            4     3 (average)
  1637                           ;	Chosen strategy is simple_byte
  1638  000608  501E               	movf	??_Numero+1,w,c
  1639  00060A  0A00               	xorlw	0	; case 0
  1640  00060C  A4D8               	btfss	status,2,c
  1641  00060E  0012               	return	
  1642                           
  1643                           ; Switch size 1, requested type "space"
  1644                           ; Number of cases is 10, Range of values is 0 to 9
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte           31    16 (average)
  1648                           ;	Chosen strategy is simple_byte
  1649  000610  501D               	movf	??_Numero,w,c
  1650  000612  0A00               	xorlw	0	; case 0
  1651  000614  B4D8               	btfsc	status,2,c
  1652  000616  D7D6               	goto	l1008
  1653  000618  0A01               	xorlw	1	; case 1
  1654  00061A  B4D8               	btfsc	status,2,c
  1655  00061C  D7D6               	goto	l1010
  1656  00061E  0A03               	xorlw	3	; case 2
  1657  000620  B4D8               	btfsc	status,2,c
  1658  000622  D7D6               	goto	l1012
  1659  000624  0A01               	xorlw	1	; case 3
  1660  000626  B4D8               	btfsc	status,2,c
  1661  000628  D7D6               	goto	l1014
  1662  00062A  0A07               	xorlw	7	; case 4
  1663  00062C  B4D8               	btfsc	status,2,c
  1664  00062E  D7D6               	goto	l1016
  1665  000630  0A01               	xorlw	1	; case 5
  1666  000632  B4D8               	btfsc	status,2,c
  1667  000634  D7D6               	goto	l1018
  1668  000636  0A03               	xorlw	3	; case 6
  1669  000638  B4D8               	btfsc	status,2,c
  1670  00063A  D7D6               	goto	l1020
  1671  00063C  0A01               	xorlw	1	; case 7
  1672  00063E  B4D8               	btfsc	status,2,c
  1673  000640  D7D6               	goto	l1022
  1674  000642  0A0F               	xorlw	15	; case 8
  1675  000644  B4D8               	btfsc	status,2,c
  1676  000646  D7D6               	goto	l1024
  1677  000648  0A01               	xorlw	1	; case 9
  1678  00064A  A4D8               	btfss	status,2,c
  1679  00064C  0012               	return	
  1680  00064E  D7D5               	goto	l1026
  1681  000650                     __end_of_Numero:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           intcon	equ	0xFF2
  1685                           wreg	equ	0xFE8
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _MY_ISR *****************
  1689 ;; Defined at:
  1690 ;;		line 16 in file "main.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1704 ;;      Params:         0       0       0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0
  1706 ;;      Temps:         14       0       0       0       0       0       0
  1707 ;;      Totals:        14       0       0       0       0       0       0
  1708 ;;Total ram usage:       14 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		Interrupt level 2
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	intcode
  1718  000008                     __pintcode:
  1719                           	opt stack 0
  1720  000008                     _MY_ISR:
  1721                           	opt stack 28
  1722                           
  1723                           ;incstack = 0
  1724  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1725  00000A  CFFA F001          	movff	pclath,??_MY_ISR
  1726  00000E  CFFB F002          	movff	pclatu,??_MY_ISR+1
  1727  000012  CFE9 F003          	movff	fsr0l,??_MY_ISR+2
  1728  000016  CFEA F004          	movff	fsr0h,??_MY_ISR+3
  1729  00001A  CFE1 F005          	movff	fsr1l,??_MY_ISR+4
  1730  00001E  CFE2 F006          	movff	fsr1h,??_MY_ISR+5
  1731  000022  CFD9 F007          	movff	fsr2l,??_MY_ISR+6
  1732  000026  CFDA F008          	movff	fsr2h,??_MY_ISR+7
  1733  00002A  CFF3 F009          	movff	prodl,??_MY_ISR+8
  1734  00002E  CFF4 F00A          	movff	prodh,??_MY_ISR+9
  1735  000032  CFF6 F00B          	movff	tblptrl,??_MY_ISR+10
  1736  000036  CFF7 F00C          	movff	tblptrh,??_MY_ISR+11
  1737  00003A  CFF8 F00D          	movff	tblptru,??_MY_ISR+12
  1738  00003E  CFF5 F00E          	movff	tablat,??_MY_ISR+13
  1739                           
  1740                           ;main.c: 18: if (PIR1bits.CCP1IF)
  1741  000042  A49E               	btfss	3998,2,c	;volatile
  1742  000044  D00B               	goto	i2l44
  1743                           
  1744                           ;main.c: 19: {
  1745                           ;main.c: 20: TMR1H = 0;
  1746  000046  0E00               	movlw	0
  1747  000048  6ECF               	movwf	4047,c	;volatile
  1748                           
  1749                           ;main.c: 21: TMR1L = 8;
  1750  00004A  0E08               	movlw	8
  1751  00004C  6ECE               	movwf	4046,c	;volatile
  1752                           
  1753                           ;main.c: 22: PIR1bits.CCP1IF = 0;
  1754  00004E  949E               	bcf	3998,2,c	;volatile
  1755                           
  1756                           ;main.c: 23: captura_h = CCPR1H;
  1757  000050  CFBF F04E          	movff	4031,_captura_h	;volatile
  1758  000054  6A4F               	clrf	_captura_h+1,c
  1759                           
  1760                           ;main.c: 24: captura_l = CCPR1L;
  1761  000056  CFBE F04C          	movff	4030,_captura_l	;volatile
  1762  00005A  6A4D               	clrf	_captura_l+1,c
  1763  00005C                     i2l44:
  1764  00005C  C00E  FFF5         	movff	??_MY_ISR+13,tablat
  1765  000060  C00D  FFF8         	movff	??_MY_ISR+12,tblptru
  1766  000064  C00C  FFF7         	movff	??_MY_ISR+11,tblptrh
  1767  000068  C00B  FFF6         	movff	??_MY_ISR+10,tblptrl
  1768  00006C  C00A  FFF4         	movff	??_MY_ISR+9,prodh
  1769  000070  C009  FFF3         	movff	??_MY_ISR+8,prodl
  1770  000074  C008  FFDA         	movff	??_MY_ISR+7,fsr2h
  1771  000078  C007  FFD9         	movff	??_MY_ISR+6,fsr2l
  1772  00007C  C006  FFE2         	movff	??_MY_ISR+5,fsr1h
  1773  000080  C005  FFE1         	movff	??_MY_ISR+4,fsr1l
  1774  000084  C004  FFEA         	movff	??_MY_ISR+3,fsr0h
  1775  000088  C003  FFE9         	movff	??_MY_ISR+2,fsr0l
  1776  00008C  C002  FFFB         	movff	??_MY_ISR+1,pclatu
  1777  000090  C001  FFFA         	movff	??_MY_ISR,pclath
  1778  000094  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1779  000096  0011               	retfie		f
  1780  000098                     __end_of_MY_ISR:
  1781                           	opt stack 0
  1782  0000                     pclatu	equ	0xFFB
  1783                           pclath	equ	0xFFA
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           intcon	equ	0xFF2
  1791                           fsr0h	equ	0xFEA
  1792                           fsr0l	equ	0xFE9
  1793                           wreg	equ	0xFE8
  1794                           fsr1h	equ	0xFE2
  1795                           fsr1l	equ	0xFE1
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           pclatu	equ	0xFFB
  1800                           pclath	equ	0xFFA
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           intcon	equ	0xFF2
  1808                           fsr0h	equ	0xFEA
  1809                           fsr0l	equ	0xFE9
  1810                           wreg	equ	0xFE8
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           fsr2h	equ	0xFDA
  1814                           fsr2l	equ	0xFD9
  1815                           status	equ	0xFD8
  1816                           
  1817                           	psect	rparam
  1818  0000                     pclatu	equ	0xFFB
  1819                           pclath	equ	0xFFA
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           intcon	equ	0xFF2
  1827                           fsr0h	equ	0xFEA
  1828                           fsr0l	equ	0xFE9
  1829                           wreg	equ	0xFE8
  1830                           fsr1h	equ	0xFE2
  1831                           fsr1l	equ	0xFE1
  1832                           fsr2h	equ	0xFDA
  1833                           fsr2l	equ	0xFD9
  1834                           status	equ	0xFD8
  1835                           
  1836                           	psect	temp
  1837  000050                     btemp:
  1838                           	opt stack 0
  1839  000050                     	ds	1
  1840  0000                     int$flags	set	btemp
  1841                           pclatu	equ	0xFFB
  1842                           pclath	equ	0xFFA
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           intcon	equ	0xFF2
  1850                           fsr0h	equ	0xFEA
  1851                           fsr0l	equ	0xFE9
  1852                           wreg	equ	0xFE8
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      79
    BANK0           160      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___fttol->___ftdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _Display->_Numero
    ___lwmod->___lwdiv
    _Numero->___lwmod

Critical Paths under _MY_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _MY_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _MY_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MY_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MY_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _MY_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _MY_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9149
                                              0 BANK0      2     2      0
                            _Display
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     316
                                             56 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2587
                                             26 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2541
                                             41 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2186
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2031
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Display                                              3     1      2    1519
                                             30 COMRAM     3     1      2
                             _Numero
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     543
                                             21 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     546
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Numero                                               4     2      2     278
                                             26 COMRAM     4     2      2
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _MY_ISR                                              14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display
     _Numero
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 _MY_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       2       5        1.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      15        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 18 19:15:16 2020

                    l351 043A                      l293 04FA                      l471 0698  
                    l481 06DA                      u501 0396                      u521 03BE  
                    u621 01AE                      u551 02A2                      u640 01E8  
                    u707 00C4                      u571 02CA                      u717 010E  
                    u645 01E0                      u727 0158                      u737 018E  
                    wreg 000FE8             ___ftdiv@cntr 0033             ___ftdiv@sign 0038  
                   l1010 05CA                     l1020 05E8                     l1012 05D0  
                   l1100 06B8                     l1022 05EE                     l1014 05D6  
                   l1030 0600                     l1102 06BC                     l1024 05F4  
                   l1016 05DC                     l1008 05C4                     l1040 047C  
                   l1026 05FA                     l1018 05E2                     l1106 06D0  
                   l1210 0314                     l1052 04C8                     l1044 048A  
                   l1220 033C                     l1054 04E6                     l1046 0494  
                   l1150 03D6                     l1214 0324                     l1080 066E  
                   l1056 04F0                     l1048 04B2                     l1240 06F8  
                   l1144 03AE                     l1224 034C                     l1090 068E  
                   l1082 0672                     l1170 0414                     l1250 01CA  
                   l1340 0540                     l1078 0666                     l1190 02BA  
                   l1280 0264                     l1272 0240                     l1098 06B0  
                   l1282 026A                     l1196 02E2                     l1268 0230  
                   l1286 0280                     l1278 0258                     i2l44 005C  
                   _main 051A             ___ftpack@arg 000F             ___ftpack@exp 0012  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0050                     prodh 000FF4                     prodl 000FF3  
                   start 0098             ___ftmul@cntr 0028          __end_of_Display 019E  
           ___param_bank 000000             ___ftmul@sign 0029             ___fttol@exp1 0047  
           ___fttol@lval 0043                    ?_main 0001          __end_of___ftdiv 046C  
        __end_of___ftmul 0386                    _T1CON 000FCD          __end_of___fttol 0292  
        __end_of___lwdiv 06A2          __end_of___lwmod 06E4                    _TMR1H 000FCF  
                  _TMR1L 000FCE                    _PORTC 000F82                    _PORTD 000F83  
                  _TRISC 000F94                    _TRISD 000F95            ___awtoft@sign 001A  
          ___ftpack@sign 0013                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 071C             __end_of_main 05C2  
                 ??_main 0060            ___fttol@sign1 0042            __activetblptr 000002  
                 _CCPR1H 000FBF                   _CCPR1L 000FBE         __end_of___awtoft 071C  
       __end_of___ftpack 051A                ??_Display 0021                   _MY_ISR 0008  
                 _Numero 05C2                ??___ftdiv 0030                ??___ftmul 0021  
              ??___fttol 003D                ??___lwdiv 0013                ??___lwmod 001A  
  ___ftmul@f3_as_product 0025                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0724  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001               ___ftdiv@f1 002A  
             ___ftdiv@f2 002D               ___ftdiv@f3 0034               ___awtoft@c 0017  
             ___ftmul@f1 001B               ___ftmul@f2 001E               ___fttol@f1 0039  
         __pcstackCOMRAM 0001               __pnvCOMRAM 0048                  ?_MY_ISR 0001  
                ?_Numero 001B                ?___awtoft 0017                ?___ftpack 000F  
                _Display 009C          __size_of_MY_ISR 0090                  __Hparam 0000  
                __Lparam 0000          __size_of_Numero 008E               _frequencia 0048  
                ___ftdiv 0386                  ___ftmul 0292                  ___fttol 019E  
                ___lwdiv 0650                  ___lwmod 06A2                  __pcinit 071C  
             ??___awtoft 001A               ??___ftpack 0014                  __ramtop 0600  
                __ptext0 051A                  __ptext1 019E                  __ptext2 0292  
                __ptext3 0386                  __ptext4 06E4                  __ptext5 046C  
                __ptext6 009C                  __ptext7 06A2                  __ptext8 0650  
                __ptext9 05C2                  _periodo 004A     end_of_initialization 0724  
          __Lmediumconst 0000                _PORTCbits 000F82              _CCP1CONbits 000FBD  
            ___ftdiv@exp 0037           __end_of_MY_ISR 0098              ___ftmul@exp 0024  
         __end_of_Numero 0650      start_initialization 071C                 ??_MY_ISR 0001  
               ??_Numero 001D                Numero@num 001B        __size_of___awtoft 0038  
      __size_of___ftpack 00AE              __pbssCOMRAM 004C            __pcstackBANK0 0060  
               ?_Display 001F         ___lwdiv@dividend 000F                _captura_h 004E  
              _captura_l 004C                __pintcode 0008                 ?___ftdiv 002A  
               ?___ftmul 001B                 ?___fttol 0039                 ?___lwdiv 000F  
               ?___lwmod 0016         ___lwdiv@quotient 0013                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __size_of_Display 0102  
               __Hrparam 0000                 __Lrparam 0000         __size_of___ftdiv 00E6  
       __size_of___ftmul 00F4         __size_of___fttol 00F4         __size_of___lwdiv 0052  
       __size_of___lwmod 0042                 ___awtoft 06E4                 ___ftpack 046C  
        ___lwdiv@divisor 0011          ___lwdiv@counter 0015            __size_of_main 00A8  
               int$flags 0050               _INTCONbits 000FF2                 intlevel2 0000  
       ___lwmod@dividend 0016          ___lwmod@divisor 0018          ___lwmod@counter 001A  
             Display@num 001F  

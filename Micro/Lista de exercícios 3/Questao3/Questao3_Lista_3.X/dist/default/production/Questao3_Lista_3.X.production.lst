

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 18 17:46:57 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.41
    31                           ; Generated 25/01/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F45K20 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _TRISB	set	3987
    65  0000                     _TXREG	set	4013
    66  0000                     _RCREG	set	4014
    67  0000                     _RCSTA	set	4011
    68  0000                     _TXSTA	set	4012
    69  0000                     _SPBRG	set	4015
    70  0000                     _T0CONbits	set	4053
    71  0000                     _IOCBbits	set	3965
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _TMR0L	set	4054
    74  0000                     _PORTBbits	set	3969
    75  0000                     _INTCON3bits	set	4080
    76  0000                     _INTCONbits	set	4082
    77  0000                     _TRMT	set	32097
    78  0000                     _CREN	set	32092
    79  0000                     _OERR	set	32089
    80  0000                     _RCIF	set	31989
    81                           
    82                           	psect	smallconst
    83  000600                     __psmallconst:
    84                           	opt stack 0
    85  000600  00                 	db	0
    86  000601                     STR_8:
    87  000601  44                 	db	68	;'D'
    88  000602  65                 	db	101	;'e'
    89  000603  73                 	db	115	;'s'
    90  000604  61                 	db	97	;'a'
    91  000605  72                 	db	114	;'r'
    92  000606  6D                 	db	109	;'m'
    93  000607  61                 	db	97	;'a'
    94  000608  6E                 	db	110	;'n'
    95  000609  64                 	db	100	;'d'
    96  00060A  6F                 	db	111	;'o'
    97  00060B  20                 	db	32
    98  00060C  61                 	db	97	;'a'
    99  00060D  6C                 	db	108	;'l'
   100  00060E  61                 	db	97	;'a'
   101  00060F  72                 	db	114	;'r'
   102  000610  61                 	db	97	;'a'
   103  000611  6D                 	db	109	;'m'
   104  000612  65                 	db	101	;'e'
   105  000613  0D                 	db	13
   106  000614  0A                 	db	10
   107  000615  00                 	db	0
   108  000616                     STR_1:
   109  000616  41                 	db	65	;'A'
   110  000617  6C                 	db	108	;'l'
   111  000618  61                 	db	97	;'a'
   112  000619  72                 	db	114	;'r'
   113  00061A  6D                 	db	109	;'m'
   114  00061B  65                 	db	101	;'e'
   115  00061C  20                 	db	32
   116  00061D  31                 	db	49	;'1'
   117  00061E  20                 	db	32
   118  00061F  61                 	db	97	;'a'
   119  000620  63                 	db	99	;'c'
   120  000621  69                 	db	105	;'i'
   121  000622  6F                 	db	111	;'o'
   122  000623  6E                 	db	110	;'n'
   123  000624  61                 	db	97	;'a'
   124  000625  64                 	db	100	;'d'
   125  000626  6F                 	db	111	;'o'
   126  000627  0D                 	db	13
   127  000628  0A                 	db	10
   128  000629  00                 	db	0
   129  00062A                     STR_2:
   130  00062A  41                 	db	65	;'A'
   131  00062B  6C                 	db	108	;'l'
   132  00062C  61                 	db	97	;'a'
   133  00062D  72                 	db	114	;'r'
   134  00062E  6D                 	db	109	;'m'
   135  00062F  65                 	db	101	;'e'
   136  000630  20                 	db	32
   137  000631  32                 	db	50	;'2'
   138  000632  20                 	db	32
   139  000633  61                 	db	97	;'a'
   140  000634  63                 	db	99	;'c'
   141  000635  69                 	db	105	;'i'
   142  000636  6F                 	db	111	;'o'
   143  000637  6E                 	db	110	;'n'
   144  000638  61                 	db	97	;'a'
   145  000639  64                 	db	100	;'d'
   146  00063A  6F                 	db	111	;'o'
   147  00063B  0D                 	db	13
   148  00063C  0A                 	db	10
   149  00063D  00                 	db	0
   150  00063E                     STR_3:
   151  00063E  41                 	db	65	;'A'
   152  00063F  6C                 	db	108	;'l'
   153  000640  61                 	db	97	;'a'
   154  000641  72                 	db	114	;'r'
   155  000642  6D                 	db	109	;'m'
   156  000643  65                 	db	101	;'e'
   157  000644  20                 	db	32
   158  000645  33                 	db	51	;'3'
   159  000646  20                 	db	32
   160  000647  61                 	db	97	;'a'
   161  000648  63                 	db	99	;'c'
   162  000649  69                 	db	105	;'i'
   163  00064A  6F                 	db	111	;'o'
   164  00064B  6E                 	db	110	;'n'
   165  00064C  61                 	db	97	;'a'
   166  00064D  64                 	db	100	;'d'
   167  00064E  6F                 	db	111	;'o'
   168  00064F  0D                 	db	13
   169  000650  0A                 	db	10
   170  000651  00                 	db	0
   171  000652                     STR_4:
   172  000652  41                 	db	65	;'A'
   173  000653  6C                 	db	108	;'l'
   174  000654  61                 	db	97	;'a'
   175  000655  72                 	db	114	;'r'
   176  000656  6D                 	db	109	;'m'
   177  000657  65                 	db	101	;'e'
   178  000658  20                 	db	32
   179  000659  34                 	db	52	;'4'
   180  00065A  20                 	db	32
   181  00065B  61                 	db	97	;'a'
   182  00065C  63                 	db	99	;'c'
   183  00065D  69                 	db	105	;'i'
   184  00065E  6F                 	db	111	;'o'
   185  00065F  6E                 	db	110	;'n'
   186  000660  61                 	db	97	;'a'
   187  000661  64                 	db	100	;'d'
   188  000662  6F                 	db	111	;'o'
   189  000663  0D                 	db	13
   190  000664  0A                 	db	10
   191  000665  00                 	db	0
   192  000666                     STR_6:
   193  000666  41                 	db	65	;'A'
   194  000667  72                 	db	114	;'r'
   195  000668  6D                 	db	109	;'m'
   196  000669  61                 	db	97	;'a'
   197  00066A  6E                 	db	110	;'n'
   198  00066B  64                 	db	100	;'d'
   199  00066C  6F                 	db	111	;'o'
   200  00066D  20                 	db	32
   201  00066E  61                 	db	97	;'a'
   202  00066F  6C                 	db	108	;'l'
   203  000670  61                 	db	97	;'a'
   204  000671  72                 	db	114	;'r'
   205  000672  61                 	db	97	;'a'
   206  000673  6D                 	db	109	;'m'
   207  000674  65                 	db	101	;'e'
   208  000675  0D                 	db	13
   209  000676  0A                 	db	10
   210  000677  00                 	db	0
   211  000678                     STR_7:
   212  000678  44                 	db	68	;'D'
   213  000679  45                 	db	69	;'E'
   214  00067A  53                 	db	83	;'S'
   215  00067B  41                 	db	65	;'A'
   216  00067C  52                 	db	82	;'R'
   217  00067D  4D                 	db	77	;'M'
   218  00067E  41                 	db	65	;'A'
   219  00067F  3E                 	db	62	;'>'
   220  000680  00                 	db	0
   221  0000                     
   222                           ; #config settings
   223  000681  00                 	db	0	; dummy byte at the end
   224  0000                     
   225                           	psect	cinit
   226  000AB0                     __pcinit:
   227                           	opt stack 0
   228  000AB0                     start_initialization:
   229                           	opt stack 0
   230  000AB0                     __initialization:
   231                           	opt stack 0
   232                           
   233                           ; Clear objects allocated to BANK0 (60 bytes)
   234  000AB0  EE00  F060         	lfsr	0,__pbssBANK0
   235  000AB4  0E3C               	movlw	60
   236  000AB6                     clear_0:
   237  000AB6  6AEE               	clrf	postinc0,c
   238  000AB8  06E8               	decf	wreg,f,c
   239  000ABA  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to COMRAM (36 bytes)
   242  000ABC  EE00  F026         	lfsr	0,__pbssCOMRAM
   243  000AC0  0E24               	movlw	36
   244  000AC2                     clear_1:
   245  000AC2  6AEE               	clrf	postinc0,c
   246  000AC4  06E8               	decf	wreg,f,c
   247  000AC6  E1FD               	bnz	clear_1
   248  000AC8                     end_of_initialization:
   249                           	opt stack 0
   250  000AC8                     __end_of__initialization:
   251                           	opt stack 0
   252  000AC8  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  000ACA  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  000ACC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  000ACE  6EF8               	movwf	tblptru,c
   256  000AD0  0100               	movlb	0
   257  000AD2  EF41  F003         	goto	_main	;jump to C main() function
   258                           tblptru	equ	0xFF8
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           
   262                           	psect	bssCOMRAM
   263  000026                     __pbssCOMRAM:
   264                           	opt stack 0
   265  000026                     _flag_uart:
   266                           	opt stack 0
   267  000026                     	ds	2
   268  000028                     _trigger_alarm:
   269                           	opt stack 0
   270  000028                     	ds	2
   271  00002A                     _Timer0_count:
   272                           	opt stack 0
   273  00002A                     	ds	2
   274  00002C                     _send:
   275                           	opt stack 0
   276  00002C                     	ds	30
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssBANK0
   282  000060                     __pbssBANK0:
   283                           	opt stack 0
   284  000060                     _command:
   285                           	opt stack 0
   286  000060                     	ds	30
   287  00007E                     _buffer:
   288                           	opt stack 0
   289  00007E                     	ds	30
   290                           tblptru	equ	0xFF8
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           
   294                           	psect	cstackBANK0
   295  00009C                     __pcstackBANK0:
   296                           	opt stack 0
   297  00009C                     UART_Init@baud_rate:
   298                           	opt stack 0
   299                           
   300                           ; 4 bytes @ 0x0
   301  00009C                     	ds	4
   302  0000A0                     ??_UART_Init:
   303                           
   304                           ; 1 bytes @ 0x4
   305  0000A0                     	ds	4
   306                           tblptru	equ	0xFF8
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	cstackCOMRAM
   311  000001                     __pcstackCOMRAM:
   312                           	opt stack 0
   313  000001                     strcpy@to:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x0
   317  000001                     	ds	2
   318  000003                     strcpy@from:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x2
   322  000003                     	ds	2
   323  000005                     strcpy@cp:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x4
   327  000005                     	ds	2
   328  000007                     ??_ISR:
   329                           
   330                           ; 1 bytes @ 0x6
   331  000007                     	ds	15
   332  000016                     ?_strcmp:
   333                           	opt stack 0
   334  000016                     ?___lldiv:
   335                           	opt stack 0
   336  000016                     UART_PutC@data:
   337                           	opt stack 0
   338  000016                     memcpy@d1:
   339                           	opt stack 0
   340  000016                     memset@p1:
   341                           	opt stack 0
   342  000016                     strcat@to:
   343                           	opt stack 0
   344  000016                     strcmp@s1:
   345                           	opt stack 0
   346  000016                     ___lldiv@dividend:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0x15
   350  000016                     	ds	1
   351  000017                     UART_Print@data:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x16
   355  000017                     	ds	1
   356  000018                     memcpy@s1:
   357                           	opt stack 0
   358  000018                     memset@c:
   359                           	opt stack 0
   360  000018                     strcat@from:
   361                           	opt stack 0
   362  000018                     strcmp@s2:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x17
   366  000018                     	ds	1
   367  000019                     ??_UART_Print:
   368                           
   369                           ; 1 bytes @ 0x18
   370  000019                     	ds	1
   371  00001A                     ??_strcmp:
   372  00001A                     memcpy@n:
   373                           	opt stack 0
   374  00001A                     memset@n:
   375                           	opt stack 0
   376  00001A                     strcat@cp:
   377                           	opt stack 0
   378  00001A                     ___lldiv@divisor:
   379                           	opt stack 0
   380                           
   381                           ; 4 bytes @ 0x19
   382  00001A                     	ds	1
   383  00001B                     UART_Print@i:
   384                           	opt stack 0
   385  00001B                     strcmp@r:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x1A
   389  00001B                     	ds	1
   390  00001C                     memcpy@d:
   391                           	opt stack 0
   392  00001C                     memset@p:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x1B
   396  00001C                     	ds	2
   397  00001E                     memcpy@s:
   398                           	opt stack 0
   399  00001E                     ___lldiv@quotient:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x1D
   403  00001E                     	ds	4
   404  000022                     ___lldiv@counter:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x21
   408  000022                     	ds	1
   409  000023                     UART_Init@n:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x22
   413  000023                     	ds	2
   414  000025                     main@c:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x24
   418  000025                     	ds	1
   419                           tblptru	equ	0xFF8
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 181 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  c               1   36[COMRAM] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         0       0       0       0       0       0       0
   443 ;;      Locals:         1       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         1       0       0       0       0       0       0
   446 ;;Total ram usage:        1 bytes
   447 ;; Hardware stack levels required when called:    4
   448 ;; This function calls:
   449 ;;		_UART_Data_Ready
   450 ;;		_UART_GetC
   451 ;;		_UART_Init
   452 ;;		_UART_Print
   453 ;;		_UART_PutC
   454 ;;		_init_interruption
   455 ;;		_init_timer
   456 ;;		_memcpy
   457 ;;		_memset
   458 ;;		_strcat
   459 ;;		_strcmp
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text0
   466  000682                     __ptext0:
   467                           	opt stack 0
   468  000682                     _main:
   469                           	opt stack 27
   470                           
   471                           ;main.c: 183: TRISB=0b01111111;
   472                           
   473                           ;incstack = 0
   474  000682  0E7F               	movlw	127
   475  000684  6E93               	movwf	3987,c	;volatile
   476                           
   477                           ;main.c: 184: UART_Init(9600);
   478  000686  0E80               	movlw	128
   479  000688  0100               	movlb	0	; () banked
   480  00068A  6F9C               	movwf	UART_Init@baud_rate& (0+255),b
   481  00068C  0E25               	movlw	37
   482  00068E  6F9D               	movwf	(UART_Init@baud_rate+1)& (0+255),b
   483  000690  0E00               	movlw	0
   484  000692  6F9E               	movwf	(UART_Init@baud_rate+2)& (0+255),b
   485  000694  0E00               	movlw	0
   486  000696  6F9F               	movwf	(UART_Init@baud_rate+3)& (0+255),b
   487  000698  ECD6  F003         	call	_UART_Init	;wreg free
   488                           
   489                           ;main.c: 185: init_interruption();
   490  00069C  EC6B  F005         	call	_init_interruption	;wreg free
   491                           
   492                           ;main.c: 186: init_timer();
   493  0006A0  EC7E  F005         	call	_init_timer	;wreg free
   494  0006A4                     l1282:
   495                           
   496                           ;main.c: 189: {
   497                           ;main.c: 190: if(flag_uart==1){
   498  0006A4  0426               	decf	_flag_uart,w,c
   499  0006A6  1027               	iorwf	_flag_uart+1,w,c
   500  0006A8  A4D8               	btfss	status,2,c
   501  0006AA  D00A               	goto	l1288
   502                           
   503                           ;main.c: 191: flag_uart=0;
   504  0006AC  0E00               	movlw	0
   505  0006AE  6E27               	movwf	_flag_uart+1,c
   506  0006B0  0E00               	movlw	0
   507  0006B2  6E26               	movwf	_flag_uart,c
   508                           
   509                           ;main.c: 192: UART_Print(send);
   510  0006B4  0E2C               	movlw	low _send
   511  0006B6  6E17               	movwf	UART_Print@data,c
   512  0006B8  0E00               	movlw	high _send
   513  0006BA  6E18               	movwf	UART_Print@data+1,c
   514  0006BC  EC87  F004         	call	_UART_Print	;wreg free
   515  0006C0                     l1288:
   516                           
   517                           ;main.c: 193: }
   518                           ;main.c: 195: if(UART_Data_Ready()){
   519  0006C0  EC96  F005         	call	_UART_Data_Ready	;wreg free
   520  0006C4  A0D8               	btfss	status,0,c
   521  0006C6  D7EE               	goto	l1282
   522                           
   523                           ;main.c: 196: char c=UART_GetC();
   524  0006C8  EC88  F005         	call	_UART_GetC	;wreg free
   525  0006CC  6E25               	movwf	main@c,c
   526                           
   527                           ;main.c: 197: if(c=='<'){
   528  0006CE  0E3C               	movlw	60
   529  0006D0  1825               	xorwf	main@c,w,c
   530  0006D2  A4D8               	btfss	status,2,c
   531  0006D4  D038               	goto	l1310
   532                           
   533                           ;main.c: 198: UART_PutC(c);
   534  0006D6  5025               	movf	main@c,w,c
   535  0006D8  EC90  F005         	call	_UART_PutC
   536                           
   537                           ;main.c: 199: while(c!='>'){
   538  0006DC  D014               	goto	l1304
   539  0006DE                     l1296:
   540                           
   541                           ;main.c: 200: if(UART_Data_Ready()){
   542  0006DE  EC96  F005         	call	_UART_Data_Ready	;wreg free
   543  0006E2  A0D8               	btfss	status,0,c
   544  0006E4  D010               	goto	l1304
   545                           
   546                           ;main.c: 201: c=UART_GetC();
   547  0006E6  EC88  F005         	call	_UART_GetC	;wreg free
   548  0006EA  6E25               	movwf	main@c,c
   549                           
   550                           ;main.c: 202: strcat(buffer,&c);
   551  0006EC  0E7E               	movlw	low _buffer
   552  0006EE  6E16               	movwf	strcat@to,c
   553  0006F0  0E00               	movlw	high _buffer
   554  0006F2  6E17               	movwf	strcat@to+1,c
   555  0006F4  0E25               	movlw	low main@c
   556  0006F6  6E18               	movwf	strcat@from,c
   557  0006F8  0E00               	movlw	high main@c
   558  0006FA  6E19               	movwf	strcat@from+1,c
   559  0006FC  ECE9  F004         	call	_strcat	;wreg free
   560                           
   561                           ;main.c: 204: UART_PutC(c);
   562  000700  5025               	movf	main@c,w,c
   563  000702  EC90  F005         	call	_UART_PutC
   564  000706                     l1304:
   565  000706  0E3E               	movlw	62
   566  000708  1825               	xorwf	main@c,w,c
   567  00070A  A4D8               	btfss	status,2,c
   568  00070C  D7E8               	goto	l1296
   569                           
   570                           ;main.c: 206: }
   571                           ;main.c: 207: }
   572                           ;main.c: 208: memcpy(command,buffer,sizeof(buffer));
   573  00070E  0E60               	movlw	low _command
   574  000710  6E16               	movwf	memcpy@d1,c
   575  000712  0E00               	movlw	high _command
   576  000714  6E17               	movwf	memcpy@d1+1,c
   577  000716  0E7E               	movlw	low _buffer
   578  000718  6E18               	movwf	memcpy@s1,c
   579  00071A  0E00               	movlw	high _buffer
   580  00071C  6E19               	movwf	memcpy@s1+1,c
   581  00071E  0E00               	movlw	0
   582  000720  6E1B               	movwf	memcpy@n+1,c
   583  000722  0E1E               	movlw	30
   584  000724  6E1A               	movwf	memcpy@n,c
   585  000726  EC0A  F005         	call	_memcpy	;wreg free
   586                           
   587                           ;main.c: 209: memset(buffer, 0, sizeof(buffer));
   588  00072A  0E7E               	movlw	low _buffer
   589  00072C  6E16               	movwf	memset@p1,c
   590  00072E  0E00               	movlw	high _buffer
   591  000730  6E17               	movwf	memset@p1+1,c
   592  000732  0E00               	movlw	0
   593  000734  6E19               	movwf	memset@c+1,c
   594  000736  0E00               	movlw	0
   595  000738  6E18               	movwf	memset@c,c
   596  00073A  0E00               	movlw	0
   597  00073C  6E1B               	movwf	memset@n+1,c
   598  00073E  0E1E               	movlw	30
   599  000740  6E1A               	movwf	memset@n,c
   600  000742  EC42  F005         	call	_memset	;wreg free
   601  000746                     l1310:
   602                           
   603                           ;main.c: 216: }
   604                           ;main.c: 219: if(strcmp(command,"ARMA>")==0){
   605  000746  0E60               	movlw	low _command
   606  000748  6E16               	movwf	strcmp@s1,c
   607  00074A  0E00               	movlw	high _command
   608  00074C  6E17               	movwf	strcmp@s1+1,c
   609  00074E  0E7B               	movlw	low (STR_7+3)
   610  000750  6E18               	movwf	strcmp@s2,c
   611  000752  0E06               	movlw	high (STR_7+3)
   612  000754  6E19               	movwf	strcmp@s2+1,c
   613  000756  ECC5  F004         	call	_strcmp	;wreg free
   614  00075A  5016               	movf	?_strcmp,w,c
   615  00075C  1017               	iorwf	?_strcmp+1,w,c
   616  00075E  A4D8               	btfss	status,2,c
   617  000760  D00B               	goto	l1318
   618                           
   619                           ;main.c: 220: UART_Print("Armando alarame\r\n");
   620  000762  0E66               	movlw	low STR_6
   621  000764  6E17               	movwf	UART_Print@data,c
   622  000766  0E06               	movlw	high STR_6
   623  000768  6E18               	movwf	UART_Print@data+1,c
   624  00076A  EC87  F004         	call	_UART_Print	;wreg free
   625                           
   626                           ;main.c: 221: trigger_alarm=1;
   627  00076E  0E00               	movlw	0
   628  000770  6E29               	movwf	_trigger_alarm+1,c
   629  000772  0E01               	movlw	1
   630  000774  6E28               	movwf	_trigger_alarm,c
   631                           
   632                           ;main.c: 222: INTCONbits.GIE=1;
   633  000776  8EF2               	bsf	intcon,7,c	;volatile
   634  000778                     l1318:
   635                           
   636                           ;main.c: 224: }
   637                           ;main.c: 225: if(strcmp(command,"DESARMA>")==0){
   638  000778  0E60               	movlw	low _command
   639  00077A  6E16               	movwf	strcmp@s1,c
   640  00077C  0E00               	movlw	high _command
   641  00077E  6E17               	movwf	strcmp@s1+1,c
   642  000780  0E78               	movlw	low STR_7
   643  000782  6E18               	movwf	strcmp@s2,c
   644  000784  0E06               	movlw	high STR_7
   645  000786  6E19               	movwf	strcmp@s2+1,c
   646  000788  ECC5  F004         	call	_strcmp	;wreg free
   647  00078C  5016               	movf	?_strcmp,w,c
   648  00078E  1017               	iorwf	?_strcmp+1,w,c
   649  000790  A4D8               	btfss	status,2,c
   650  000792  D788               	goto	l1282
   651                           
   652                           ;main.c: 226: UART_Print("Desarmando alarame\r\n");
   653  000794  0E01               	movlw	low STR_8
   654  000796  6E17               	movwf	UART_Print@data,c
   655  000798  0E06               	movlw	high STR_8
   656  00079A  6E18               	movwf	UART_Print@data+1,c
   657  00079C  EC87  F004         	call	_UART_Print	;wreg free
   658                           
   659                           ;main.c: 228: trigger_alarm=0;
   660  0007A0  0E00               	movlw	0
   661  0007A2  6E29               	movwf	_trigger_alarm+1,c
   662  0007A4  0E00               	movlw	0
   663  0007A6  6E28               	movwf	_trigger_alarm,c
   664                           
   665                           ;main.c: 229: INTCONbits.GIE=0;
   666  0007A8  9EF2               	bcf	intcon,7,c	;volatile
   667  0007AA  D77C               	goto	l1282
   668  0007AC                     __end_of_main:
   669                           	opt stack 0
   670                           tblptru	equ	0xFF8
   671                           intcon	equ	0xFF2
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           status	equ	0xFD8
   675                           
   676 ;; *************** function _strcmp *****************
   677 ;; Defined at:
   678 ;;		line 33 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\strcmp.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  s1              2   21[COMRAM] PTR const unsigned char 
   681 ;;		 -> command(30), 
   682 ;;  s2              2   23[COMRAM] PTR const unsigned char 
   683 ;;		 -> STR_7(9), STR_5(6), 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  r               1   26[COMRAM] char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  2   21[COMRAM] int 
   688 ;; Registers used:
   689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   695 ;;      Params:         4       0       0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0       0       0
   697 ;;      Temps:          1       0       0       0       0       0       0
   698 ;;      Totals:         6       0       0       0       0       0       0
   699 ;;Total ram usage:        6 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    2
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text1
   710  00098A                     __ptext1:
   711                           	opt stack 0
   712  00098A                     _strcmp:
   713                           	opt stack 28
   714                           
   715                           ;incstack = 0
   716  00098A  D004               	goto	l1146
   717  00098C                     l1144:
   718  00098C  4A16               	infsnz	strcmp@s1,f,c
   719  00098E  2A17               	incf	strcmp@s1+1,f,c
   720  000990  4A18               	infsnz	strcmp@s2,f,c
   721  000992  2A19               	incf	strcmp@s2+1,f,c
   722  000994                     l1146:
   723  000994  C016  FFD9         	movff	strcmp@s1,fsr2l
   724  000998  C017  FFDA         	movff	strcmp@s1+1,fsr2h
   725  00099C  50DF               	movf	indf2,w,c
   726  00099E  6E1A               	movwf	??_strcmp& (0+255),c
   727  0009A0  C018  FFF6         	movff	strcmp@s2,tblptrl
   728  0009A4  C019  FFF7         	movff	strcmp@s2+1,tblptrh
   729  0009A8                     	if	0	;tblptru may be non-zero
   730  0009A8                     	endif
   731  0009A8                     	if	0	;tblptru may be non-zero
   732  0009A8                     	endif
   733  0009A8  0008               	tblrd		*
   734  0009AA  50F5               	movf	tablat,w,c
   735  0009AC  0800               	sublw	0
   736  0009AE  241A               	addwf	??_strcmp,w,c
   737  0009B0  6E1B               	movwf	strcmp@r,c
   738  0009B2  501B               	movf	strcmp@r,w,c
   739  0009B4  A4D8               	btfss	status,2,c
   740  0009B6  D007               	goto	l1150
   741  0009B8  C016  FFD9         	movff	strcmp@s1,fsr2l
   742  0009BC  C017  FFDA         	movff	strcmp@s1+1,fsr2h
   743  0009C0  50DF               	movf	indf2,w,c
   744  0009C2  A4D8               	btfss	status,2,c
   745  0009C4  D7E3               	goto	l1144
   746  0009C6                     l1150:
   747  0009C6  501B               	movf	strcmp@r,w,c
   748  0009C8  6E16               	movwf	?_strcmp,c
   749  0009CA  6A17               	clrf	?_strcmp+1,c
   750  0009CC  BE16               	btfsc	?_strcmp,7,c
   751  0009CE  0617               	decf	?_strcmp+1,f,c
   752  0009D0  0012               	return	
   753  0009D2                     __end_of_strcmp:
   754                           	opt stack 0
   755                           tblptru	equ	0xFF8
   756                           tblptrh	equ	0xFF7
   757                           tblptrl	equ	0xFF6
   758                           tablat	equ	0xFF5
   759                           intcon	equ	0xFF2
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           indf2	equ	0xFDF
   763                           fsr2h	equ	0xFDA
   764                           fsr2l	equ	0xFD9
   765                           status	equ	0xFD8
   766                           
   767 ;; *************** function _strcat *****************
   768 ;; Defined at:
   769 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\strcat.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  to              2   21[COMRAM] PTR unsigned char 
   772 ;;		 -> buffer(30), 
   773 ;;  from            2   23[COMRAM] PTR const unsigned char 
   774 ;;		 -> main@c(1), 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  cp              2   25[COMRAM] PTR unsigned char 
   777 ;;		 -> buffer(30), 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  2   21[COMRAM] PTR unsigned char 
   780 ;; Registers used:
   781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   787 ;;      Params:         4       0       0       0       0       0       0
   788 ;;      Locals:         2       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0
   790 ;;      Totals:         6       0       0       0       0       0       0
   791 ;;Total ram usage:        6 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    2
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text2
   802  0009D2                     __ptext2:
   803                           	opt stack 0
   804  0009D2                     _strcat:
   805                           	opt stack 28
   806                           
   807                           ;incstack = 0
   808  0009D2  C016  F01A         	movff	strcat@to,strcat@cp
   809  0009D6  C017  F01B         	movff	strcat@to+1,strcat@cp+1
   810  0009DA  D002               	goto	l1118
   811  0009DC                     l1116:
   812  0009DC  4A1A               	infsnz	strcat@cp,f,c
   813  0009DE  2A1B               	incf	strcat@cp+1,f,c
   814  0009E0                     l1118:
   815  0009E0  C01A  FFD9         	movff	strcat@cp,fsr2l
   816  0009E4  C01B  FFDA         	movff	strcat@cp+1,fsr2h
   817  0009E8  50DF               	movf	indf2,w,c
   818  0009EA  B4D8               	btfsc	status,2,c
   819  0009EC  D005               	goto	l1122
   820  0009EE  D7F6               	goto	l1116
   821  0009F0                     l1120:
   822  0009F0  4A1A               	infsnz	strcat@cp,f,c
   823  0009F2  2A1B               	incf	strcat@cp+1,f,c
   824  0009F4  4A18               	infsnz	strcat@from,f,c
   825  0009F6  2A19               	incf	strcat@from+1,f,c
   826  0009F8                     l1122:
   827  0009F8  C018  FFD9         	movff	strcat@from,fsr2l
   828  0009FC  C019  FFDA         	movff	strcat@from+1,fsr2h
   829  000A00  C01A  FFE1         	movff	strcat@cp,fsr1l
   830  000A04  C01B  FFE2         	movff	strcat@cp+1,fsr1h
   831  000A08  CFDF FFE7          	movff	indf2,indf1
   832  000A0C  50E7               	movf	indf1,w,c
   833  000A0E  B4D8               	btfsc	status,2,c
   834  000A10  0012               	return	
   835  000A12  D7EE               	goto	l1120
   836  000A14                     __end_of_strcat:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           intcon	equ	0xFF2
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           indf1	equ	0xFE7
   846                           fsr1h	equ	0xFE2
   847                           fsr1l	equ	0xFE1
   848                           indf2	equ	0xFDF
   849                           fsr2h	equ	0xFDA
   850                           fsr2l	equ	0xFD9
   851                           status	equ	0xFD8
   852                           
   853 ;; *************** function _memset *****************
   854 ;; Defined at:
   855 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\memset.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  p1              2   21[COMRAM] PTR void 
   858 ;;		 -> buffer(30), 
   859 ;;  c               2   23[COMRAM] int 
   860 ;;  n               2   25[COMRAM] unsigned int 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  p               2   27[COMRAM] PTR unsigned char 
   863 ;;		 -> buffer(30), 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  2   21[COMRAM] PTR void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         6       0       0       0       0       0       0
   874 ;;      Locals:         2       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0
   876 ;;      Totals:         8       0       0       0       0       0       0
   877 ;;Total ram usage:        8 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    2
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text3
   888  000A84                     __ptext3:
   889                           	opt stack 0
   890  000A84                     _memset:
   891                           	opt stack 28
   892                           
   893                           ;incstack = 0
   894  000A84  C016  F01C         	movff	memset@p1,memset@p
   895  000A88  C017  F01D         	movff	memset@p1+1,memset@p+1
   896  000A8C  D008               	goto	l1140
   897  000A8E                     l1136:
   898  000A8E  C01C  FFD9         	movff	memset@p,fsr2l
   899  000A92  C01D  FFDA         	movff	memset@p+1,fsr2h
   900  000A96  C018  FFDF         	movff	memset@c,indf2
   901  000A9A  4A1C               	infsnz	memset@p,f,c
   902  000A9C  2A1D               	incf	memset@p+1,f,c
   903  000A9E                     l1140:
   904  000A9E  061A               	decf	memset@n,f,c
   905  000AA0  A0D8               	btfss	status,0,c
   906  000AA2  061B               	decf	memset@n+1,f,c
   907  000AA4  281A               	incf	memset@n,w,c
   908  000AA6  E1F3               	bnz	l1136
   909  000AA8  281B               	incf	memset@n+1,w,c
   910  000AAA  B4D8               	btfsc	status,2,c
   911  000AAC  0012               	return	
   912  000AAE  D7EF               	goto	l1136
   913  000AB0                     __end_of_memset:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           intcon	equ	0xFF2
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           indf1	equ	0xFE7
   923                           fsr1h	equ	0xFE2
   924                           fsr1l	equ	0xFE1
   925                           indf2	equ	0xFDF
   926                           fsr2h	equ	0xFDA
   927                           fsr2l	equ	0xFD9
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _memcpy *****************
   931 ;; Defined at:
   932 ;;		line 11 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\memcpy.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  d1              2   21[COMRAM] PTR void 
   935 ;;		 -> command(30), 
   936 ;;  s1              2   23[COMRAM] PTR const void 
   937 ;;		 -> buffer(30), 
   938 ;;  n               2   25[COMRAM] unsigned int 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  s               2   29[COMRAM] PTR const unsigned char 
   941 ;;		 -> buffer(30), 
   942 ;;  d               2   27[COMRAM] PTR unsigned char 
   943 ;;		 -> command(30), 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2   21[COMRAM] PTR void 
   946 ;; Registers used:
   947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         6       0       0       0       0       0       0
   954 ;;      Locals:         4       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0
   956 ;;      Totals:        10       0       0       0       0       0       0
   957 ;;Total ram usage:       10 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    2
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text4
   968  000A14                     __ptext4:
   969                           	opt stack 0
   970  000A14                     _memcpy:
   971                           	opt stack 28
   972                           
   973                           ;incstack = 0
   974  000A14  C018  F01E         	movff	memcpy@s1,memcpy@s
   975  000A18  C019  F01F         	movff	memcpy@s1+1,memcpy@s+1
   976  000A1C  C016  F01C         	movff	memcpy@d1,memcpy@d
   977  000A20  C017  F01D         	movff	memcpy@d1+1,memcpy@d+1
   978  000A24  D00E               	goto	l1132
   979  000A26                     l1126:
   980  000A26  C01E  FFD9         	movff	memcpy@s,fsr2l
   981  000A2A  C01F  FFDA         	movff	memcpy@s+1,fsr2h
   982  000A2E  C01C  FFE1         	movff	memcpy@d,fsr1l
   983  000A32  C01D  FFE2         	movff	memcpy@d+1,fsr1h
   984  000A36  CFDF FFE7          	movff	indf2,indf1
   985  000A3A  4A1E               	infsnz	memcpy@s,f,c
   986  000A3C  2A1F               	incf	memcpy@s+1,f,c
   987  000A3E  4A1C               	infsnz	memcpy@d,f,c
   988  000A40  2A1D               	incf	memcpy@d+1,f,c
   989  000A42                     l1132:
   990  000A42  061A               	decf	memcpy@n,f,c
   991  000A44  A0D8               	btfss	status,0,c
   992  000A46  061B               	decf	memcpy@n+1,f,c
   993  000A48  281A               	incf	memcpy@n,w,c
   994  000A4A  E1ED               	bnz	l1126
   995  000A4C  281B               	incf	memcpy@n+1,w,c
   996  000A4E  B4D8               	btfsc	status,2,c
   997  000A50  0012               	return	
   998  000A52  D7E9               	goto	l1126
   999  000A54                     __end_of_memcpy:
  1000                           	opt stack 0
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           intcon	equ	0xFF2
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           indf1	equ	0xFE7
  1009                           fsr1h	equ	0xFE2
  1010                           fsr1l	equ	0xFE1
  1011                           indf2	equ	0xFDF
  1012                           fsr2h	equ	0xFDA
  1013                           fsr2l	equ	0xFD9
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _init_timer *****************
  1017 ;; Defined at:
  1018 ;;		line 116 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1032 ;;      Params:         0       0       0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    2
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text5
  1047  000AFC                     __ptext5:
  1048                           	opt stack 0
  1049  000AFC                     _init_timer:
  1050                           	opt stack 28
  1051                           
  1052                           ;main.c: 117: INTCONbits.PEIE=1;
  1053                           
  1054                           ;incstack = 0
  1055  000AFC  8CF2               	bsf	intcon,6,c	;volatile
  1056                           
  1057                           ;main.c: 118: INTCONbits.TMR0IE=1;
  1058  000AFE  8AF2               	bsf	intcon,5,c	;volatile
  1059                           
  1060                           ;main.c: 119: INTCONbits.TMR0IF=0;
  1061  000B00  94F2               	bcf	intcon,2,c	;volatile
  1062                           
  1063                           ;main.c: 120: T0CONbits.TMR0ON=1;
  1064  000B02  8ED5               	bsf	4053,7,c	;volatile
  1065                           
  1066                           ;main.c: 121: T0CONbits.T08BIT=1;
  1067  000B04  8CD5               	bsf	4053,6,c	;volatile
  1068                           
  1069                           ;main.c: 122: T0CONbits.T0CS=0;
  1070  000B06  9AD5               	bcf	4053,5,c	;volatile
  1071                           
  1072                           ;main.c: 124: TMR0L=0;
  1073  000B08  0E00               	movlw	0
  1074  000B0A  6ED6               	movwf	4054,c	;volatile
  1075                           
  1076                           ;main.c: 126: INTCONbits.GIE=1;
  1077  000B0C  8EF2               	bsf	intcon,7,c	;volatile
  1078  000B0E  0012               	return		;funcret
  1079  000B10                     __end_of_init_timer:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           intcon	equ	0xFF2
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           indf1	equ	0xFE7
  1089                           fsr1h	equ	0xFE2
  1090                           fsr1l	equ	0xFE1
  1091                           indf2	equ	0xFDF
  1092                           fsr2h	equ	0xFDA
  1093                           fsr2l	equ	0xFD9
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _init_interruption *****************
  1097 ;; Defined at:
  1098 ;;		line 86 in file "main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		None
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    2
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text6
  1127  000AD6                     __ptext6:
  1128                           	opt stack 0
  1129  000AD6                     _init_interruption:
  1130                           	opt stack 28
  1131                           
  1132                           ;main.c: 87: INTCON2bits.RBPU=0;
  1133                           
  1134                           ;incstack = 0
  1135  000AD6  9EF1               	bcf	intcon2,7,c	;volatile
  1136                           
  1137                           ;main.c: 89: INTCONbits.INT0IF=0;
  1138  000AD8  92F2               	bcf	intcon,1,c	;volatile
  1139                           
  1140                           ;main.c: 90: INTCONbits.INT0IE=1;
  1141  000ADA  88F2               	bsf	intcon,4,c	;volatile
  1142                           
  1143                           ;main.c: 92: INTCON3bits.INT1IF=0;
  1144  000ADC  90F0               	bcf	intcon3,0,c	;volatile
  1145                           
  1146                           ;main.c: 93: INTCON3bits.INT1IE=1;
  1147  000ADE  86F0               	bsf	intcon3,3,c	;volatile
  1148                           
  1149                           ;main.c: 95: INTCON3bits.INT2IF=0;
  1150  000AE0  92F0               	bcf	intcon3,1,c	;volatile
  1151                           
  1152                           ;main.c: 96: INTCON3bits.INT2IE=1;
  1153  000AE2  88F0               	bsf	intcon3,4,c	;volatile
  1154                           
  1155                           ;main.c: 98: INTCONbits.RBIE=1;
  1156  000AE4  86F2               	bsf	intcon,3,c	;volatile
  1157                           
  1158                           ;main.c: 99: INTCONbits.RBIF=0;
  1159  000AE6  90F2               	bcf	intcon,0,c	;volatile
  1160                           
  1161                           ;main.c: 100: IOCBbits.IOCB4=1;
  1162  000AE8  887D               	bsf	3965,4,c	;volatile
  1163                           
  1164                           ;main.c: 101: IOCBbits.IOCB5=0;
  1165  000AEA  9A7D               	bcf	3965,5,c	;volatile
  1166                           
  1167                           ;main.c: 102: IOCBbits.IOCB6=0;
  1168  000AEC  9C7D               	bcf	3965,6,c	;volatile
  1169                           
  1170                           ;main.c: 103: IOCBbits.IOCB7=0;
  1171  000AEE  9E7D               	bcf	3965,7,c	;volatile
  1172                           
  1173                           ;main.c: 104: INTCON2bits.RBIP=1;
  1174  000AF0  80F1               	bsf	intcon2,0,c	;volatile
  1175                           
  1176                           ;main.c: 106: INTCON2bits.INTEDG0=1;
  1177  000AF2  8CF1               	bsf	intcon2,6,c	;volatile
  1178                           
  1179                           ;main.c: 107: INTCON2bits.INTEDG1=1;
  1180  000AF4  8AF1               	bsf	intcon2,5,c	;volatile
  1181                           
  1182                           ;main.c: 108: INTCON2bits.INTEDG2=1;
  1183  000AF6  88F1               	bsf	intcon2,4,c	;volatile
  1184                           
  1185                           ;main.c: 112: INTCONbits.GIE=1;
  1186  000AF8  8EF2               	bsf	intcon,7,c	;volatile
  1187  000AFA  0012               	return		;funcret
  1188  000AFC                     __end_of_init_interruption:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           intcon	equ	0xFF2
  1195                           intcon2	equ	0xFF1
  1196                           intcon3	equ	0xFF0
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           indf1	equ	0xFE7
  1200                           fsr1h	equ	0xFE2
  1201                           fsr1l	equ	0xFE1
  1202                           indf2	equ	0xFDF
  1203                           fsr2h	equ	0xFDA
  1204                           fsr2l	equ	0xFD9
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function _UART_Print *****************
  1208 ;; Defined at:
  1209 ;;		line 175 in file "main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  data            2   22[COMRAM] PTR const unsigned char 
  1212 ;;		 -> STR_8(21), STR_6(18), send(30), 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  i               1   26[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1224 ;;      Params:         2       0       0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0       0       0
  1227 ;;      Totals:         5       0       0       0       0       0       0
  1228 ;;Total ram usage:        5 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		_UART_PutC
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text7
  1239  00090E                     __ptext7:
  1240                           	opt stack 0
  1241  00090E                     _UART_Print:
  1242                           	opt stack 27
  1243                           
  1244                           ;main.c: 177: uint8_t i = 0;
  1245                           
  1246                           ;incstack = 0
  1247  00090E  0E00               	movlw	0
  1248  000910  6E1B               	movwf	UART_Print@i,c
  1249                           
  1250                           ;main.c: 178: while (data[i]!='\0')
  1251  000912  D01D               	goto	l1112
  1252  000914                     l1108:
  1253                           
  1254                           ;main.c: 179: UART_PutC (data[i++]);
  1255  000914  501B               	movf	UART_Print@i,w,c
  1256  000916  0D01               	mullw	1
  1257  000918  C017  F019         	movff	UART_Print@data,??_UART_Print
  1258  00091C  C018  F01A         	movff	UART_Print@data+1,??_UART_Print+1
  1259  000920  50F3               	movf	prodl,w,c
  1260  000922  2619               	addwf	??_UART_Print,f,c
  1261  000924  50F4               	movf	prodh,w,c
  1262  000926  221A               	addwfc	??_UART_Print+1,f,c
  1263  000928  C019  FFF6         	movff	??_UART_Print,tblptrl
  1264  00092C  C01A  FFF7         	movff	??_UART_Print+1,tblptrh
  1265  000930  6AF8               	clrf	tblptru,c
  1266  000932  0E05               	movlw	(high __ramtop+-1)
  1267  000934  64F7               	cpfsgt	tblptrh,c
  1268  000936  D003               	bra	u557
  1269  000938  0008               	tblrd		*
  1270  00093A  50F5               	movf	tablat,w,c
  1271  00093C  D005               	bra	u550
  1272  00093E                     u557:
  1273  00093E  CFF6 FFE1          	movff	tblptrl,fsr1l
  1274  000942  CFF7 FFE2          	movff	tblptrh,fsr1h
  1275  000946  50E7               	movf	indf1,w,c
  1276  000948                     u550:
  1277  000948  EC90  F005         	call	_UART_PutC
  1278  00094C  2A1B               	incf	UART_Print@i,f,c
  1279  00094E                     l1112:
  1280  00094E  501B               	movf	UART_Print@i,w,c
  1281  000950  0D01               	mullw	1
  1282  000952  C017  F019         	movff	UART_Print@data,??_UART_Print
  1283  000956  C018  F01A         	movff	UART_Print@data+1,??_UART_Print+1
  1284  00095A  50F3               	movf	prodl,w,c
  1285  00095C  2619               	addwf	??_UART_Print,f,c
  1286  00095E  50F4               	movf	prodh,w,c
  1287  000960  221A               	addwfc	??_UART_Print+1,f,c
  1288  000962  C019  FFF6         	movff	??_UART_Print,tblptrl
  1289  000966  C01A  FFF7         	movff	??_UART_Print+1,tblptrh
  1290  00096A  6AF8               	clrf	tblptru,c
  1291  00096C  0E05               	movlw	(high __ramtop+-1)
  1292  00096E  64F7               	cpfsgt	tblptrh,c
  1293  000970  D003               	bra	u567
  1294  000972  0008               	tblrd		*
  1295  000974  50F5               	movf	tablat,w,c
  1296  000976  D005               	bra	u560
  1297  000978                     u567:
  1298  000978  CFF6 FFE1          	movff	tblptrl,fsr1l
  1299  00097C  CFF7 FFE2          	movff	tblptrh,fsr1h
  1300  000980  50E7               	movf	indf1,w,c
  1301  000982                     u560:
  1302  000982  0900               	iorlw	0
  1303  000984  B4D8               	btfsc	status,2,c
  1304  000986  0012               	return	
  1305  000988  D7C5               	goto	l1108
  1306  00098A                     __end_of_UART_Print:
  1307                           	opt stack 0
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           prodh	equ	0xFF4
  1313                           prodl	equ	0xFF3
  1314                           intcon	equ	0xFF2
  1315                           intcon2	equ	0xFF1
  1316                           intcon3	equ	0xFF0
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           indf1	equ	0xFE7
  1320                           fsr1h	equ	0xFE2
  1321                           fsr1l	equ	0xFE1
  1322                           indf2	equ	0xFDF
  1323                           fsr2h	equ	0xFDA
  1324                           fsr2l	equ	0xFD9
  1325                           status	equ	0xFD8
  1326                           
  1327 ;; *************** function _UART_PutC *****************
  1328 ;; Defined at:
  1329 ;;		line 169 in file "main.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  data            1    wreg     const unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  data            1   21[COMRAM] const unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1343 ;;      Params:         0       0       0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0
  1346 ;;      Totals:         1       0       0       0       0       0       0
  1347 ;;Total ram usage:        1 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    2
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_UART_Print
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text8
  1359  000B20                     __ptext8:
  1360                           	opt stack 0
  1361  000B20                     _UART_PutC:
  1362                           	opt stack 28
  1363                           
  1364                           ;incstack = 0
  1365                           ;UART_PutC@data stored from wreg
  1366  000B20  6E16               	movwf	UART_PutC@data,c
  1367  000B22                     l95:
  1368  000B22  A2AC               	btfss	4012,1,c	;volatile
  1369  000B24  D7FE               	goto	l95
  1370                           
  1371                           ;main.c: 172: TXREG = data;
  1372  000B26  C016  FFAD         	movff	UART_PutC@data,4013	;volatile
  1373  000B2A  0012               	return		;funcret
  1374  000B2C                     __end_of_UART_PutC:
  1375                           	opt stack 0
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           prodh	equ	0xFF4
  1381                           prodl	equ	0xFF3
  1382                           intcon	equ	0xFF2
  1383                           intcon2	equ	0xFF1
  1384                           intcon3	equ	0xFF0
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           indf1	equ	0xFE7
  1388                           fsr1h	equ	0xFE2
  1389                           fsr1l	equ	0xFE1
  1390                           indf2	equ	0xFDF
  1391                           fsr2h	equ	0xFDA
  1392                           fsr2l	equ	0xFD9
  1393                           status	equ	0xFD8
  1394                           
  1395 ;; *************** function _UART_Init *****************
  1396 ;; Defined at:
  1397 ;;		line 129 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  baud_rate       4    0[BANK0 ] const unsigned long 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  n               2   34[COMRAM] int 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1411 ;;      Params:         0       4       0       0       0       0       0
  1412 ;;      Locals:         2       0       0       0       0       0       0
  1413 ;;      Temps:          0       4       0       0       0       0       0
  1414 ;;      Totals:         2       8       0       0       0       0       0
  1415 ;;Total ram usage:       10 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    3
  1418 ;; This function calls:
  1419 ;;		___lldiv
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text9
  1426  0007AC                     __ptext9:
  1427                           	opt stack 0
  1428  0007AC                     _UART_Init:
  1429                           	opt stack 27
  1430                           
  1431                           ;main.c: 131: int16_t n = ( 4000000 / (16 * baud_rate) ) - 1;
  1432                           
  1433                           ;incstack = 0
  1434  0007AC  0E00               	movlw	0
  1435  0007AE  6E16               	movwf	___lldiv@dividend,c
  1436  0007B0  0E09               	movlw	9
  1437  0007B2  6E17               	movwf	___lldiv@dividend+1,c
  1438  0007B4  0E3D               	movlw	61
  1439  0007B6  6E18               	movwf	___lldiv@dividend+2,c
  1440  0007B8  0E00               	movlw	0
  1441  0007BA  6E19               	movwf	___lldiv@dividend+3,c
  1442  0007BC  C09C  F0A0         	movff	UART_Init@baud_rate,??_UART_Init
  1443  0007C0  C09D  F0A1         	movff	UART_Init@baud_rate+1,??_UART_Init+1
  1444  0007C4  C09E  F0A2         	movff	UART_Init@baud_rate+2,??_UART_Init+2
  1445  0007C8  C09F  F0A3         	movff	UART_Init@baud_rate+3,??_UART_Init+3
  1446  0007CC  0E04               	movlw	4
  1447  0007CE                     u835:
  1448  0007CE  90D8               	bcf	status,0,c
  1449  0007D0  0100               	movlb	0	; () banked
  1450  0007D2  37A0               	rlcf	??_UART_Init& (0+255),f,b
  1451  0007D4  37A1               	rlcf	(??_UART_Init+1)& (0+255),f,b
  1452  0007D6  37A2               	rlcf	(??_UART_Init+2)& (0+255),f,b
  1453  0007D8  37A3               	rlcf	(??_UART_Init+3)& (0+255),f,b
  1454  0007DA  2EE8               	decfsz	wreg,f,c
  1455  0007DC  D7F8               	goto	u835
  1456  0007DE  C0A0  F01A         	movff	??_UART_Init,___lldiv@divisor
  1457  0007E2  C0A1  F01B         	movff	??_UART_Init+1,___lldiv@divisor+1
  1458  0007E6  C0A2  F01C         	movff	??_UART_Init+2,___lldiv@divisor+2
  1459  0007EA  C0A3  F01D         	movff	??_UART_Init+3,___lldiv@divisor+3
  1460  0007EE  EC46  F004         	call	___lldiv	;wreg free
  1461  0007F2  0EFF               	movlw	255
  1462  0007F4  2416               	addwf	?___lldiv,w,c
  1463  0007F6  6E23               	movwf	UART_Init@n,c
  1464  0007F8  0EFF               	movlw	255
  1465  0007FA  2017               	addwfc	?___lldiv+1,w,c
  1466  0007FC  6E24               	movwf	UART_Init@n+1,c
  1467                           
  1468                           ;main.c: 133: if (n < 0)
  1469  0007FE  AE24               	btfss	UART_Init@n+1,7,c
  1470  000800  D004               	goto	l1262
  1471                           
  1472                           ;main.c: 134: n = 0;
  1473  000802  0E00               	movlw	0
  1474  000804  6E24               	movwf	UART_Init@n+1,c
  1475  000806  0E00               	movlw	0
  1476  000808  6E23               	movwf	UART_Init@n,c
  1477  00080A                     l1262:
  1478                           
  1479                           ;main.c: 136: if (n > 255)
  1480  00080A  BE24               	btfsc	UART_Init@n+1,7,c
  1481  00080C  D038               	goto	l79
  1482  00080E  0424               	decf	UART_Init@n+1,w,c
  1483  000810  A0D8               	btfss	status,0,c
  1484  000812  D035               	goto	l79
  1485                           
  1486                           ;main.c: 137: {
  1487                           ;main.c: 138: n = ( 4000000 / (64 * baud_rate) ) - 1;
  1488  000814  0E00               	movlw	0
  1489  000816  6E16               	movwf	___lldiv@dividend,c
  1490  000818  0E09               	movlw	9
  1491  00081A  6E17               	movwf	___lldiv@dividend+1,c
  1492  00081C  0E3D               	movlw	61
  1493  00081E  6E18               	movwf	___lldiv@dividend+2,c
  1494  000820  0E00               	movlw	0
  1495  000822  6E19               	movwf	___lldiv@dividend+3,c
  1496  000824  C09C  F0A0         	movff	UART_Init@baud_rate,??_UART_Init
  1497  000828  C09D  F0A1         	movff	UART_Init@baud_rate+1,??_UART_Init+1
  1498  00082C  C09E  F0A2         	movff	UART_Init@baud_rate+2,??_UART_Init+2
  1499  000830  C09F  F0A3         	movff	UART_Init@baud_rate+3,??_UART_Init+3
  1500  000834  0E06               	movlw	6
  1501  000836                     u865:
  1502  000836  90D8               	bcf	status,0,c
  1503  000838  0100               	movlb	0	; () banked
  1504  00083A  37A0               	rlcf	??_UART_Init& (0+255),f,b
  1505  00083C  37A1               	rlcf	(??_UART_Init+1)& (0+255),f,b
  1506  00083E  37A2               	rlcf	(??_UART_Init+2)& (0+255),f,b
  1507  000840  37A3               	rlcf	(??_UART_Init+3)& (0+255),f,b
  1508  000842  2EE8               	decfsz	wreg,f,c
  1509  000844  D7F8               	goto	u865
  1510  000846  C0A0  F01A         	movff	??_UART_Init,___lldiv@divisor
  1511  00084A  C0A1  F01B         	movff	??_UART_Init+1,___lldiv@divisor+1
  1512  00084E  C0A2  F01C         	movff	??_UART_Init+2,___lldiv@divisor+2
  1513  000852  C0A3  F01D         	movff	??_UART_Init+3,___lldiv@divisor+3
  1514  000856  EC46  F004         	call	___lldiv	;wreg free
  1515  00085A  0EFF               	movlw	255
  1516  00085C  2416               	addwf	?___lldiv,w,c
  1517  00085E  6E23               	movwf	UART_Init@n,c
  1518  000860  0EFF               	movlw	255
  1519  000862  2017               	addwfc	?___lldiv+1,w,c
  1520  000864  6E24               	movwf	UART_Init@n+1,c
  1521                           
  1522                           ;main.c: 139: if (n > 255)
  1523  000866  BE24               	btfsc	UART_Init@n+1,7,c
  1524  000868  D006               	goto	l1270
  1525  00086A  0424               	decf	UART_Init@n+1,w,c
  1526  00086C  A0D8               	btfss	status,0,c
  1527  00086E  D003               	goto	l1270
  1528                           
  1529                           ;main.c: 140: n = 255;
  1530  000870  0E00               	movlw	0
  1531  000872  6E24               	movwf	UART_Init@n+1,c
  1532  000874  6823               	setf	UART_Init@n,c
  1533  000876                     l1270:
  1534                           
  1535                           ;main.c: 141: SPBRG = n;
  1536  000876  C023  FFAF         	movff	UART_Init@n,4015	;volatile
  1537                           
  1538                           ;main.c: 142: TXSTA = 0x20;
  1539  00087A  0E20               	movlw	32
  1540  00087C  D003               	goto	L1
  1541  00087E                     l79:
  1542                           
  1543                           ;main.c: 145: else
  1544                           ;main.c: 146: {
  1545                           ;main.c: 147: SPBRG = n;
  1546  00087E  C023  FFAF         	movff	UART_Init@n,4015	;volatile
  1547                           
  1548                           ;main.c: 148: TXSTA = 0x24;
  1549  000882  0E24               	movlw	36
  1550  000884                     L1:
  1551  000884  6EAC               	movwf	4012,c	;volatile
  1552                           
  1553                           ;main.c: 149: }
  1554                           ;main.c: 151: RCSTA = 0x90;
  1555  000886  0E90               	movlw	144
  1556  000888  6EAB               	movwf	4011,c	;volatile
  1557  00088A  0012               	return		;funcret
  1558  00088C                     __end_of_UART_Init:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           prodh	equ	0xFF4
  1565                           prodl	equ	0xFF3
  1566                           intcon	equ	0xFF2
  1567                           intcon2	equ	0xFF1
  1568                           intcon3	equ	0xFF0
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           indf1	equ	0xFE7
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           indf2	equ	0xFDF
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function ___lldiv *****************
  1580 ;; Defined at:
  1581 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  dividend        4   21[COMRAM] unsigned long 
  1584 ;;  divisor         4   25[COMRAM] unsigned long 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  quotient        4   29[COMRAM] unsigned long 
  1587 ;;  counter         1   33[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  4   21[COMRAM] unsigned long 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1597 ;;      Params:         8       0       0       0       0       0       0
  1598 ;;      Locals:         5       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0
  1600 ;;      Totals:        13       0       0       0       0       0       0
  1601 ;;Total ram usage:       13 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    2
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_UART_Init
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text10
  1612  00088C                     __ptext10:
  1613                           	opt stack 0
  1614  00088C                     ___lldiv:
  1615                           	opt stack 27
  1616                           
  1617                           ;incstack = 0
  1618  00088C  0E00               	movlw	0
  1619  00088E  6E1E               	movwf	___lldiv@quotient,c
  1620  000890  0E00               	movlw	0
  1621  000892  6E1F               	movwf	___lldiv@quotient+1,c
  1622  000894  0E00               	movlw	0
  1623  000896  6E20               	movwf	___lldiv@quotient+2,c
  1624  000898  0E00               	movlw	0
  1625  00089A  6E21               	movwf	___lldiv@quotient+3,c
  1626  00089C  501A               	movf	___lldiv@divisor,w,c
  1627  00089E  101B               	iorwf	___lldiv@divisor+1,w,c
  1628  0008A0  101C               	iorwf	___lldiv@divisor+2,w,c
  1629  0008A2  101D               	iorwf	___lldiv@divisor+3,w,c
  1630  0008A4  B4D8               	btfsc	status,2,c
  1631  0008A6  D02A               	goto	l469
  1632  0008A8  0E01               	movlw	1
  1633  0008AA  6E22               	movwf	___lldiv@counter,c
  1634  0008AC  D006               	goto	l1044
  1635  0008AE                     l1042:
  1636  0008AE  90D8               	bcf	status,0,c
  1637  0008B0  361A               	rlcf	___lldiv@divisor,f,c
  1638  0008B2  361B               	rlcf	___lldiv@divisor+1,f,c
  1639  0008B4  361C               	rlcf	___lldiv@divisor+2,f,c
  1640  0008B6  361D               	rlcf	___lldiv@divisor+3,f,c
  1641  0008B8  2A22               	incf	___lldiv@counter,f,c
  1642  0008BA                     l1044:
  1643  0008BA  AE1D               	btfss	___lldiv@divisor+3,7,c
  1644  0008BC  D7F8               	goto	l1042
  1645  0008BE                     l1046:
  1646  0008BE  90D8               	bcf	status,0,c
  1647  0008C0  361E               	rlcf	___lldiv@quotient,f,c
  1648  0008C2  361F               	rlcf	___lldiv@quotient+1,f,c
  1649  0008C4  3620               	rlcf	___lldiv@quotient+2,f,c
  1650  0008C6  3621               	rlcf	___lldiv@quotient+3,f,c
  1651  0008C8  501A               	movf	___lldiv@divisor,w,c
  1652  0008CA  5C16               	subwf	___lldiv@dividend,w,c
  1653  0008CC  501B               	movf	___lldiv@divisor+1,w,c
  1654  0008CE  5817               	subwfb	___lldiv@dividend+1,w,c
  1655  0008D0  501C               	movf	___lldiv@divisor+2,w,c
  1656  0008D2  5818               	subwfb	___lldiv@dividend+2,w,c
  1657  0008D4  501D               	movf	___lldiv@divisor+3,w,c
  1658  0008D6  5819               	subwfb	___lldiv@dividend+3,w,c
  1659  0008D8  A0D8               	btfss	status,0,c
  1660  0008DA  D009               	goto	l1054
  1661  0008DC  501A               	movf	___lldiv@divisor,w,c
  1662  0008DE  5E16               	subwf	___lldiv@dividend,f,c
  1663  0008E0  501B               	movf	___lldiv@divisor+1,w,c
  1664  0008E2  5A17               	subwfb	___lldiv@dividend+1,f,c
  1665  0008E4  501C               	movf	___lldiv@divisor+2,w,c
  1666  0008E6  5A18               	subwfb	___lldiv@dividend+2,f,c
  1667  0008E8  501D               	movf	___lldiv@divisor+3,w,c
  1668  0008EA  5A19               	subwfb	___lldiv@dividend+3,f,c
  1669  0008EC  801E               	bsf	___lldiv@quotient,0,c
  1670  0008EE                     l1054:
  1671  0008EE  90D8               	bcf	status,0,c
  1672  0008F0  321D               	rrcf	___lldiv@divisor+3,f,c
  1673  0008F2  321C               	rrcf	___lldiv@divisor+2,f,c
  1674  0008F4  321B               	rrcf	___lldiv@divisor+1,f,c
  1675  0008F6  321A               	rrcf	___lldiv@divisor,f,c
  1676  0008F8  2E22               	decfsz	___lldiv@counter,f,c
  1677  0008FA  D7E1               	goto	l1046
  1678  0008FC                     l469:
  1679  0008FC  C01E  F016         	movff	___lldiv@quotient,?___lldiv
  1680  000900  C01F  F017         	movff	___lldiv@quotient+1,?___lldiv+1
  1681  000904  C020  F018         	movff	___lldiv@quotient+2,?___lldiv+2
  1682  000908  C021  F019         	movff	___lldiv@quotient+3,?___lldiv+3
  1683  00090C  0012               	return		;funcret
  1684  00090E                     __end_of___lldiv:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           prodh	equ	0xFF4
  1691                           prodl	equ	0xFF3
  1692                           intcon	equ	0xFF2
  1693                           intcon2	equ	0xFF1
  1694                           intcon3	equ	0xFF0
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           indf1	equ	0xFE7
  1698                           fsr1h	equ	0xFE2
  1699                           fsr1l	equ	0xFE1
  1700                           indf2	equ	0xFDF
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _UART_GetC *****************
  1706 ;; Defined at:
  1707 ;;		line 158 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      unsigned char 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         0       0       0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    2
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text11
  1736  000B10                     __ptext11:
  1737                           	opt stack 0
  1738  000B10                     _UART_GetC:
  1739                           	opt stack 28
  1740  000B10                     l88:
  1741  000B10  AA9E               	btfss	3998,5,c	;volatile
  1742  000B12  D7FE               	goto	l88
  1743                           
  1744                           ;main.c: 161: if (OERR)
  1745  000B14  A2AB               	btfss	4011,1,c	;volatile
  1746  000B16  D002               	goto	l1102
  1747                           
  1748                           ;main.c: 162: {
  1749                           ;main.c: 163: CREN = 0;
  1750  000B18  98AB               	bcf	4011,4,c	;volatile
  1751                           
  1752                           ;main.c: 164: CREN = 1;
  1753  000B1A  88AB               	bsf	4011,4,c	;volatile
  1754  000B1C                     l1102:
  1755                           
  1756                           ;main.c: 165: }
  1757                           ;main.c: 166: return RCREG;
  1758  000B1C  50AE               	movf	4014,w,c	;volatile
  1759  000B1E  0012               	return	
  1760  000B20                     __end_of_UART_GetC:
  1761                           	opt stack 0
  1762                           tblptru	equ	0xFF8
  1763                           tblptrh	equ	0xFF7
  1764                           tblptrl	equ	0xFF6
  1765                           tablat	equ	0xFF5
  1766                           prodh	equ	0xFF4
  1767                           prodl	equ	0xFF3
  1768                           intcon	equ	0xFF2
  1769                           intcon2	equ	0xFF1
  1770                           intcon3	equ	0xFF0
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           indf1	equ	0xFE7
  1774                           fsr1h	equ	0xFE2
  1775                           fsr1l	equ	0xFE1
  1776                           indf2	equ	0xFDF
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _UART_Data_Ready *****************
  1782 ;; Defined at:
  1783 ;;		line 154 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1797 ;;      Params:         0       0       0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0
  1800 ;;      Totals:         0       0       0       0       0       0       0
  1801 ;;Total ram usage:        0 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    2
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text12
  1812  000B2C                     __ptext12:
  1813                           	opt stack 0
  1814  000B2C                     _UART_Data_Ready:
  1815                           	opt stack 28
  1816                           
  1817                           ;main.c: 156: return RCIF;
  1818                           
  1819                           ;incstack = 0
  1820  000B2C  BA9E               	btfsc	3998,5,c	;volatile
  1821  000B2E  D002               	goto	l1094
  1822  000B30  90D8               	bcf	status,0,c
  1823  000B32  0012               	return	
  1824  000B34                     l1094:
  1825  000B34  80D8               	bsf	status,0,c
  1826  000B36  0012               	return	
  1827  000B38                     __end_of_UART_Data_Ready:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodh	equ	0xFF4
  1834                           prodl	equ	0xFF3
  1835                           intcon	equ	0xFF2
  1836                           intcon2	equ	0xFF1
  1837                           intcon3	equ	0xFF0
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           indf1	equ	0xFE7
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           fsr2h	equ	0xFDA
  1845                           fsr2l	equ	0xFD9
  1846                           status	equ	0xFD8
  1847                           
  1848 ;; *************** function _ISR *****************
  1849 ;; Defined at:
  1850 ;;		line 29 in file "main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1864 ;;      Params:         0       0       0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0
  1866 ;;      Temps:         15       0       0       0       0       0       0
  1867 ;;      Totals:        15       0       0       0       0       0       0
  1868 ;;Total ram usage:       15 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    1
  1871 ;; This function calls:
  1872 ;;		_strcpy
  1873 ;; This function is called by:
  1874 ;;		Interrupt level 2
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	intcode
  1879  000008                     __pintcode:
  1880                           	opt stack 0
  1881  000008                     _ISR:
  1882                           	opt stack 27
  1883                           
  1884                           ;incstack = 0
  1885  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1886  00000A  CFFA F008          	movff	pclath,??_ISR+1
  1887  00000E  CFFB F009          	movff	pclatu,??_ISR+2
  1888  000012  CFE9 F00A          	movff	fsr0l,??_ISR+3
  1889  000016  CFEA F00B          	movff	fsr0h,??_ISR+4
  1890  00001A  CFE1 F00C          	movff	fsr1l,??_ISR+5
  1891  00001E  CFE2 F00D          	movff	fsr1h,??_ISR+6
  1892  000022  CFD9 F00E          	movff	fsr2l,??_ISR+7
  1893  000026  CFDA F00F          	movff	fsr2h,??_ISR+8
  1894  00002A  CFF3 F010          	movff	prodl,??_ISR+9
  1895  00002E  CFF4 F011          	movff	prodh,??_ISR+10
  1896  000032  CFF6 F012          	movff	tblptrl,??_ISR+11
  1897  000036  CFF7 F013          	movff	tblptrh,??_ISR+12
  1898  00003A  CFF8 F014          	movff	tblptru,??_ISR+13
  1899  00003E  CFF5 F015          	movff	tablat,??_ISR+14
  1900                           
  1901                           ;main.c: 30: if(INTCONbits.INT0IF==1){
  1902  000042  A2F2               	btfss	intcon,1,c	;volatile
  1903  000044  D01A               	goto	i2l1164
  1904                           
  1905                           ;main.c: 31: INTCONbits.INT0IF=0;
  1906  000046  92F2               	bcf	intcon,1,c	;volatile
  1907                           
  1908                           ;main.c: 32: if(trigger_alarm>0){
  1909  000048  BE29               	btfsc	_trigger_alarm+1,7,c
  1910  00004A  D017               	goto	i2l1164
  1911  00004C  5029               	movf	_trigger_alarm+1,w,c
  1912  00004E  E103               	bnz	i2u65_40
  1913  000050  0428               	decf	_trigger_alarm,w,c
  1914  000052  A0D8               	btfss	status,0,c
  1915  000054  D012               	goto	i2l1164
  1916  000056                     i2u65_40:
  1917                           
  1918                           ;main.c: 33: trigger_alarm=2;
  1919  000056  0E00               	movlw	0
  1920  000058  6E29               	movwf	_trigger_alarm+1,c
  1921  00005A  0E02               	movlw	2
  1922  00005C  6E28               	movwf	_trigger_alarm,c
  1923                           
  1924                           ;main.c: 34: flag_uart=1;
  1925  00005E  0E00               	movlw	0
  1926  000060  6E27               	movwf	_flag_uart+1,c
  1927  000062  0E01               	movlw	1
  1928  000064  6E26               	movwf	_flag_uart,c
  1929                           
  1930                           ;main.c: 35: strcpy(send,"Alarme 1 acionado\r\n");
  1931  000066  0E2C               	movlw	low _send
  1932  000068  6E01               	movwf	strcpy@to,c
  1933  00006A  0E00               	movlw	high _send
  1934  00006C  6E02               	movwf	strcpy@to+1,c
  1935  00006E  0E16               	movlw	low STR_1
  1936  000070  6E03               	movwf	strcpy@from,c
  1937  000072  0E06               	movlw	high STR_1
  1938  000074  6E04               	movwf	strcpy@from+1,c
  1939  000076  EC2A  F005         	call	_strcpy	;wreg free
  1940  00007A                     i2l1164:
  1941                           
  1942                           ;main.c: 36: }
  1943                           ;main.c: 41: }
  1944                           ;main.c: 43: if(INTCON3bits.INT1IF==1){
  1945  00007A  A0F0               	btfss	intcon3,0,c	;volatile
  1946  00007C  D01A               	goto	i2l1174
  1947                           
  1948                           ;main.c: 44: INTCON3bits.INT1IF=0;
  1949  00007E  90F0               	bcf	intcon3,0,c	;volatile
  1950                           
  1951                           ;main.c: 45: if(trigger_alarm>0){
  1952  000080  BE29               	btfsc	_trigger_alarm+1,7,c
  1953  000082  D017               	goto	i2l1174
  1954  000084  5029               	movf	_trigger_alarm+1,w,c
  1955  000086  E103               	bnz	i2u67_40
  1956  000088  0428               	decf	_trigger_alarm,w,c
  1957  00008A  A0D8               	btfss	status,0,c
  1958  00008C  D012               	goto	i2l1174
  1959  00008E                     i2u67_40:
  1960                           
  1961                           ;main.c: 46: trigger_alarm=2;
  1962  00008E  0E00               	movlw	0
  1963  000090  6E29               	movwf	_trigger_alarm+1,c
  1964  000092  0E02               	movlw	2
  1965  000094  6E28               	movwf	_trigger_alarm,c
  1966                           
  1967                           ;main.c: 47: flag_uart=1;
  1968  000096  0E00               	movlw	0
  1969  000098  6E27               	movwf	_flag_uart+1,c
  1970  00009A  0E01               	movlw	1
  1971  00009C  6E26               	movwf	_flag_uart,c
  1972                           
  1973                           ;main.c: 48: strcpy(send,"Alarme 2 acionado\r\n");
  1974  00009E  0E2C               	movlw	low _send
  1975  0000A0  6E01               	movwf	strcpy@to,c
  1976  0000A2  0E00               	movlw	high _send
  1977  0000A4  6E02               	movwf	strcpy@to+1,c
  1978  0000A6  0E2A               	movlw	low STR_2
  1979  0000A8  6E03               	movwf	strcpy@from,c
  1980  0000AA  0E06               	movlw	high STR_2
  1981  0000AC  6E04               	movwf	strcpy@from+1,c
  1982  0000AE  EC2A  F005         	call	_strcpy	;wreg free
  1983  0000B2                     i2l1174:
  1984                           
  1985                           ;main.c: 49: }
  1986                           ;main.c: 52: }
  1987                           ;main.c: 54: if(INTCON3bits.INT2IF==1){
  1988  0000B2  A2F0               	btfss	intcon3,1,c	;volatile
  1989  0000B4  D01A               	goto	i2l1184
  1990                           
  1991                           ;main.c: 55: INTCON3bits.INT2IF=0;
  1992  0000B6  92F0               	bcf	intcon3,1,c	;volatile
  1993                           
  1994                           ;main.c: 56: if(trigger_alarm>0){
  1995  0000B8  BE29               	btfsc	_trigger_alarm+1,7,c
  1996  0000BA  D017               	goto	i2l1184
  1997  0000BC  5029               	movf	_trigger_alarm+1,w,c
  1998  0000BE  E103               	bnz	i2u69_40
  1999  0000C0  0428               	decf	_trigger_alarm,w,c
  2000  0000C2  A0D8               	btfss	status,0,c
  2001  0000C4  D012               	goto	i2l1184
  2002  0000C6                     i2u69_40:
  2003                           
  2004                           ;main.c: 57: trigger_alarm=2;
  2005  0000C6  0E00               	movlw	0
  2006  0000C8  6E29               	movwf	_trigger_alarm+1,c
  2007  0000CA  0E02               	movlw	2
  2008  0000CC  6E28               	movwf	_trigger_alarm,c
  2009                           
  2010                           ;main.c: 58: flag_uart=1;
  2011  0000CE  0E00               	movlw	0
  2012  0000D0  6E27               	movwf	_flag_uart+1,c
  2013  0000D2  0E01               	movlw	1
  2014  0000D4  6E26               	movwf	_flag_uart,c
  2015                           
  2016                           ;main.c: 59: strcpy(send,"Alarme 3 acionado\r\n");
  2017  0000D6  0E2C               	movlw	low _send
  2018  0000D8  6E01               	movwf	strcpy@to,c
  2019  0000DA  0E00               	movlw	high _send
  2020  0000DC  6E02               	movwf	strcpy@to+1,c
  2021  0000DE  0E3E               	movlw	low STR_3
  2022  0000E0  6E03               	movwf	strcpy@from,c
  2023  0000E2  0E06               	movlw	high STR_3
  2024  0000E4  6E04               	movwf	strcpy@from+1,c
  2025  0000E6  EC2A  F005         	call	_strcpy	;wreg free
  2026  0000EA                     i2l1184:
  2027                           
  2028                           ;main.c: 60: }
  2029                           ;main.c: 63: }
  2030                           ;main.c: 65: if(INTCONbits.RBIF==1){
  2031  0000EA  A0F2               	btfss	intcon,0,c	;volatile
  2032  0000EC  D01A               	goto	i2l1194
  2033                           
  2034                           ;main.c: 66: INTCONbits.RBIF=0;
  2035  0000EE  90F2               	bcf	intcon,0,c	;volatile
  2036                           
  2037                           ;main.c: 67: if(trigger_alarm>0){
  2038  0000F0  BE29               	btfsc	_trigger_alarm+1,7,c
  2039  0000F2  D017               	goto	i2l1194
  2040  0000F4  5029               	movf	_trigger_alarm+1,w,c
  2041  0000F6  E103               	bnz	i2u71_40
  2042  0000F8  0428               	decf	_trigger_alarm,w,c
  2043  0000FA  A0D8               	btfss	status,0,c
  2044  0000FC  D012               	goto	i2l1194
  2045  0000FE                     i2u71_40:
  2046                           
  2047                           ;main.c: 68: trigger_alarm=2;
  2048  0000FE  0E00               	movlw	0
  2049  000100  6E29               	movwf	_trigger_alarm+1,c
  2050  000102  0E02               	movlw	2
  2051  000104  6E28               	movwf	_trigger_alarm,c
  2052                           
  2053                           ;main.c: 69: flag_uart=1;
  2054  000106  0E00               	movlw	0
  2055  000108  6E27               	movwf	_flag_uart+1,c
  2056  00010A  0E01               	movlw	1
  2057  00010C  6E26               	movwf	_flag_uart,c
  2058                           
  2059                           ;main.c: 70: strcpy(send,"Alarme 4 acionado\r\n");
  2060  00010E  0E2C               	movlw	low _send
  2061  000110  6E01               	movwf	strcpy@to,c
  2062  000112  0E00               	movlw	high _send
  2063  000114  6E02               	movwf	strcpy@to+1,c
  2064  000116  0E52               	movlw	low STR_4
  2065  000118  6E03               	movwf	strcpy@from,c
  2066  00011A  0E06               	movlw	high STR_4
  2067  00011C  6E04               	movwf	strcpy@from+1,c
  2068  00011E  EC2A  F005         	call	_strcpy	;wreg free
  2069  000122                     i2l1194:
  2070                           
  2071                           ;main.c: 71: }
  2072                           ;main.c: 76: }
  2073                           ;main.c: 77: if(INTCONbits.TMR0IF==1){
  2074  000122  A4F2               	btfss	intcon,2,c	;volatile
  2075  000124  D018               	goto	i2l69
  2076                           
  2077                           ;main.c: 78: if(trigger_alarm>1)PORTBbits.RB7=!PORTBbits.RB7;
  2078  000126  BE29               	btfsc	_trigger_alarm+1,7,c
  2079  000128  D013               	goto	i2l1200
  2080  00012A  5029               	movf	_trigger_alarm+1,w,c
  2081  00012C  E104               	bnz	i2u73_40
  2082  00012E  0E02               	movlw	2
  2083  000130  5C28               	subwf	_trigger_alarm,w,c
  2084  000132  A0D8               	btfss	status,0,c
  2085  000134  D00D               	goto	i2l1200
  2086  000136                     i2u73_40:
  2087  000136  BE81               	btfsc	3969,7,c	;volatile
  2088  000138  D003               	goto	i2u74_40
  2089  00013A  6A07               	clrf	??_ISR& (0+255),c
  2090  00013C  2A07               	incf	??_ISR& (0+255),f,c
  2091  00013E  D001               	goto	i2u75_48
  2092  000140                     i2u74_40:
  2093  000140  6A07               	clrf	??_ISR& (0+255),c
  2094  000142                     i2u75_48:
  2095  000142  3207               	rrcf	??_ISR,f,c
  2096  000144  3207               	rrcf	??_ISR,f,c
  2097  000146  5081               	movf	3969,w,c	;volatile
  2098  000148  1807               	xorwf	??_ISR,w,c
  2099  00014A  0B7F               	andlw	-129
  2100  00014C  1807               	xorwf	??_ISR,w,c
  2101  00014E  6E81               	movwf	3969,c	;volatile
  2102  000150                     i2l1200:
  2103                           
  2104                           ;main.c: 79: INTCONbits.TMR0IF=0;
  2105  000150  94F2               	bcf	intcon,2,c	;volatile
  2106                           
  2107                           ;main.c: 80: TMR0L=0;
  2108  000152  0E00               	movlw	0
  2109  000154  6ED6               	movwf	4054,c	;volatile
  2110  000156                     i2l69:
  2111  000156  C015  FFF5         	movff	??_ISR+14,tablat
  2112  00015A  C014  FFF8         	movff	??_ISR+13,tblptru
  2113  00015E  C013  FFF7         	movff	??_ISR+12,tblptrh
  2114  000162  C012  FFF6         	movff	??_ISR+11,tblptrl
  2115  000166  C011  FFF4         	movff	??_ISR+10,prodh
  2116  00016A  C010  FFF3         	movff	??_ISR+9,prodl
  2117  00016E  C00F  FFDA         	movff	??_ISR+8,fsr2h
  2118  000172  C00E  FFD9         	movff	??_ISR+7,fsr2l
  2119  000176  C00D  FFE2         	movff	??_ISR+6,fsr1h
  2120  00017A  C00C  FFE1         	movff	??_ISR+5,fsr1l
  2121  00017E  C00B  FFEA         	movff	??_ISR+4,fsr0h
  2122  000182  C00A  FFE9         	movff	??_ISR+3,fsr0l
  2123  000186  C009  FFFB         	movff	??_ISR+2,pclatu
  2124  00018A  C008  FFFA         	movff	??_ISR+1,pclath
  2125  00018E  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2126  000190  0011               	retfie		f
  2127  000192                     __end_of_ISR:
  2128                           	opt stack 0
  2129                           pclatu	equ	0xFFB
  2130                           pclath	equ	0xFFA
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           intcon	equ	0xFF2
  2138                           intcon2	equ	0xFF1
  2139                           intcon3	equ	0xFF0
  2140                           postinc0	equ	0xFEE
  2141                           fsr0h	equ	0xFEA
  2142                           fsr0l	equ	0xFE9
  2143                           wreg	equ	0xFE8
  2144                           indf1	equ	0xFE7
  2145                           fsr1h	equ	0xFE2
  2146                           fsr1l	equ	0xFE1
  2147                           indf2	equ	0xFDF
  2148                           fsr2h	equ	0xFDA
  2149                           fsr2l	equ	0xFD9
  2150                           status	equ	0xFD8
  2151                           
  2152 ;; *************** function _strcpy *****************
  2153 ;; Defined at:
  2154 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\strcpy.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  to              2    0[COMRAM] PTR unsigned char 
  2157 ;;		 -> send(30), 
  2158 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2159 ;;		 -> STR_4(20), STR_3(20), STR_2(20), STR_1(20), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  cp              2    4[COMRAM] PTR unsigned char 
  2162 ;;		 -> send(30), 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    0[COMRAM] PTR unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         4       0       0       0       0       0       0
  2173 ;;      Locals:         2       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0
  2175 ;;      Totals:         6       0       0       0       0       0       0
  2176 ;;Total ram usage:        6 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_ISR
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text14
  2186  000A54                     __ptext14:
  2187                           	opt stack 0
  2188  000A54                     _strcpy:
  2189                           	opt stack 27
  2190                           
  2191                           ;incstack = 0
  2192  000A54  C001  F005         	movff	strcpy@to,strcpy@cp
  2193  000A58  C002  F006         	movff	strcpy@to+1,strcpy@cp+1
  2194  000A5C  D004               	goto	i2l1062
  2195  000A5E                     i2l1060:
  2196  000A5E  4A05               	infsnz	strcpy@cp,f,c
  2197  000A60  2A06               	incf	strcpy@cp+1,f,c
  2198  000A62  4A03               	infsnz	strcpy@from,f,c
  2199  000A64  2A04               	incf	strcpy@from+1,f,c
  2200  000A66                     i2l1062:
  2201  000A66  C003  FFF6         	movff	strcpy@from,tblptrl
  2202  000A6A  C004  FFF7         	movff	strcpy@from+1,tblptrh
  2203  000A6E                     	if	0	;tblptru may be non-zero
  2204  000A6E                     	endif
  2205  000A6E                     	if	0	;tblptru may be non-zero
  2206  000A6E                     	endif
  2207  000A6E  C005  FFD9         	movff	strcpy@cp,fsr2l
  2208  000A72  C006  FFDA         	movff	strcpy@cp+1,fsr2h
  2209  000A76  0008               	tblrd		*
  2210  000A78  CFF5 FFDF          	movff	tablat,indf2
  2211  000A7C  50DF               	movf	indf2,w,c
  2212  000A7E  B4D8               	btfsc	status,2,c
  2213  000A80  0012               	return	
  2214  000A82  D7ED               	goto	i2l1060
  2215  000A84                     __end_of_strcpy:
  2216                           	opt stack 0
  2217                           pclatu	equ	0xFFB
  2218                           pclath	equ	0xFFA
  2219                           tblptru	equ	0xFF8
  2220                           tblptrh	equ	0xFF7
  2221                           tblptrl	equ	0xFF6
  2222                           tablat	equ	0xFF5
  2223                           prodh	equ	0xFF4
  2224                           prodl	equ	0xFF3
  2225                           intcon	equ	0xFF2
  2226                           intcon2	equ	0xFF1
  2227                           intcon3	equ	0xFF0
  2228                           postinc0	equ	0xFEE
  2229                           fsr0h	equ	0xFEA
  2230                           fsr0l	equ	0xFE9
  2231                           wreg	equ	0xFE8
  2232                           indf1	equ	0xFE7
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           indf2	equ	0xFDF
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           pclatu	equ	0xFFB
  2240                           pclath	equ	0xFFA
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           prodh	equ	0xFF4
  2246                           prodl	equ	0xFF3
  2247                           intcon	equ	0xFF2
  2248                           intcon2	equ	0xFF1
  2249                           intcon3	equ	0xFF0
  2250                           postinc0	equ	0xFEE
  2251                           fsr0h	equ	0xFEA
  2252                           fsr0l	equ	0xFE9
  2253                           wreg	equ	0xFE8
  2254                           indf1	equ	0xFE7
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           indf2	equ	0xFDF
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262                           	psect	rparam
  2263  0000                     pclatu	equ	0xFFB
  2264                           pclath	equ	0xFFA
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           intcon2	equ	0xFF1
  2273                           intcon3	equ	0xFF0
  2274                           postinc0	equ	0xFEE
  2275                           fsr0h	equ	0xFEA
  2276                           fsr0l	equ	0xFE9
  2277                           wreg	equ	0xFE8
  2278                           indf1	equ	0xFE7
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286                           	psect	temp
  2287  00004A                     btemp:
  2288                           	opt stack 0
  2289  00004A                     	ds	1
  2290  0000                     int$flags	set	btemp
  2291                           pclatu	equ	0xFFB
  2292                           pclath	equ	0xFFA
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           prodh	equ	0xFF4
  2298                           prodl	equ	0xFF3
  2299                           intcon	equ	0xFF2
  2300                           intcon2	equ	0xFF1
  2301                           intcon3	equ	0xFF0
  2302                           postinc0	equ	0xFEE
  2303                           fsr0h	equ	0xFEA
  2304                           fsr0l	equ	0xFE9
  2305                           wreg	equ	0xFE8
  2306                           indf1	equ	0xFE7
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           indf2	equ	0xFDF
  2310                           fsr2h	equ	0xFDA
  2311                           fsr2l	equ	0xFD9
  2312                           status	equ	0xFD8


Data Sizes:
    Strings     128
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      8      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[20]), STR_1(CODE[20]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 30
		 -> send(COMRAM[30]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 30
		 -> send(COMRAM[30]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[9]), STR_5(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 30
		 -> command(BANK0[30]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 1
		 -> main@c(COMRAM[1]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    memset@p1	PTR void  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    memset@p	PTR unsigned char  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    memcpy@d1	PTR void  size(2) Largest target is 30
		 -> command(BANK0[30]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 30
		 -> command(BANK0[30]), 

    memcpy@s1	PTR const void  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    sp__memset	PTR void  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    sp__memcpy	PTR void  size(2) Largest target is 30
		 -> command(BANK0[30]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 30
		 -> buffer(BANK0[30]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_8(CODE[21]), STR_6(CODE[18]), send(COMRAM[30]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 30
		 -> send(COMRAM[30]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv

Critical Paths under _ISR in COMRAM

    _ISR->_strcpy

Critical Paths under _main in BANK0

    _main->_UART_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2387
                                             36 COMRAM     1     1      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                  _init_interruption
                         _init_timer
                             _memcpy
                             _memset
                             _strcat
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     347
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _strcat                                               6     2      4     226
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     288
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              10     4      6     312
                                             21 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interruption                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Print                                           5     3      2     304
                                             22 COMRAM     5     3      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (1) _UART_PutC                                            1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     724
                                             34 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                             21 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 15    15      0     587
                                              6 COMRAM    15    15      0
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4     587
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _init_interruption
   _init_timer
   _memcpy
   _memset
   _strcat
   _strcmp

 _ISR (ROOT)
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      44       5       42.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D      15        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 18 17:46:57 2020

                        l79 087E                          l95 0B22                          l88 0B10  
                       l469 08FC                         _ISR 0008                         u550 0948  
                       u560 0982                         u557 093E                         u567 0978  
                       u835 07CE                         u865 0836                         wreg 000FE8  
                      ?_ISR 0001                        l1102 0B1C                        l1112 094E  
                      l1120 09F0                        l1042 08AE                        l1122 09F8  
                      l1044 08BA                        l1108 0914                        l1132 0A42  
                      l1140 0A9E                        l1116 09DC                        l1054 08EE  
                      l1046 08BE                        l1126 0A26                        l1118 09E0  
                      l1150 09C6                        l1310 0746                        l1136 0A8E  
                      l1144 098C                        l1304 0706                        l1146 0994  
                      l1094 0B34                        l1270 0876                        l1262 080A  
                      l1318 0778                        l1282 06A4                        l1296 06DE  
                      l1288 06C0                        STR_1 0616                        STR_2 062A  
                      STR_3 063E                        STR_4 0652                        STR_5 067B  
                      STR_6 0666                        STR_7 0678                        STR_8 0601  
                      _CREN 007D5C                        _RCIF 007CF5                        _OERR 007D59  
                      i2l69 0156                        _TRMT 007D61                        _main 0682  
                      _send 002C                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr2h 000FDA                        fsr0l 000FE9                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 004A                        prodh 000FF4                        prodl 000FF3  
                      start 0192           _init_interruption 0AD6                ___param_bank 000000  
                     ??_ISR 0007          ?_init_interruption 0001                       ?_main 0001  
           __end_of___lldiv 090E         ??_init_interruption 0016                       _RCREG 000FAE  
                     _RCSTA 000FAB                       _TMR0L 000FD6                       _SPBRG 000FAF  
                     _TRISB 000F93                       _TXREG 000FAD                       _TXSTA 000FAC  
               ?_UART_Print 0017          __size_of_UART_GetC 0010          __size_of_UART_Init 00E0  
        __size_of_UART_PutC 000C               _trigger_alarm 0028                       main@c 0025  
                     pclath 000FFA                       tablat 000FF5                       status 000FD8  
 __end_of_init_interruption 0AFC             __initialization 0AB0                __end_of_main 07AC  
                    ??_main 0025               __activetblptr 000002                      i2l1200 0150  
                    i2l1060 0A5E                      i2l1062 0A66                      i2l1164 007A  
                    i2l1174 00B2                      i2l1184 00EA                      i2l1194 0122  
         __end_of_UART_GetC 0B20           __end_of_UART_Init 088C           __end_of_UART_PutC 0B2C  
       __size_of_UART_Print 007C                   ??___lldiv 001E                      _buffer 007E  
                    _memcpy 0A14                      _memset 0A84                      clear_0 0AB6  
                    clear_1 0AC2                      _strcat 09D2                      _strcmp 098A  
                    _strcpy 0A54                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  __accesstop 0060  
   __end_of__initialization 0AC8             __CFG_PBADEN$OFF 000000  __size_of_init_interruption 0026  
             ___rparam_used 000001              __pcstackCOMRAM 0001                  __pbssBANK0 0060  
  __size_of_UART_Data_Ready 000C                     ?_memcpy 0016                     ?_memset 0016  
                   ?_strcat 0016                     ?_strcmp 0016                     ?_strcpy 0001  
              ??_UART_Print 0019                     i2u71_40 00FE                     i2u73_40 0136  
                   i2u65_40 0056                     i2u74_40 0140                     i2u67_40 008E  
                   i2u75_48 0142                     i2u69_40 00C6                     __Hparam 0000  
                   __Lparam 0000          __end_of_UART_Print 098A                     ___lldiv 088C  
              __psmallconst 0600                     __pcinit 0AB0             __size_of_memcpy 0040  
                _init_timer 0AFC             __size_of_memset 002C                     __ramtop 0600  
                   __ptext0 0682                     __ptext1 098A                     __ptext2 09D2  
                   __ptext3 0A84                     __ptext4 0A14                     __ptext5 0AFC  
                   __ptext6 0AD6                     __ptext7 090E                     __ptext8 0B20  
                   __ptext9 07AC                     _command 0060                   _T0CONbits 000FD5  
           __size_of_strcat 0042             __size_of_strcmp 0048             __size_of_strcpy 0030  
              __size_of_ISR 018A                 UART_Print@i 001B              UART_Print@data 0017  
      end_of_initialization 0AC8                     memcpy@d 001C                     memcpy@n 001A  
                   memcpy@s 001E                     memset@c 0018                     memset@n 001A  
                   memset@p 001C               __Lmediumconst 0000             ___lldiv@divisor 001A  
           ___lldiv@counter 0022                     postinc0 000FEE           ??_UART_Data_Ready 0016  
                   strcmp@r 001B                   _UART_GetC 0B10                   _UART_Init 07AC  
                 _UART_PutC 0B20                   _PORTBbits 000F81          UART_Init@baud_rate 009C  
                ?_UART_GetC 0001                  ?_UART_Init 009C                  ?_UART_PutC 0001  
               ?_init_timer 0001              __end_of_memcpy 0A54              __end_of_memset 0AB0  
            __end_of_strcat 0A14              __end_of_strcmp 09D2              __end_of_strcpy 0A84  
       start_initialization 0AB0                 __end_of_ISR 0192                    ??_memcpy 001C  
                  ??_memset 001C                    ??_strcat 001A                    ??_strcmp 001A  
                  ??_strcpy 0005                 __pbssCOMRAM 0026               __pcstackBANK0 009C  
       __size_of_init_timer 0014                   __pintcode 0008                    ?___lldiv 0016  
                 _flag_uart 0026                 ??_UART_GetC 0016                 ??_UART_Init 00A0  
               ??_UART_PutC 0016                 __smallconst 0600               UART_PutC@data 0016  
                UART_Init@n 0023                    _IOCBbits 000F7D             _UART_Data_Ready 0B2C  
               _INTCON2bits 000FF1                 _INTCON3bits 000FF0                    __Hrparam 0000  
                  __Lrparam 0000                _Timer0_count 002A            __size_of___lldiv 0082  
              ??_init_timer 0016                  strcat@from 0018                    __ptext10 088C  
                  __ptext11 0B10                    __ptext12 0B2C                    __ptext14 0A54  
   __end_of_UART_Data_Ready 0B38                  strcpy@from 0003               __size_of_main 012A  
        __end_of_init_timer 0B10                    int$flags 004A                  _INTCONbits 000FF2  
                  memcpy@d1 0016                    memcpy@s1 0018                    memset@p1 0016  
                  intlevel2 0000            ___lldiv@dividend 0016                    strcat@cp 001A  
                  strcat@to 0016                    strcmp@s1 0016                    strcmp@s2 0018  
          ___lldiv@quotient 001E                    strcpy@cp 0005                    strcpy@to 0001  
                _UART_Print 090E            ?_UART_Data_Ready 0001  

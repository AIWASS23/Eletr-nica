

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 18 19:25:09 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 1.41
    52                           ; Generated 25/01/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F45K20 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	smallconst
    87  000600                     __psmallconst:
    88                           	opt stack 0
    89  000600  00                 	db	0
    90  000601                     _dpowers:
    91                           	opt stack 0
    92  000601  0001               	dw	1
    93  000603  0000               	dw	0
    94  000605  000A               	dw	10
    95  000607  0000               	dw	0
    96  000609  0064               	dw	100
    97  00060B  0000               	dw	0
    98  00060D  03E8               	dw	1000
    99  00060F  0000               	dw	0
   100  000611  2710               	dw	10000
   101  000613  0000               	dw	0
   102  000615  86A0               	dw	34464
   103  000617  0001               	dw	1
   104  000619  4240               	dw	16960
   105  00061B  000F               	dw	15
   106  00061D  9680               	dw	38528
   107  00061F  0098               	dw	152
   108  000621  E100               	dw	57600
   109  000623  05F5               	dw	1525
   110  000625  CA00               	dw	51712
   111  000627  3B9A               	dw	15258
   112  000629                     __end_of_dpowers:
   113                           	opt stack 0
   114  000629                     __powers_:
   115                           	opt stack 0
   116  000629  00                 	db	0
   117  00062A  80                 	db	128
   118  00062B  3F                 	db	63
   119  00062C  00                 	db	0
   120  00062D  20                 	db	32
   121  00062E  41                 	db	65
   122  00062F  00                 	db	0
   123  000630  C8                 	db	200
   124  000631  42                 	db	66
   125  000632  00                 	db	0
   126  000633  7A                 	db	122
   127  000634  44                 	db	68
   128  000635  40                 	db	64
   129  000636  1C                 	db	28
   130  000637  46                 	db	70
   131  000638  50                 	db	80
   132  000639  C3                 	db	195
   133  00063A  47                 	db	71
   134  00063B  24                 	db	36
   135  00063C  74                 	db	116
   136  00063D  49                 	db	73
   137  00063E  97                 	db	151
   138  00063F  18                 	db	24
   139  000640  4B                 	db	75
   140  000641  BC                 	db	188
   141  000642  BE                 	db	190
   142  000643  4C                 	db	76
   143  000644  6B                 	db	107
   144  000645  6E                 	db	110
   145  000646  4E                 	db	78
   146  000647  03                 	db	3
   147  000648  15                 	db	21
   148  000649  50                 	db	80
   149  00064A  79                 	db	121
   150  00064B  AD                 	db	173
   151  00064C  60                 	db	96
   152  00064D  F3                 	db	243
   153  00064E  49                 	db	73
   154  00064F  71                 	db	113
   155  000650                     __end_of__powers_:
   156                           	opt stack 0
   157  000650                     __npowers_:
   158                           	opt stack 0
   159  000650  00                 	db	0
   160  000651  80                 	db	128
   161  000652  3F                 	db	63
   162  000653  CD                 	db	205
   163  000654  CC                 	db	204
   164  000655  3D                 	db	61
   165  000656  D7                 	db	215
   166  000657  23                 	db	35
   167  000658  3C                 	db	60
   168  000659  12                 	db	18
   169  00065A  83                 	db	131
   170  00065B  3A                 	db	58
   171  00065C  B7                 	db	183
   172  00065D  D1                 	db	209
   173  00065E  38                 	db	56
   174  00065F  C6                 	db	198
   175  000660  27                 	db	39
   176  000661  37                 	db	55
   177  000662  38                 	db	56
   178  000663  86                 	db	134
   179  000664  35                 	db	53
   180  000665  C0                 	db	192
   181  000666  D6                 	db	214
   182  000667  33                 	db	51
   183  000668  CC                 	db	204
   184  000669  2B                 	db	43
   185  00066A  32                 	db	50
   186  00066B  70                 	db	112
   187  00066C  89                 	db	137
   188  00066D  30                 	db	48
   189  00066E  E7                 	db	231
   190  00066F  DB                 	db	219
   191  000670  2E                 	db	46
   192  000671  E5                 	db	229
   193  000672  3C                 	db	60
   194  000673  1E                 	db	30
   195  000674  42                 	db	66
   196  000675  A2                 	db	162
   197  000676  0D                 	db	13
   198  000677                     __end_of__npowers_:
   199                           	opt stack 0
   200  0000                     _PORTD	set	3971
   201  0000                     _PORTCbits	set	3970
   202  0000                     _T0CONbits	set	4053
   203  0000                     _INTCON2bits	set	4081
   204  0000                     _TRISB	set	3987
   205  0000                     _TRISD	set	3989
   206  0000                     _TRISC	set	3988
   207  0000                     _TMR0L	set	4054
   208  0000                     _INTCON3bits	set	4080
   209  0000                     _INTCONbits	set	4082
   210  000677                     STR_2:
   211  000677  53                 	db	83	;'S'
   212  000678  70                 	db	112	;'p'
   213  000679  65                 	db	101	;'e'
   214  00067A  65                 	db	101	;'e'
   215  00067B  64                 	db	100	;'d'
   216  00067C  3A                 	db	58	;':'
   217  00067D  20                 	db	32
   218  00067E  25                 	db	37
   219  00067F  2E                 	db	46
   220  000680  31                 	db	49	;'1'
   221  000681  66                 	db	102	;'f'
   222  000682  20                 	db	32
   223  000683  4B                 	db	75	;'K'
   224  000684  6D                 	db	109	;'m'
   225  000685  2F                 	db	47
   226  000686  68                 	db	104	;'h'
   227  000687  0A                 	db	10
   228  000688  00                 	db	0
   229  000689                     STR_3:
   230  000689  4D                 	db	77	;'M'
   231  00068A  69                 	db	105	;'i'
   232  00068B  6C                 	db	108	;'l'
   233  00068C  65                 	db	101	;'e'
   234  00068D  61                 	db	97	;'a'
   235  00068E  67                 	db	103	;'g'
   236  00068F  65                 	db	101	;'e'
   237  000690  3A                 	db	58	;':'
   238  000691  20                 	db	32
   239  000692  25                 	db	37
   240  000693  2E                 	db	46
   241  000694  31                 	db	49	;'1'
   242  000695  66                 	db	102	;'f'
   243  000696  20                 	db	32
   244  000697  6D                 	db	109	;'m'
   245  000698  0A                 	db	10
   246  000699  00                 	db	0
   247  00069A                     STR_1:
   248  00069A  52                 	db	82	;'R'
   249  00069B  50                 	db	80	;'P'
   250  00069C  4D                 	db	77	;'M'
   251  00069D  3A                 	db	58	;':'
   252  00069E  20                 	db	32
   253  00069F  25                 	db	37
   254  0006A0  64                 	db	100	;'d'
   255  0006A1  0A                 	db	10
   256  0006A2  00                 	db	0
   257                           
   258                           ; #config settings
   259  0006A3  00                 	db	0	; dummy byte at the end
   260  0000                     
   261                           	psect	cinit
   262  002CB0                     __pcinit:
   263                           	opt stack 0
   264  002CB0                     start_initialization:
   265                           	opt stack 0
   266  002CB0                     __initialization:
   267                           	opt stack 0
   268                           
   269                           ; Clear objects allocated to BANK0 (2 bytes)
   270  002CB0  0100               	movlb	0
   271  002CB2  6BD6               	clrf	(__pbssBANK0+1)& (0+255),b
   272  002CB4  6BD5               	clrf	__pbssBANK0& (0+255),b
   273                           
   274                           ; Clear objects allocated to COMRAM (12 bytes)
   275  002CB6  EE00  F045         	lfsr	0,__pbssCOMRAM
   276  002CBA  0E0C               	movlw	12
   277  002CBC                     clear_0:
   278  002CBC  6AEE               	clrf	postinc0,c
   279  002CBE  06E8               	decf	wreg,f,c
   280  002CC0  E1FD               	bnz	clear_0
   281  002CC2                     end_of_initialization:
   282                           	opt stack 0
   283  002CC2                     __end_of__initialization:
   284                           	opt stack 0
   285  002CC2  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  002CC4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  002CC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  002CC8  6EF8               	movwf	tblptru,c
   289  002CCA  0100               	movlb	0
   290  002CCC  EFA8  F010         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	bssCOMRAM
   296  000045                     __pbssCOMRAM:
   297                           	opt stack 0
   298  000045                     _mileage:
   299                           	opt stack 0
   300  000045                     	ds	3
   301  000048                     _speed:
   302                           	opt stack 0
   303  000048                     	ds	3
   304  00004B                     _SPEED_count:
   305                           	opt stack 0
   306  00004B                     	ds	2
   307  00004D                     _RPM_count:
   308                           	opt stack 0
   309  00004D                     	ds	2
   310  00004F                     _Timer0_count:
   311                           	opt stack 0
   312  00004F                     	ds	2
   313                           tblptru	equ	0xFF8
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           
   317                           	psect	bssBANK0
   318  0000D5                     __pbssBANK0:
   319                           	opt stack 0
   320  0000D5                     _RPM_output:
   321                           	opt stack 0
   322  0000D5                     	ds	2
   323                           tblptru	equ	0xFF8
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           
   327                           	psect	cstackBANK0
   328  000060                     __pcstackBANK0:
   329                           	opt stack 0
   330  000060                     ??_isdigit:
   331  000060                     ?___awmod:
   332                           	opt stack 0
   333  000060                     ?___ftpack:
   334                           	opt stack 0
   335  000060                     ?___ftneg:
   336                           	opt stack 0
   337  000060                     ?__tdiv_to_l_:
   338                           	opt stack 0
   339  000060                     ?__div_to_l_:
   340                           	opt stack 0
   341  000060                     ?___lldiv:
   342                           	opt stack 0
   343  000060                     Delay_LCD@i:
   344                           	opt stack 0
   345  000060                     Delay_inicializacao_LCD@i:
   346                           	opt stack 0
   347  000060                     ___awmod@dividend:
   348                           	opt stack 0
   349  000060                     __div_to_l_@f1:
   350                           	opt stack 0
   351  000060                     ___ftpack@arg:
   352                           	opt stack 0
   353  000060                     __tdiv_to_l_@f1:
   354                           	opt stack 0
   355  000060                     ___ftge@ff1:
   356                           	opt stack 0
   357  000060                     ___ftneg@f1:
   358                           	opt stack 0
   359  000060                     ___lldiv@dividend:
   360                           	opt stack 0
   361                           
   362                           ; 4 bytes @ 0x0
   363  000060                     	ds	1
   364  000061                     _isdigit$657:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x1
   368  000061                     	ds	1
   369  000062                     Envia_Comando_Lcd@comando:
   370                           	opt stack 0
   371  000062                     Envia_Dado_Lcd@dado:
   372                           	opt stack 0
   373  000062                     isdigit@c:
   374                           	opt stack 0
   375  000062                     ___awmod@divisor:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x2
   379  000062                     	ds	1
   380  000063                     ___ftpack@exp:
   381                           	opt stack 0
   382  000063                     Print_Mensagem_Lcd@mensagem:
   383                           	opt stack 0
   384  000063                     __div_to_l_@f2:
   385                           	opt stack 0
   386  000063                     __tdiv_to_l_@f2:
   387                           	opt stack 0
   388  000063                     ___ftge@ff2:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x3
   392  000063                     	ds	1
   393  000064                     ___awmod@counter:
   394                           	opt stack 0
   395  000064                     ___ftpack@sign:
   396                           	opt stack 0
   397  000064                     ___lldiv@divisor:
   398                           	opt stack 0
   399                           
   400                           ; 4 bytes @ 0x4
   401  000064                     	ds	1
   402  000065                     ??___ftpack:
   403  000065                     ___awmod@sign:
   404                           	opt stack 0
   405  000065                     Print_Mensagem_Lcd@i:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x5
   409  000065                     	ds	1
   410  000066                     ??__tdiv_to_l_:
   411  000066                     ??___ftge:
   412  000066                     ?___awdiv:
   413                           	opt stack 0
   414  000066                     ___awdiv@dividend:
   415                           	opt stack 0
   416  000066                     __div_to_l_@quot:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x6
   420  000066                     	ds	2
   421  000068                     ?___lltoft:
   422                           	opt stack 0
   423  000068                     ___awdiv@divisor:
   424                           	opt stack 0
   425  000068                     ___lldiv@quotient:
   426                           	opt stack 0
   427  000068                     ___lltoft@c:
   428                           	opt stack 0
   429                           
   430                           ; 4 bytes @ 0x8
   431  000068                     	ds	1
   432  000069                     __tdiv_to_l_@quot:
   433                           	opt stack 0
   434                           
   435                           ; 4 bytes @ 0x9
   436  000069                     	ds	1
   437  00006A                     ___awdiv@counter:
   438                           	opt stack 0
   439  00006A                     __div_to_l_@cntr:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0xA
   443  00006A                     	ds	1
   444  00006B                     ___awdiv@sign:
   445                           	opt stack 0
   446  00006B                     __div_to_l_@exp1:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0xB
   450  00006B                     	ds	1
   451  00006C                     ??___lltoft:
   452  00006C                     ___lldiv@counter:
   453                           	opt stack 0
   454  00006C                     ___awdiv@quotient:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0xC
   458  00006C                     	ds	1
   459  00006D                     ?___llmod:
   460                           	opt stack 0
   461  00006D                     __tdiv_to_l_@cntr:
   462                           	opt stack 0
   463  00006D                     ___llmod@dividend:
   464                           	opt stack 0
   465                           
   466                           ; 4 bytes @ 0xD
   467  00006D                     	ds	1
   468  00006E                     ?___wmul:
   469                           	opt stack 0
   470  00006E                     __tdiv_to_l_@exp1:
   471                           	opt stack 0
   472  00006E                     ___wmul@multiplier:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0xE
   476  00006E                     	ds	2
   477  000070                     ___lltoft@exp:
   478                           	opt stack 0
   479  000070                     ___wmul@multiplicand:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x10
   483  000070                     	ds	1
   484  000071                     ___llmod@divisor:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x11
   488  000071                     	ds	1
   489  000072                     ___wmul@product:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x12
   493  000072                     	ds	2
   494  000074                     ?___ftmul:
   495                           	opt stack 0
   496  000074                     ___ftmul@f1:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x14
   500  000074                     	ds	1
   501  000075                     ___llmod@counter:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x15
   505  000075                     	ds	2
   506  000077                     ___ftmul@f2:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0x17
   510  000077                     	ds	3
   511  00007A                     ??___ftmul:
   512                           
   513                           ; 1 bytes @ 0x1A
   514  00007A                     	ds	3
   515  00007D                     ___ftmul@exp:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x1D
   519  00007D                     	ds	1
   520  00007E                     ___ftmul@f3_as_product:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x1E
   524  00007E                     	ds	3
   525  000081                     ___ftmul@cntr:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x21
   529  000081                     	ds	1
   530  000082                     ___ftmul@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x22
   534  000082                     	ds	1
   535  000083                     ?_fround:
   536                           	opt stack 0
   537  000083                     ?_scale:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x23
   541  000083                     	ds	3
   542  000086                     _fround$983:
   543                           	opt stack 0
   544  000086                     _scale$984:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x26
   548  000086                     	ds	3
   549  000089                     scale@scl:
   550                           	opt stack 0
   551  000089                     _fround$982:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x29
   555  000089                     	ds	1
   556  00008A                     ?___fttol:
   557                           	opt stack 0
   558  00008A                     ___fttol@f1:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0x2A
   562  00008A                     	ds	2
   563  00008C                     fround@prec:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x2C
   567  00008C                     	ds	1
   568  00008D                     ?___ftadd:
   569                           	opt stack 0
   570  00008D                     ___ftadd@f1:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x2D
   574  00008D                     	ds	1
   575  00008E                     ??___fttol:
   576                           
   577                           ; 1 bytes @ 0x2E
   578  00008E                     	ds	2
   579  000090                     ___ftadd@f2:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x30
   583  000090                     	ds	3
   584  000093                     ??___ftadd:
   585  000093                     ___fttol@sign1:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x33
   589  000093                     	ds	1
   590  000094                     ___fttol@lval:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x34
   594  000094                     	ds	2
   595  000096                     ___ftadd@sign:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x36
   599  000096                     	ds	1
   600  000097                     ___ftadd@exp2:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x37
   604  000097                     	ds	1
   605  000098                     ___ftadd@exp1:
   606                           	opt stack 0
   607  000098                     ___fttol@exp1:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x38
   611  000098                     	ds	1
   612  000099                     ?___ftsub:
   613                           	opt stack 0
   614  000099                     ___ftsub@f1:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0x39
   618  000099                     	ds	3
   619  00009C                     ___ftsub@f2:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0x3C
   623  00009C                     	ds	3
   624  00009F                     ?_sprintf:
   625                           	opt stack 0
   626  00009F                     sprintf@sp:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x3F
   630  00009F                     	ds	2
   631  0000A1                     sprintf@f:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x41
   635  0000A1                     	ds	5
   636  0000A6                     ??_sprintf:
   637                           
   638                           ; 1 bytes @ 0x46
   639  0000A6                     	ds	6
   640  0000AC                     _sprintf$985:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0x4C
   644  0000AC                     	ds	3
   645  0000AF                     sprintf@ap:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x4F
   649  0000AF                     	ds	2
   650  0000B1                     sprintf@flag:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x51
   654  0000B1                     	ds	2
   655  0000B3                     sprintf@exp:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x53
   659  0000B3                     	ds	2
   660  0000B5                     sprintf@tmpval:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x55
   664  0000B5                     	ds	4
   665  0000B9                     sprintf@val:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x59
   669  0000B9                     	ds	4
   670  0000BD                     sprintf@prec:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x5D
   674  0000BD                     	ds	2
   675  0000BF                     sprintf@fval:
   676                           	opt stack 0
   677                           
   678                           ; 3 bytes @ 0x5F
   679  0000BF                     	ds	3
   680  0000C2                     sprintf@c:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x62
   684  0000C2                     	ds	1
   685  0000C3                     ??_main:
   686                           
   687                           ; 1 bytes @ 0x63
   688  0000C3                     	ds	2
   689  0000C5                     main@buf:
   690                           	opt stack 0
   691                           
   692                           ; 16 bytes @ 0x65
   693  0000C5                     	ds	16
   694                           tblptru	equ	0xFF8
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           
   698                           	psect	cstackCOMRAM
   699  000001                     __pcstackCOMRAM:
   700                           	opt stack 0
   701  000001                     ?i2___wmul:
   702                           	opt stack 0
   703  000001                     ?i2___ftpack:
   704                           	opt stack 0
   705  000001                     i2___wmul@multiplier:
   706                           	opt stack 0
   707  000001                     i2___ftpack@arg:
   708                           	opt stack 0
   709                           
   710                           ; 3 bytes @ 0x0
   711  000001                     	ds	2
   712  000003                     i2___wmul@multiplicand:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x2
   716  000003                     	ds	1
   717  000004                     i2___ftpack@exp:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x3
   721  000004                     	ds	1
   722  000005                     i2___ftpack@sign:
   723                           	opt stack 0
   724  000005                     i2___wmul@product:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x4
   728  000005                     	ds	1
   729  000006                     ??i2___ftpack:
   730                           
   731                           ; 1 bytes @ 0x5
   732  000006                     	ds	3
   733  000009                     ?___awtoft:
   734                           	opt stack 0
   735  000009                     ___awtoft@c:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x8
   739  000009                     	ds	3
   740  00000C                     ___awtoft@sign:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0xB
   744  00000C                     	ds	1
   745  00000D                     ?i2___ftmul:
   746                           	opt stack 0
   747  00000D                     i2___ftmul@f1:
   748                           	opt stack 0
   749                           
   750                           ; 3 bytes @ 0xC
   751  00000D                     	ds	3
   752  000010                     i2___ftmul@f2:
   753                           	opt stack 0
   754                           
   755                           ; 3 bytes @ 0xF
   756  000010                     	ds	3
   757  000013                     ??i2___ftmul:
   758                           
   759                           ; 1 bytes @ 0x12
   760  000013                     	ds	3
   761  000016                     i2___ftmul@exp:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x15
   765  000016                     	ds	1
   766  000017                     i2___ftmul@f3_as_product:
   767                           	opt stack 0
   768                           
   769                           ; 3 bytes @ 0x16
   770  000017                     	ds	3
   771  00001A                     i2___ftmul@cntr:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x19
   775  00001A                     	ds	1
   776  00001B                     i2___ftmul@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x1A
   780  00001B                     	ds	1
   781  00001C                     ?___ftdiv:
   782                           	opt stack 0
   783  00001C                     ___ftdiv@f1:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x1B
   787  00001C                     	ds	3
   788  00001F                     ___ftdiv@f2:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x1E
   792  00001F                     	ds	3
   793  000022                     ??___ftdiv:
   794                           
   795                           ; 1 bytes @ 0x21
   796  000022                     	ds	3
   797  000025                     ___ftdiv@cntr:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x24
   801  000025                     	ds	1
   802  000026                     ___ftdiv@f3:
   803                           	opt stack 0
   804                           
   805                           ; 3 bytes @ 0x25
   806  000026                     	ds	3
   807  000029                     ___ftdiv@exp:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x28
   811  000029                     	ds	1
   812  00002A                     ___ftdiv@sign:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x29
   816  00002A                     	ds	1
   817  00002B                     ?_calculate_speed:
   818                           	opt stack 0
   819  00002B                     ?i2___ftadd:
   820                           	opt stack 0
   821  00002B                     calculate_speed@count:
   822                           	opt stack 0
   823  00002B                     i2___ftadd@f1:
   824                           	opt stack 0
   825                           
   826                           ; 3 bytes @ 0x2A
   827  00002B                     	ds	3
   828  00002E                     calculate_speed@real_speed:
   829                           	opt stack 0
   830  00002E                     i2___ftadd@f2:
   831                           	opt stack 0
   832                           
   833                           ; 3 bytes @ 0x2D
   834  00002E                     	ds	3
   835  000031                     ??i2___ftadd:
   836  000031                     _calculate_speed$1020:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x30
   840  000031                     	ds	3
   841  000034                     i2___ftadd@sign:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x33
   845  000034                     	ds	1
   846  000035                     i2___ftadd@exp2:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x34
   850  000035                     	ds	1
   851  000036                     i2___ftadd@exp1:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x35
   855  000036                     	ds	1
   856  000037                     ??_ISR:
   857                           
   858                           ; 1 bytes @ 0x36
   859  000037                     	ds	14
   860                           tblptru	equ	0xFF8
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 69 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  buf            16  101[BANK0 ] unsigned char [16]
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   883 ;;      Params:         0       0       0       0       0       0       0
   884 ;;      Locals:         0      16       0       0       0       0       0
   885 ;;      Temps:          0       2       0       0       0       0       0
   886 ;;      Totals:         0      18       0       0       0       0       0
   887 ;;Total ram usage:       18 bytes
   888 ;; Hardware stack levels required when called:    8
   889 ;; This function calls:
   890 ;;		_Envia_Comando_Lcd
   891 ;;		_Inicializa_Lcd
   892 ;;		_Print_Mensagem_Lcd
   893 ;;		_init_interruption
   894 ;;		_init_timer
   895 ;;		_sprintf
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text0
   902  002150                     __ptext0:
   903                           	opt stack 0
   904  002150                     _main:
   905                           	opt stack 23
   906                           
   907                           ;main.c: 70: TRISC=0b11111100;
   908                           
   909                           ;incstack = 0
   910  002150  0EFC               	movlw	252
   911  002152  6E94               	movwf	3988,c	;volatile
   912                           
   913                           ;main.c: 71: TRISD=0b00000000;
   914  002154  0E00               	movlw	0
   915  002156  6E95               	movwf	3989,c	;volatile
   916                           
   917                           ;main.c: 72: TRISB=0b01111111;
   918  002158  0E7F               	movlw	127
   919  00215A  6E93               	movwf	3987,c	;volatile
   920                           
   921                           ;main.c: 74: init_interruption();
   922  00215C  EC81  F016         	call	_init_interruption	;wreg free
   923                           
   924                           ;main.c: 75: init_timer();
   925  002160  EC77  F016         	call	_init_timer	;wreg free
   926                           
   927                           ;main.c: 77: Inicializa_Lcd ();
   928  002164  EC68  F016         	call	_Inicializa_Lcd	;wreg free
   929  002168                     l3144:
   930                           
   931                           ;main.c: 80: char buf[16];
   932                           ;main.c: 81: sprintf(buf, "RPM: %d\n", RPM_output);
   933  002168  0EC5               	movlw	low main@buf
   934  00216A  0100               	movlb	0	; () banked
   935  00216C  6F9F               	movwf	sprintf@sp& (0+255),b
   936  00216E  0E00               	movlw	high main@buf
   937  002170  0100               	movlb	0	; () banked
   938  002172  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
   939  002174  0E9A               	movlw	low STR_1
   940  002176  0100               	movlb	0	; () banked
   941  002178  6FA1               	movwf	sprintf@f& (0+255),b
   942  00217A  0E06               	movlw	high STR_1
   943  00217C  0100               	movlb	0	; () banked
   944  00217E  6FA2               	movwf	(sprintf@f+1)& (0+255),b
   945  002180  C0D5  F0A3         	movff	_RPM_output,?_sprintf+4
   946  002184  C0D6  F0A4         	movff	_RPM_output+1,?_sprintf+5
   947  002188  EC52  F003         	call	_sprintf	;wreg free
   948                           
   949                           ;main.c: 84: Envia_Comando_Lcd(1);
   950  00218C  0E01               	movlw	1
   951  00218E  EC09  F016         	call	_Envia_Comando_Lcd
   952                           
   953                           ;main.c: 85: Print_Mensagem_Lcd(buf);
   954  002192  0EC5               	movlw	low main@buf
   955  002194  0100               	movlb	0	; () banked
   956  002196  6F63               	movwf	Print_Mensagem_Lcd@mensagem& (0+255),b
   957  002198  0E00               	movlw	high main@buf
   958  00219A  0100               	movlb	0	; () banked
   959  00219C  6F64               	movwf	(Print_Mensagem_Lcd@mensagem+1)& (0+255),b
   960  00219E  EC6D  F015         	call	_Print_Mensagem_Lcd	;wreg free
   961                           
   962                           ;main.c: 86: _delay((unsigned long)((1000)*(4000000/4000.0)));
   963  0021A2  0E06               	movlw	6
   964  0021A4  0100               	movlb	0	; () banked
   965  0021A6  6FC4               	movwf	(??_main+1)& (0+255),b
   966  0021A8  0E13               	movlw	19
   967  0021AA  0100               	movlb	0	; () banked
   968  0021AC  6FC3               	movwf	??_main& (0+255),b
   969  0021AE  0EAD               	movlw	173
   970  0021B0                     u3617:
   971  0021B0  2EE8               	decfsz	wreg,f,c
   972  0021B2  D7FE               	bra	u3617
   973  0021B4  2FC3               	decfsz	??_main& (0+255),f,b
   974  0021B6  D7FC               	bra	u3617
   975  0021B8  2FC4               	decfsz	(??_main+1)& (0+255),f,b
   976  0021BA  D7FA               	bra	u3617
   977  0021BC  F000 F000          	nop2	
   978                           
   979                           ;main.c: 88: Envia_Comando_Lcd(1);
   980  0021C0  0E01               	movlw	1
   981  0021C2  EC09  F016         	call	_Envia_Comando_Lcd
   982                           
   983                           ;main.c: 89: sprintf(buf, "Speed: %.1f Km/h\n", speed);
   984  0021C6  0EC5               	movlw	low main@buf
   985  0021C8  0100               	movlb	0	; () banked
   986  0021CA  6F9F               	movwf	sprintf@sp& (0+255),b
   987  0021CC  0E00               	movlw	high main@buf
   988  0021CE  0100               	movlb	0	; () banked
   989  0021D0  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
   990  0021D2  0E77               	movlw	low STR_2
   991  0021D4  0100               	movlb	0	; () banked
   992  0021D6  6FA1               	movwf	sprintf@f& (0+255),b
   993  0021D8  0E06               	movlw	high STR_2
   994  0021DA  0100               	movlb	0	; () banked
   995  0021DC  6FA2               	movwf	(sprintf@f+1)& (0+255),b
   996  0021DE  C048  F0A3         	movff	_speed,?_sprintf+4
   997  0021E2  C049  F0A4         	movff	_speed+1,?_sprintf+5
   998  0021E6  C04A  F0A5         	movff	_speed+2,?_sprintf+6
   999  0021EA  EC52  F003         	call	_sprintf	;wreg free
  1000                           
  1001                           ;main.c: 90: Print_Mensagem_Lcd(buf);
  1002  0021EE  0EC5               	movlw	low main@buf
  1003  0021F0  0100               	movlb	0	; () banked
  1004  0021F2  6F63               	movwf	Print_Mensagem_Lcd@mensagem& (0+255),b
  1005  0021F4  0E00               	movlw	high main@buf
  1006  0021F6  0100               	movlb	0	; () banked
  1007  0021F8  6F64               	movwf	(Print_Mensagem_Lcd@mensagem+1)& (0+255),b
  1008  0021FA  EC6D  F015         	call	_Print_Mensagem_Lcd	;wreg free
  1009                           
  1010                           ;main.c: 92: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1011  0021FE  0E06               	movlw	6
  1012  002200  0100               	movlb	0	; () banked
  1013  002202  6FC4               	movwf	(??_main+1)& (0+255),b
  1014  002204  0E13               	movlw	19
  1015  002206  0100               	movlb	0	; () banked
  1016  002208  6FC3               	movwf	??_main& (0+255),b
  1017  00220A  0EAD               	movlw	173
  1018  00220C                     u3627:
  1019  00220C  2EE8               	decfsz	wreg,f,c
  1020  00220E  D7FE               	bra	u3627
  1021  002210  2FC3               	decfsz	??_main& (0+255),f,b
  1022  002212  D7FC               	bra	u3627
  1023  002214  2FC4               	decfsz	(??_main+1)& (0+255),f,b
  1024  002216  D7FA               	bra	u3627
  1025  002218  F000 F000          	nop2	
  1026                           
  1027                           ;main.c: 94: Envia_Comando_Lcd(1);
  1028  00221C  0E01               	movlw	1
  1029  00221E  EC09  F016         	call	_Envia_Comando_Lcd
  1030                           
  1031                           ;main.c: 95: sprintf(buf, "Mileage: %.1f m\n", mileage);
  1032  002222  0EC5               	movlw	low main@buf
  1033  002224  0100               	movlb	0	; () banked
  1034  002226  6F9F               	movwf	sprintf@sp& (0+255),b
  1035  002228  0E00               	movlw	high main@buf
  1036  00222A  0100               	movlb	0	; () banked
  1037  00222C  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  1038  00222E  0E89               	movlw	low STR_3
  1039  002230  0100               	movlb	0	; () banked
  1040  002232  6FA1               	movwf	sprintf@f& (0+255),b
  1041  002234  0E06               	movlw	high STR_3
  1042  002236  0100               	movlb	0	; () banked
  1043  002238  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  1044  00223A  C045  F0A3         	movff	_mileage,?_sprintf+4
  1045  00223E  C046  F0A4         	movff	_mileage+1,?_sprintf+5
  1046  002242  C047  F0A5         	movff	_mileage+2,?_sprintf+6
  1047  002246  EC52  F003         	call	_sprintf	;wreg free
  1048                           
  1049                           ;main.c: 96: Print_Mensagem_Lcd(buf);
  1050  00224A  0EC5               	movlw	low main@buf
  1051  00224C  0100               	movlb	0	; () banked
  1052  00224E  6F63               	movwf	Print_Mensagem_Lcd@mensagem& (0+255),b
  1053  002250  0E00               	movlw	high main@buf
  1054  002252  0100               	movlb	0	; () banked
  1055  002254  6F64               	movwf	(Print_Mensagem_Lcd@mensagem+1)& (0+255),b
  1056  002256  EC6D  F015         	call	_Print_Mensagem_Lcd	;wreg free
  1057                           
  1058                           ;main.c: 98: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1059  00225A  0E06               	movlw	6
  1060  00225C  0100               	movlb	0	; () banked
  1061  00225E  6FC4               	movwf	(??_main+1)& (0+255),b
  1062  002260  0E13               	movlw	19
  1063  002262  0100               	movlb	0	; () banked
  1064  002264  6FC3               	movwf	??_main& (0+255),b
  1065  002266  0EAD               	movlw	173
  1066  002268                     u3637:
  1067  002268  2EE8               	decfsz	wreg,f,c
  1068  00226A  D7FE               	bra	u3637
  1069  00226C  2FC3               	decfsz	??_main& (0+255),f,b
  1070  00226E  D7FC               	bra	u3637
  1071  002270  2FC4               	decfsz	(??_main+1)& (0+255),f,b
  1072  002272  D7FA               	bra	u3637
  1073  002274  F000 F000          	nop2	
  1074  002278  D777               	goto	l3144
  1075  00227A                     __end_of_main:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           postinc0	equ	0xFEE
  1079                           wreg	equ	0xFE8
  1080                           
  1081 ;; *************** function _sprintf *****************
  1082 ;; Defined at:
  1083 ;;		line 492 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  sp              2   63[BANK0 ] PTR unsigned char 
  1086 ;;		 -> main@buf(16), 
  1087 ;;  f               2   65[BANK0 ] PTR const unsigned char 
  1088 ;;		 -> STR_3(17), STR_2(18), STR_1(9), 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  val             4   89[BANK0 ] unsigned long 
  1091 ;;  tmpval          4   85[BANK0 ] struct .
  1092 ;;  fval            3   95[BANK0 ] struct .
  1093 ;;  cp              3    0        PTR const unsigned char 
  1094 ;;  prec            2   93[BANK0 ] int 
  1095 ;;  exp             2   83[BANK0 ] int 
  1096 ;;  flag            2   81[BANK0 ] unsigned short 
  1097 ;;  ap              2   79[BANK0 ] PTR void [1]
  1098 ;;		 -> ?_sprintf(2), 
  1099 ;;  len             2    0        unsigned int 
  1100 ;;  width           2    0        int 
  1101 ;;  c               1   98[BANK0 ] char 
  1102 ;;  d               1    0        unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2   63[BANK0 ] int 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       7       0       0       0       0       0
  1113 ;;      Locals:         0      23       0       0       0       0       0
  1114 ;;      Temps:          0       6       0       0       0       0       0
  1115 ;;      Totals:         0      36       0       0       0       0       0
  1116 ;;Total ram usage:       36 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    7
  1119 ;; This function calls:
  1120 ;;		___awdiv
  1121 ;;		___ftadd
  1122 ;;		___ftge
  1123 ;;		___ftmul
  1124 ;;		___ftneg
  1125 ;;		___ftsub
  1126 ;;		___fttol
  1127 ;;		___lldiv
  1128 ;;		___llmod
  1129 ;;		___lltoft
  1130 ;;		___wmul
  1131 ;;		__div_to_l_
  1132 ;;		__tdiv_to_l_
  1133 ;;		_fround
  1134 ;;		_isdigit
  1135 ;;		_scale
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text1
  1142  0006A4                     __ptext1:
  1143                           	opt stack 0
  1144  0006A4                     _sprintf:
  1145                           	opt stack 23
  1146                           
  1147                           ;doprnt.c: 494: va_list ap;
  1148                           ;doprnt.c: 499: signed char c;
  1149                           ;doprnt.c: 501: int width;
  1150                           ;doprnt.c: 504: int prec;
  1151                           ;doprnt.c: 508: unsigned short flag;
  1152                           ;doprnt.c: 515: char d;
  1153                           ;doprnt.c: 516: double fval;
  1154                           ;doprnt.c: 517: int exp;
  1155                           ;doprnt.c: 523: union {
  1156                           ;doprnt.c: 524: unsigned long vd;
  1157                           ;doprnt.c: 525: double integ;
  1158                           ;doprnt.c: 526: } tmpval;
  1159                           ;doprnt.c: 528: unsigned long val;
  1160                           ;doprnt.c: 529: unsigned len;
  1161                           ;doprnt.c: 530: const char * cp;
  1162                           ;doprnt.c: 533: *ap = __va_start();
  1163                           
  1164                           ;incstack = 0
  1165  0006A4  0EA3               	movlw	low (?_sprintf+4)
  1166  0006A6  0100               	movlb	0	; () banked
  1167  0006A8  6FAF               	movwf	sprintf@ap& (0+255),b
  1168  0006AA  0E00               	movlw	high (?_sprintf+4)
  1169  0006AC  0100               	movlb	0	; () banked
  1170  0006AE  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  1171                           
  1172                           ;doprnt.c: 536: while(c = *f++) {
  1173  0006B0  EFF7  F007         	goto	l3014
  1174  0006B4                     l2784:
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;doprnt.c: 538: if(c != '%')
  1178  0006B4  0E25               	movlw	37
  1179  0006B6  0100               	movlb	0	; () banked
  1180  0006B8  19C2               	xorwf	sprintf@c& (0+255),w,b
  1181  0006BA  B4D8               	btfsc	status,2,c
  1182  0006BC  D00B               	goto	l2790
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;doprnt.c: 540: {
  1186                           ;doprnt.c: 541: ((*sp++ = (c)));
  1187  0006BE  C09F  FFD9         	movff	sprintf@sp,fsr2l
  1188  0006C2  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  1189  0006C6  C0C2  FFDF         	movff	sprintf@c,indf2
  1190                           
  1191                           ; BSR set to: 0
  1192  0006CA  0100               	movlb	0	; () banked
  1193  0006CC  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  1194  0006CE  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  1195                           
  1196                           ;doprnt.c: 542: continue;
  1197  0006D0  EFF7  F007         	goto	l3014
  1198  0006D4                     l2790:
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;doprnt.c: 543: }
  1202                           ;doprnt.c: 548: flag = 0;
  1203  0006D4  0E00               	movlw	0
  1204  0006D6  0100               	movlb	0	; () banked
  1205  0006D8  6FB2               	movwf	(sprintf@flag+1)& (0+255),b
  1206  0006DA  0E00               	movlw	0
  1207  0006DC  6FB1               	movwf	sprintf@flag& (0+255),b
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;doprnt.c: 611: if(*f == '.') {
  1211  0006DE  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1212  0006E2  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1213  0006E6                     	if	0	;tblptru may be non-zero
  1214  0006E6                     	endif
  1215  0006E6                     	if	0	;tblptru may be non-zero
  1216  0006E6                     	endif
  1217  0006E6  0008               	tblrd		*
  1218  0006E8  50F5               	movf	tablat,w,c
  1219  0006EA  0A2E               	xorlw	46
  1220  0006EC  A4D8               	btfss	status,2,c
  1221  0006EE  D039               	goto	l2804
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;doprnt.c: 612: flag |= 0x4000;
  1225  0006F0  0100               	movlb	0	; () banked
  1226  0006F2  8DB2               	bsf	(sprintf@flag+1)& (0+255),6,b
  1227                           
  1228                           ;doprnt.c: 613: f++;
  1229  0006F4  0100               	movlb	0	; () banked
  1230  0006F6  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1231  0006F8  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;doprnt.c: 620: {
  1235                           ;doprnt.c: 621: prec = 0;
  1236  0006FA  0E00               	movlw	0
  1237  0006FC  0100               	movlb	0	; () banked
  1238  0006FE  6FBE               	movwf	(sprintf@prec+1)& (0+255),b
  1239  000700  0E00               	movlw	0
  1240  000702  6FBD               	movwf	sprintf@prec& (0+255),b
  1241                           
  1242                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1243  000704  D023               	goto	l2802
  1244  000706                     l2798:
  1245                           
  1246                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1247  000706  C0BD  F06E         	movff	sprintf@prec,___wmul@multiplier
  1248  00070A  C0BE  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  1249  00070E  0E00               	movlw	0
  1250  000710  0100               	movlb	0	; () banked
  1251  000712  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1252  000714  0E0A               	movlw	10
  1253  000716  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1254  000718  ECAD  F015         	call	___wmul	;wreg free
  1255  00071C  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1256  000720  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1257  000724                     	if	0	;tblptru may be non-zero
  1258  000724                     	endif
  1259  000724                     	if	0	;tblptru may be non-zero
  1260  000724                     	endif
  1261  000724  0008               	tblrd		*
  1262  000726  50F5               	movf	tablat,w,c
  1263  000728  0100               	movlb	0	; () banked
  1264  00072A  276E               	addwf	?___wmul& (0+255),f,b
  1265  00072C  0E00               	movlw	0
  1266  00072E  0100               	movlb	0	; () banked
  1267  000730  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  1268  000732  0ED0               	movlw	208
  1269  000734  0100               	movlb	0	; () banked
  1270  000736  256E               	addwf	?___wmul& (0+255),w,b
  1271  000738  0100               	movlb	0	; () banked
  1272  00073A  6FBD               	movwf	sprintf@prec& (0+255),b
  1273  00073C  0EFF               	movlw	255
  1274  00073E  0100               	movlb	0	; () banked
  1275  000740  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  1276  000742  0100               	movlb	0	; () banked
  1277  000744  6FBE               	movwf	(sprintf@prec+1)& (0+255),b
  1278                           
  1279                           ; BSR set to: 0
  1280  000746  0100               	movlb	0	; () banked
  1281  000748  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1282  00074A  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1283  00074C                     l2802:
  1284                           
  1285                           ; BSR set to: 0
  1286  00074C  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1287  000750  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1288  000754                     	if	0	;tblptru may be non-zero
  1289  000754                     	endif
  1290  000754                     	if	0	;tblptru may be non-zero
  1291  000754                     	endif
  1292  000754  0008               	tblrd		*
  1293  000756  50F5               	movf	tablat,w,c
  1294  000758  ECE0  F015         	call	_isdigit
  1295  00075C  A0D8               	btfss	status,0,c
  1296  00075E  D00C               	goto	l2812
  1297  000760  D7D2               	goto	l2798
  1298  000762                     l2804:
  1299                           
  1300                           ;doprnt.c: 626: prec = 0;
  1301  000762  0E00               	movlw	0
  1302  000764  0100               	movlb	0	; () banked
  1303  000766  6FBE               	movwf	(sprintf@prec+1)& (0+255),b
  1304  000768  0E00               	movlw	0
  1305  00076A  6FBD               	movwf	sprintf@prec& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;doprnt.c: 628: flag |= 0x1000;
  1309  00076C  0100               	movlb	0	; () banked
  1310  00076E  89B2               	bsf	(sprintf@flag+1)& (0+255),4,b
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;doprnt.c: 630: }
  1314                           ;doprnt.c: 635: switch(c = *f++) {
  1315  000770  D003               	goto	l2812
  1316  000772                     l2808:
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;doprnt.c: 663: flag |= 0x400;
  1320  000772  0100               	movlb	0	; () banked
  1321  000774  85B2               	bsf	(sprintf@flag+1)& (0+255),2,b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;doprnt.c: 698: case 'i':
  1325                           ;doprnt.c: 699: break;
  1326                           
  1327                           ; BSR set to: 0
  1328                           
  1329                           ;doprnt.c: 697: case 'd':
  1330                           
  1331                           ;doprnt.c: 664: break;
  1332  000776  D01A               	goto	l2814
  1333  000778                     l2812:
  1334  000778  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1335  00077C  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1336  000780  0100               	movlb	0	; () banked
  1337  000782  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1338  000784  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1339  000786                     	if	0	;tblptru may be non-zero
  1340  000786                     	endif
  1341  000786                     	if	0	;tblptru may be non-zero
  1342  000786                     	endif
  1343  000786  0008               	tblrd		*
  1344  000788  CFF5 F0C2          	movff	tablat,sprintf@c
  1345  00078C  0100               	movlb	0	; () banked
  1346  00078E  51C2               	movf	sprintf@c& (0+255),w,b
  1347                           
  1348                           ; Switch size 1, requested type "space"
  1349                           ; Number of cases is 4, Range of values is 0 to 105
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte           13     7 (average)
  1353                           ;	Chosen strategy is simple_byte
  1354  000790  0A00               	xorlw	0	; case 0
  1355  000792  B4D8               	btfsc	status,2,c
  1356  000794  EF06  F008         	goto	l3016
  1357  000798  0A64               	xorlw	100	; case 100
  1358  00079A  B4D8               	btfsc	status,2,c
  1359  00079C  D007               	goto	l2814
  1360  00079E  0A02               	xorlw	2	; case 102
  1361  0007A0  B4D8               	btfsc	status,2,c
  1362  0007A2  D7E7               	goto	l2808
  1363  0007A4  0A0F               	xorlw	15	; case 105
  1364  0007A6  A4D8               	btfss	status,2,c
  1365  0007A8  EFF7  F007         	goto	l3014
  1366  0007AC                     l2814:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;doprnt.c: 825: if(flag & (0x700)) {
  1370  0007AC  0E07               	movlw	7
  1371  0007AE  0100               	movlb	0	; () banked
  1372  0007B0  15B2               	andwf	(sprintf@flag+1)& (0+255),w,b
  1373  0007B2  B4D8               	btfsc	status,2,c
  1374  0007B4  D329               	goto	l2962
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;doprnt.c: 827: if(flag & 0x1000)
  1378  0007B6  0100               	movlb	0	; () banked
  1379  0007B8  A9B2               	btfss	(sprintf@flag+1)& (0+255),4,b
  1380  0007BA  D005               	goto	l2820
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;doprnt.c: 829: prec = 6;
  1384  0007BC  0E00               	movlw	0
  1385  0007BE  0100               	movlb	0	; () banked
  1386  0007C0  6FBE               	movwf	(sprintf@prec+1)& (0+255),b
  1387  0007C2  0E06               	movlw	6
  1388  0007C4  6FBD               	movwf	sprintf@prec& (0+255),b
  1389  0007C6                     l2820:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1393  0007C6  C0AF  FFD9         	movff	sprintf@ap,fsr2l
  1394  0007CA  C0B0  FFDA         	movff	sprintf@ap+1,fsr2h
  1395  0007CE  CFDE F0BF          	movff	postinc2,sprintf@fval
  1396  0007D2  CFDE F0C0          	movff	postinc2,sprintf@fval+1
  1397  0007D6  CFDD F0C1          	movff	postdec2,sprintf@fval+2
  1398                           
  1399                           ; BSR set to: 0
  1400  0007DA  0E03               	movlw	3
  1401  0007DC  0100               	movlb	0	; () banked
  1402  0007DE  27AF               	addwf	sprintf@ap& (0+255),f,b
  1403  0007E0  0E00               	movlw	0
  1404  0007E2  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;doprnt.c: 831: if(fval < 0.0) {
  1408  0007E4  0100               	movlb	0	; () banked
  1409  0007E6  AFC1               	btfss	(sprintf@fval+2)& (0+255),7,b
  1410  0007E8  D011               	goto	l2830
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 832: fval = -fval;
  1414  0007EA  C0BF  F060         	movff	sprintf@fval,___ftneg@f1
  1415  0007EE  C0C0  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  1416  0007F2  C0C1  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  1417  0007F6  ECC8  F015         	call	___ftneg	;wreg free
  1418  0007FA  C060  F0BF         	movff	?___ftneg,sprintf@fval
  1419  0007FE  C061  F0C0         	movff	?___ftneg+1,sprintf@fval+1
  1420  000802  C062  F0C1         	movff	?___ftneg+2,sprintf@fval+2
  1421                           
  1422                           ;doprnt.c: 833: flag |= 0x03;
  1423  000806  0E03               	movlw	3
  1424  000808  0100               	movlb	0	; () banked
  1425  00080A  13B1               	iorwf	sprintf@flag& (0+255),f,b
  1426  00080C                     l2830:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;doprnt.c: 834: }
  1430                           ;doprnt.c: 835: exp = 0;
  1431  00080C  0E00               	movlw	0
  1432  00080E  0100               	movlb	0	; () banked
  1433  000810  6FB4               	movwf	(sprintf@exp+1)& (0+255),b
  1434  000812  0E00               	movlw	0
  1435  000814  6FB3               	movwf	sprintf@exp& (0+255),b
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;doprnt.c: 836: if( fval!=0) {
  1439  000816  0100               	movlb	0	; () banked
  1440  000818  51BF               	movf	sprintf@fval& (0+255),w,b
  1441  00081A  0100               	movlb	0	; () banked
  1442  00081C  11C0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1443  00081E  0100               	movlb	0	; () banked
  1444  000820  11C1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1445  000822  B4D8               	btfsc	status,2,c
  1446  000824  D09B               	goto	l2858
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1450  000826  0E82               	movlw	130
  1451  000828  0100               	movlb	0	; () banked
  1452  00082A  6FA6               	movwf	??_sprintf& (0+255),b
  1453  00082C  0EFF               	movlw	255
  1454  00082E  0100               	movlb	0	; () banked
  1455  000830  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  1456  000832  C0BF  F0A8         	movff	sprintf@fval,??_sprintf+2
  1457  000836  C0C0  F0A9         	movff	sprintf@fval+1,??_sprintf+3
  1458  00083A  C0C1  F0AA         	movff	sprintf@fval+2,??_sprintf+4
  1459  00083E  C0C2  F0AB         	movff	sprintf@fval+3,??_sprintf+5
  1460  000842  0E10               	movlw	16
  1461  000844  D006               	goto	u3040
  1462  000846                     u3045:
  1463  000846  0100               	movlb	0	; () banked
  1464  000848  90D8               	bcf	status,0,c
  1465  00084A  33AB               	rrcf	(??_sprintf+5)& (0+255),f,b
  1466  00084C  33AA               	rrcf	(??_sprintf+4)& (0+255),f,b
  1467  00084E  33A9               	rrcf	(??_sprintf+3)& (0+255),f,b
  1468  000850  33A8               	rrcf	(??_sprintf+2)& (0+255),f,b
  1469  000852                     u3040:
  1470  000852  2EE8               	decfsz	wreg,f,c
  1471  000854  D7F8               	goto	u3045
  1472  000856  0100               	movlb	0	; () banked
  1473  000858  51A8               	movf	(??_sprintf+2)& (0+255),w,b
  1474  00085A  0100               	movlb	0	; () banked
  1475  00085C  25A6               	addwf	??_sprintf& (0+255),w,b
  1476  00085E  0100               	movlb	0	; () banked
  1477  000860  6FB3               	movwf	sprintf@exp& (0+255),b
  1478  000862  0E00               	movlw	0
  1479  000864  0100               	movlb	0	; () banked
  1480  000866  21A7               	addwfc	(??_sprintf+1)& (0+255),w,b
  1481  000868  0100               	movlb	0	; () banked
  1482  00086A  6FB4               	movwf	(sprintf@exp+1)& (0+255),b
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;doprnt.c: 838: exp--;
  1486  00086C  0100               	movlb	0	; () banked
  1487  00086E  07B3               	decf	sprintf@exp& (0+255),f,b
  1488  000870  A0D8               	btfss	status,0,c
  1489  000872  07B4               	decf	(sprintf@exp+1)& (0+255),f,b
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;doprnt.c: 839: exp *= 3;
  1493  000874  C0B3  F06E         	movff	sprintf@exp,___wmul@multiplier
  1494  000878  C0B4  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  1495  00087C  0E00               	movlw	0
  1496  00087E  0100               	movlb	0	; () banked
  1497  000880  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1498  000882  0E03               	movlw	3
  1499  000884  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1500  000886  ECAD  F015         	call	___wmul	;wreg free
  1501  00088A  C06E  F0B3         	movff	?___wmul,sprintf@exp
  1502  00088E  C06F  F0B4         	movff	?___wmul+1,sprintf@exp+1
  1503                           
  1504                           ;doprnt.c: 840: exp /= 10;
  1505  000892  C0B3  F066         	movff	sprintf@exp,___awdiv@dividend
  1506  000896  C0B4  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  1507  00089A  0E00               	movlw	0
  1508  00089C  0100               	movlb	0	; () banked
  1509  00089E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  1510  0008A0  0E0A               	movlw	10
  1511  0008A2  6F68               	movwf	___awdiv@divisor& (0+255),b
  1512  0008A4  EC14  F013         	call	___awdiv	;wreg free
  1513  0008A8  C066  F0B3         	movff	?___awdiv,sprintf@exp
  1514  0008AC  C067  F0B4         	movff	?___awdiv+1,sprintf@exp+1
  1515                           
  1516                           ;doprnt.c: 841: if(exp < 0)
  1517  0008B0  0100               	movlb	0	; () banked
  1518  0008B2  AFB4               	btfss	(sprintf@exp+1)& (0+255),7,b
  1519  0008B4  D004               	goto	l2846
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;doprnt.c: 842: exp--;
  1523  0008B6  0100               	movlb	0	; () banked
  1524  0008B8  07B3               	decf	sprintf@exp& (0+255),f,b
  1525  0008BA  A0D8               	btfss	status,0,c
  1526  0008BC  07B4               	decf	(sprintf@exp+1)& (0+255),f,b
  1527  0008BE                     l2846:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1531  0008BE  0100               	movlb	0	; () banked
  1532  0008C0  51B3               	movf	sprintf@exp& (0+255),w,b
  1533  0008C2  0800               	sublw	0
  1534  0008C4  EC0D  F008         	call	_scale
  1535  0008C8  C083  F0B5         	movff	?_scale,sprintf@tmpval
  1536  0008CC  C084  F0B6         	movff	?_scale+1,sprintf@tmpval+1
  1537  0008D0  C085  F0B7         	movff	?_scale+2,sprintf@tmpval+2
  1538                           
  1539                           ;doprnt.c: 847: tmpval.integ *= fval;
  1540  0008D4  C0B5  F074         	movff	sprintf@tmpval,___ftmul@f1
  1541  0008D8  C0B6  F075         	movff	sprintf@tmpval+1,___ftmul@f1+1
  1542  0008DC  C0B7  F076         	movff	sprintf@tmpval+2,___ftmul@f1+2
  1543  0008E0  C0BF  F077         	movff	sprintf@fval,___ftmul@f2
  1544  0008E4  C0C0  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  1545  0008E8  C0C1  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  1546  0008EC  EC57  F00F         	call	___ftmul	;wreg free
  1547  0008F0  C074  F0B5         	movff	?___ftmul,sprintf@tmpval
  1548  0008F4  C075  F0B6         	movff	?___ftmul+1,sprintf@tmpval+1
  1549  0008F8  C076  F0B7         	movff	?___ftmul+2,sprintf@tmpval+2
  1550                           
  1551                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1552  0008FC  C0B5  F060         	movff	sprintf@tmpval,___ftge@ff1
  1553  000900  C0B6  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1554  000904  C0B7  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1555  000908  0E00               	movlw	0
  1556  00090A  0100               	movlb	0	; () banked
  1557  00090C  6F63               	movwf	___ftge@ff2& (0+255),b
  1558  00090E  0E80               	movlw	128
  1559  000910  0100               	movlb	0	; () banked
  1560  000912  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1561  000914  0E3F               	movlw	63
  1562  000916  0100               	movlb	0	; () banked
  1563  000918  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1564  00091A  ECB0  F012         	call	___ftge	;wreg free
  1565  00091E  0100               	movlb	0	; () banked
  1566  000920  B0D8               	btfsc	status,0,c
  1567  000922  D005               	goto	l2854
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;doprnt.c: 849: exp--;
  1571  000924  0100               	movlb	0	; () banked
  1572  000926  07B3               	decf	sprintf@exp& (0+255),f,b
  1573  000928  A0D8               	btfss	status,0,c
  1574  00092A  07B4               	decf	(sprintf@exp+1)& (0+255),f,b
  1575  00092C  D017               	goto	l2858
  1576  00092E                     l2854:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1580  00092E  C0B5  F060         	movff	sprintf@tmpval,___ftge@ff1
  1581  000932  C0B6  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1582  000936  C0B7  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1583  00093A  0E00               	movlw	0
  1584  00093C  0100               	movlb	0	; () banked
  1585  00093E  6F63               	movwf	___ftge@ff2& (0+255),b
  1586  000940  0E20               	movlw	32
  1587  000942  0100               	movlb	0	; () banked
  1588  000944  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1589  000946  0E41               	movlw	65
  1590  000948  0100               	movlb	0	; () banked
  1591  00094A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1592  00094C  ECB0  F012         	call	___ftge	;wreg free
  1593  000950  0100               	movlb	0	; () banked
  1594  000952  A0D8               	btfss	status,0,c
  1595  000954  D003               	goto	l2858
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;doprnt.c: 851: exp++;
  1599  000956  0100               	movlb	0	; () banked
  1600  000958  4BB3               	infsnz	sprintf@exp& (0+255),f,b
  1601  00095A  2BB4               	incf	(sprintf@exp+1)& (0+255),f,b
  1602  00095C                     l2858:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;doprnt.c: 852: }
  1606                           ;doprnt.c: 1112: if(prec <= 12)
  1607  00095C  0100               	movlb	0	; () banked
  1608  00095E  BFBE               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1609  000960  D008               	goto	l2860
  1610  000962  0100               	movlb	0	; () banked
  1611  000964  51BE               	movf	(sprintf@prec+1)& (0+255),w,b
  1612  000966  E11D               	bnz	l2862
  1613  000968  0E0D               	movlw	13
  1614  00096A  0100               	movlb	0	; () banked
  1615  00096C  5DBD               	subwf	sprintf@prec& (0+255),w,b
  1616  00096E  B0D8               	btfsc	status,0,c
  1617  000970  D018               	goto	l2862
  1618  000972                     l2860:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;doprnt.c: 1113: fval += fround(prec);
  1622  000972  C0BF  F08D         	movff	sprintf@fval,___ftadd@f1
  1623  000976  C0C0  F08E         	movff	sprintf@fval+1,___ftadd@f1+1
  1624  00097A  C0C1  F08F         	movff	sprintf@fval+2,___ftadd@f1+2
  1625  00097E  0100               	movlb	0	; () banked
  1626  000980  51BD               	movf	sprintf@prec& (0+255),w,b
  1627  000982  EC64  F00A         	call	_fround
  1628  000986  C083  F090         	movff	?_fround,___ftadd@f2
  1629  00098A  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  1630  00098E  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  1631  000992  ECBA  F00B         	call	___ftadd	;wreg free
  1632  000996  C08D  F0BF         	movff	?___ftadd,sprintf@fval
  1633  00099A  C08E  F0C0         	movff	?___ftadd+1,sprintf@fval+1
  1634  00099E  C08F  F0C1         	movff	?___ftadd+2,sprintf@fval+2
  1635  0009A2                     l2862:
  1636                           
  1637                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1638  0009A2  0100               	movlb	0	; () banked
  1639  0009A4  BFB4               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1640  0009A6  D008               	goto	l2864
  1641  0009A8  0100               	movlb	0	; () banked
  1642  0009AA  51B4               	movf	(sprintf@exp+1)& (0+255),w,b
  1643  0009AC  E12A               	bnz	l2870
  1644  0009AE  0E0A               	movlw	10
  1645  0009B0  0100               	movlb	0	; () banked
  1646  0009B2  5DB3               	subwf	sprintf@exp& (0+255),w,b
  1647  0009B4  B0D8               	btfsc	status,0,c
  1648  0009B6  D025               	goto	l2870
  1649  0009B8                     l2864:
  1650                           
  1651                           ; BSR set to: 0
  1652  0009B8  0100               	movlb	0	; () banked
  1653  0009BA  51BF               	movf	sprintf@fval& (0+255),w,b
  1654  0009BC  0100               	movlb	0	; () banked
  1655  0009BE  11C0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1656  0009C0  0100               	movlb	0	; () banked
  1657  0009C2  11C1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1658  0009C4  B4D8               	btfsc	status,2,c
  1659  0009C6  D063               	goto	l2884
  1660                           
  1661                           ; BSR set to: 0
  1662  0009C8  C0BF  F08A         	movff	sprintf@fval,___fttol@f1
  1663  0009CC  C0C0  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  1664  0009D0  C0C1  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  1665  0009D4  EC06  F010         	call	___fttol	;wreg free
  1666  0009D8  0100               	movlb	0	; () banked
  1667  0009DA  518A               	movf	?___fttol& (0+255),w,b
  1668  0009DC  0100               	movlb	0	; () banked
  1669  0009DE  118B               	iorwf	(?___fttol+1)& (0+255),w,b
  1670  0009E0  0100               	movlb	0	; () banked
  1671  0009E2  118C               	iorwf	(?___fttol+2)& (0+255),w,b
  1672  0009E4  0100               	movlb	0	; () banked
  1673  0009E6  118D               	iorwf	(?___fttol+3)& (0+255),w,b
  1674  0009E8  A4D8               	btfss	status,2,c
  1675  0009EA  D051               	goto	l2884
  1676                           
  1677                           ; BSR set to: 0
  1678  0009EC  0100               	movlb	0	; () banked
  1679  0009EE  BFB4               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1680  0009F0  D04E               	goto	l2884
  1681  0009F2  0100               	movlb	0	; () banked
  1682  0009F4  51B4               	movf	(sprintf@exp+1)& (0+255),w,b
  1683  0009F6  E105               	bnz	l2870
  1684  0009F8  0E02               	movlw	2
  1685  0009FA  0100               	movlb	0	; () banked
  1686  0009FC  5DB3               	subwf	sprintf@exp& (0+255),w,b
  1687  0009FE  A0D8               	btfss	status,0,c
  1688  000A00  D046               	goto	l2884
  1689  000A02                     l2870:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1693  000A02  C0B5  F060         	movff	sprintf@tmpval,___ftge@ff1
  1694  000A06  C0B6  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1695  000A0A  C0B7  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1696  000A0E  0E70               	movlw	112
  1697  000A10  0100               	movlb	0	; () banked
  1698  000A12  6F63               	movwf	___ftge@ff2& (0+255),b
  1699  000A14  0E89               	movlw	137
  1700  000A16  0100               	movlb	0	; () banked
  1701  000A18  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1702  000A1A  0E40               	movlw	64
  1703  000A1C  0100               	movlb	0	; () banked
  1704  000A1E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1705  000A20  ECB0  F012         	call	___ftge	;wreg free
  1706  000A24  0100               	movlb	0	; () banked
  1707  000A26  B0D8               	btfsc	status,0,c
  1708  000A28  D003               	goto	l2874
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1712  000A2A  0100               	movlb	0	; () banked
  1713  000A2C  0EF7               	movlw	247
  1714  000A2E  D002               	goto	L1
  1715  000A30                     l2874:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1719  000A30  0100               	movlb	0	; () banked
  1720  000A32  0EF8               	movlw	248
  1721  000A34                     L1:
  1722  000A34  27B3               	addwf	sprintf@exp& (0+255),f,b
  1723  000A36  0EFF               	movlw	255
  1724  000A38  23B4               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;doprnt.c: 1124: }
  1728                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1729                           
  1730                           ; BSR set to: 0
  1731  000A3A  0100               	movlb	0	; () banked
  1732  000A3C  51B3               	movf	sprintf@exp& (0+255),w,b
  1733  000A3E  EC0D  F008         	call	_scale
  1734  000A42  C083  F0B5         	movff	?_scale,sprintf@tmpval
  1735  000A46  C084  F0B6         	movff	?_scale+1,sprintf@tmpval+1
  1736  000A4A  C085  F0B7         	movff	?_scale+2,sprintf@tmpval+2
  1737                           
  1738                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1739  000A4E  C0BF  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  1740  000A52  C0C0  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  1741  000A56  C0C1  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  1742  000A5A  C0B5  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  1743  000A5E  C0B6  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  1744  000A62  C0B7  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  1745  000A66  ECC4  F00D         	call	__tdiv_to_l_	;wreg free
  1746  000A6A  C060  F0B9         	movff	?__tdiv_to_l_,sprintf@val
  1747  000A6E  C061  F0BA         	movff	?__tdiv_to_l_+1,sprintf@val+1
  1748  000A72  C062  F0BB         	movff	?__tdiv_to_l_+2,sprintf@val+2
  1749  000A76  C063  F0BC         	movff	?__tdiv_to_l_+3,sprintf@val+3
  1750                           
  1751                           ;doprnt.c: 1129: fval = 0.0;
  1752  000A7A  0E00               	movlw	0
  1753  000A7C  0100               	movlb	0	; () banked
  1754  000A7E  6FBF               	movwf	sprintf@fval& (0+255),b
  1755  000A80  0E00               	movlw	0
  1756  000A82  0100               	movlb	0	; () banked
  1757  000A84  6FC0               	movwf	(sprintf@fval+1)& (0+255),b
  1758  000A86  0E00               	movlw	0
  1759  000A88  0100               	movlb	0	; () banked
  1760  000A8A  6FC1               	movwf	(sprintf@fval+2)& (0+255),b
  1761                           
  1762                           ;doprnt.c: 1130: } else {
  1763  000A8C  D033               	goto	l2888
  1764  000A8E                     l2884:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1768  000A8E  C0BF  F08A         	movff	sprintf@fval,___fttol@f1
  1769  000A92  C0C0  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  1770  000A96  C0C1  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  1771  000A9A  EC06  F010         	call	___fttol	;wreg free
  1772  000A9E  C08A  F0B9         	movff	?___fttol,sprintf@val
  1773  000AA2  C08B  F0BA         	movff	?___fttol+1,sprintf@val+1
  1774  000AA6  C08C  F0BB         	movff	?___fttol+2,sprintf@val+2
  1775  000AAA  C08D  F0BC         	movff	?___fttol+3,sprintf@val+3
  1776                           
  1777                           ;doprnt.c: 1132: fval -= (double)val;
  1778  000AAE  C0BF  F099         	movff	sprintf@fval,___ftsub@f1
  1779  000AB2  C0C0  F09A         	movff	sprintf@fval+1,___ftsub@f1+1
  1780  000AB6  C0C1  F09B         	movff	sprintf@fval+2,___ftsub@f1+2
  1781  000ABA  C0B9  F068         	movff	sprintf@val,___lltoft@c
  1782  000ABE  C0BA  F069         	movff	sprintf@val+1,___lltoft@c+1
  1783  000AC2  C0BB  F06A         	movff	sprintf@val+2,___lltoft@c+2
  1784  000AC6  C0BC  F06B         	movff	sprintf@val+3,___lltoft@c+3
  1785  000ACA  EC09  F015         	call	___lltoft	;wreg free
  1786  000ACE  C068  F09C         	movff	?___lltoft,___ftsub@f2
  1787  000AD2  C069  F09D         	movff	?___lltoft+1,___ftsub@f2+1
  1788  000AD6  C06A  F09E         	movff	?___lltoft+2,___ftsub@f2+2
  1789  000ADA  EC47  F015         	call	___ftsub	;wreg free
  1790  000ADE  C099  F0BF         	movff	?___ftsub,sprintf@fval
  1791  000AE2  C09A  F0C0         	movff	?___ftsub+1,sprintf@fval+1
  1792  000AE6  C09B  F0C1         	movff	?___ftsub+2,sprintf@fval+2
  1793                           
  1794                           ;doprnt.c: 1133: exp = 0;
  1795  000AEA  0E00               	movlw	0
  1796  000AEC  0100               	movlb	0	; () banked
  1797  000AEE  6FB4               	movwf	(sprintf@exp+1)& (0+255),b
  1798  000AF0  0E00               	movlw	0
  1799  000AF2  6FB3               	movwf	sprintf@exp& (0+255),b
  1800  000AF4                     l2888:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;doprnt.c: 1134: }
  1804                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1805  000AF4  0E01               	movlw	1
  1806  000AF6  0100               	movlb	0	; () banked
  1807  000AF8  6FC2               	movwf	sprintf@c& (0+255),b
  1808  000AFA                     l2890:
  1809                           
  1810                           ; BSR set to: 0
  1811  000AFA  0E0A               	movlw	10
  1812  000AFC  0100               	movlb	0	; () banked
  1813  000AFE  19C2               	xorwf	sprintf@c& (0+255),w,b
  1814  000B00  B4D8               	btfsc	status,2,c
  1815  000B02  D01E               	goto	l2902
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;doprnt.c: 1137: if(val < dpowers[c])
  1819                           
  1820                           ; BSR set to: 0
  1821                           
  1822                           ; BSR set to: 0
  1823  000B04  0100               	movlb	0	; () banked
  1824  000B06  51C2               	movf	sprintf@c& (0+255),w,b
  1825  000B08  0D04               	mullw	4
  1826  000B0A  0E01               	movlw	low _dpowers
  1827  000B0C  24F3               	addwf	prodl,w,c
  1828  000B0E  6EF6               	movwf	tblptrl,c
  1829  000B10  0E06               	movlw	high _dpowers
  1830  000B12  20F4               	addwfc	prodh,w,c
  1831  000B14  6EF7               	movwf	tblptrh,c
  1832  000B16                     	if	0	;There are less than 3 active tblptr bytes
  1833  000B16                     	endif
  1834  000B16  0009               	tblrd		*+
  1835  000B18  50F5               	movf	tablat,w,c
  1836  000B1A  0100               	movlb	0	; () banked
  1837  000B1C  5DB9               	subwf	sprintf@val& (0+255),w,b
  1838  000B1E  0009               	tblrd		*+
  1839  000B20  50F5               	movf	tablat,w,c
  1840  000B22  0100               	movlb	0	; () banked
  1841  000B24  59BA               	subwfb	(sprintf@val+1)& (0+255),w,b
  1842  000B26  0009               	tblrd		*+
  1843  000B28  50F5               	movf	tablat,w,c
  1844  000B2A  0100               	movlb	0	; () banked
  1845  000B2C  59BB               	subwfb	(sprintf@val+2)& (0+255),w,b
  1846  000B2E  0009               	tblrd		*+
  1847  000B30  50F5               	movf	tablat,w,c
  1848  000B32  0100               	movlb	0	; () banked
  1849  000B34  59BC               	subwfb	(sprintf@val+3)& (0+255),w,b
  1850  000B36  A0D8               	btfss	status,0,c
  1851  000B38  D003               	goto	l2902
  1852                           
  1853                           ; BSR set to: 0
  1854                           
  1855                           ; BSR set to: 0
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;doprnt.c: 1138: break;
  1859  000B3A  0100               	movlb	0	; () banked
  1860  000B3C  2BC2               	incf	sprintf@c& (0+255),f,b
  1861  000B3E  D7DD               	goto	l2890
  1862  000B40                     l2902:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;doprnt.c: 1175: {
  1866                           ;doprnt.c: 1188: if(flag & 0x03)
  1867  000B40  0E03               	movlw	3
  1868  000B42  0100               	movlb	0	; () banked
  1869  000B44  15B1               	andwf	sprintf@flag& (0+255),w,b
  1870  000B46  0100               	movlb	0	; () banked
  1871  000B48  6FA6               	movwf	??_sprintf& (0+255),b
  1872  000B4A  0E00               	movlw	0
  1873  000B4C  0100               	movlb	0	; () banked
  1874  000B4E  15B2               	andwf	(sprintf@flag+1)& (0+255),w,b
  1875  000B50  0100               	movlb	0	; () banked
  1876  000B52  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  1877  000B54  0100               	movlb	0	; () banked
  1878  000B56  51A6               	movf	??_sprintf& (0+255),w,b
  1879  000B58  0100               	movlb	0	; () banked
  1880  000B5A  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  1881  000B5C  B4D8               	btfsc	status,2,c
  1882  000B5E  D055               	goto	l2916
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1886  000B60  C09F  FFD9         	movff	sprintf@sp,fsr2l
  1887  000B64  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  1888  000B68  0E2D               	movlw	45
  1889  000B6A  D04D               	goto	L2
  1890  000B6C                     l2906:
  1891                           
  1892                           ; BSR set to: 0
  1893  000B6C  0100               	movlb	0	; () banked
  1894  000B6E  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  1895  000B70  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;doprnt.c: 1195: }
  1899                           ;doprnt.c: 1196: while(c--) {
  1900  000B72  D04B               	goto	l2916
  1901  000B74                     l2908:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;doprnt.c: 1200: {
  1905                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1906  000B74  C0B9  F060         	movff	sprintf@val,___lldiv@dividend
  1907  000B78  C0BA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  1908  000B7C  C0BB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  1909  000B80  C0BC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  1910  000B84  0100               	movlb	0	; () banked
  1911  000B86  51C2               	movf	sprintf@c& (0+255),w,b
  1912  000B88  0D04               	mullw	4
  1913  000B8A  0E01               	movlw	low _dpowers
  1914  000B8C  24F3               	addwf	prodl,w,c
  1915  000B8E  6EF6               	movwf	tblptrl,c
  1916  000B90  0E06               	movlw	high _dpowers
  1917  000B92  20F4               	addwfc	prodh,w,c
  1918  000B94  6EF7               	movwf	tblptrh,c
  1919  000B96                     	if	0	;There are less than 3 active tblptr bytes
  1920  000B96                     	endif
  1921  000B96  0009               	tblrd		*+
  1922  000B98  CFF5 F064          	movff	tablat,___lldiv@divisor
  1923  000B9C  0009               	tblrd		*+
  1924  000B9E  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  1925  000BA2  0009               	tblrd		*+
  1926  000BA4  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  1927  000BA8  000A               	tblrd		*-
  1928  000BAA  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  1929  000BAE  EC73  F013         	call	___lldiv	;wreg free
  1930  000BB2  C060  F0B5         	movff	?___lldiv,sprintf@tmpval
  1931  000BB6  C061  F0B6         	movff	?___lldiv+1,sprintf@tmpval+1
  1932  000BBA  C062  F0B7         	movff	?___lldiv+2,sprintf@tmpval+2
  1933  000BBE  C063  F0B8         	movff	?___lldiv+3,sprintf@tmpval+3
  1934                           
  1935                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1936  000BC2  C0B5  F06D         	movff	sprintf@tmpval,___llmod@dividend
  1937  000BC6  C0B6  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1938  000BCA  C0B7  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1939  000BCE  C0B8  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1940  000BD2  0E0A               	movlw	10
  1941  000BD4  0100               	movlb	0	; () banked
  1942  000BD6  6F71               	movwf	___llmod@divisor& (0+255),b
  1943  000BD8  0E00               	movlw	0
  1944  000BDA  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  1945  000BDC  0E00               	movlw	0
  1946  000BDE  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  1947  000BE0  0E00               	movlw	0
  1948  000BE2  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  1949  000BE4  EC79  F014         	call	___llmod	;wreg free
  1950  000BE8  C06D  F0B5         	movff	?___llmod,sprintf@tmpval
  1951  000BEC  C06E  F0B6         	movff	?___llmod+1,sprintf@tmpval+1
  1952  000BF0  C06F  F0B7         	movff	?___llmod+2,sprintf@tmpval+2
  1953  000BF4  C070  F0B8         	movff	?___llmod+3,sprintf@tmpval+3
  1954                           
  1955                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1956  000BF8  0100               	movlb	0	; () banked
  1957  000BFA  51B5               	movf	sprintf@tmpval& (0+255),w,b
  1958  000BFC  0F30               	addlw	48
  1959  000BFE  C09F  FFD9         	movff	sprintf@sp,fsr2l
  1960  000C02  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  1961  000C06                     L2:
  1962  000C06  6EDF               	movwf	indf2,c
  1963  000C08  D7B1               	goto	l2906
  1964  000C0A                     l2916:
  1965                           
  1966                           ; BSR set to: 0
  1967  000C0A  0100               	movlb	0	; () banked
  1968  000C0C  07C2               	decf	sprintf@c& (0+255),f,b
  1969  000C0E  0100               	movlb	0	; () banked
  1970  000C10  29C2               	incf	sprintf@c& (0+255),w,b
  1971  000C12  B4D8               	btfsc	status,2,c
  1972  000C14  D00E               	goto	l2924
  1973  000C16  D7AE               	goto	l2908
  1974  000C18                     l2918:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1978  000C18  C09F  FFD9         	movff	sprintf@sp,fsr2l
  1979  000C1C  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  1980  000C20  0E30               	movlw	48
  1981  000C22  6EDF               	movwf	indf2,c
  1982                           
  1983                           ; BSR set to: 0
  1984  000C24  0100               	movlb	0	; () banked
  1985  000C26  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  1986  000C28  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;doprnt.c: 1209: exp--;
  1990  000C2A  0100               	movlb	0	; () banked
  1991  000C2C  07B3               	decf	sprintf@exp& (0+255),f,b
  1992  000C2E  A0D8               	btfss	status,0,c
  1993  000C30  07B4               	decf	(sprintf@exp+1)& (0+255),f,b
  1994  000C32                     l2924:
  1995                           
  1996                           ; BSR set to: 0
  1997  000C32  0100               	movlb	0	; () banked
  1998  000C34  BFB4               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1999  000C36  D007               	goto	l2926
  2000  000C38  0100               	movlb	0	; () banked
  2001  000C3A  51B4               	movf	(sprintf@exp+1)& (0+255),w,b
  2002  000C3C  E1ED               	bnz	l2918
  2003  000C3E  0100               	movlb	0	; () banked
  2004  000C40  05B3               	decf	sprintf@exp& (0+255),w,b
  2005  000C42  B0D8               	btfsc	status,0,c
  2006  000C44  D7E9               	goto	l2918
  2007  000C46                     l2926:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;doprnt.c: 1210: }
  2011                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2012  000C46  0100               	movlb	0	; () banked
  2013  000C48  BFBE               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2014  000C4A  D00C               	goto	l177
  2015  000C4C  0100               	movlb	0	; () banked
  2016  000C4E  51BE               	movf	(sprintf@prec+1)& (0+255),w,b
  2017  000C50  E105               	bnz	u3200
  2018  000C52  0E09               	movlw	9
  2019  000C54  0100               	movlb	0	; () banked
  2020  000C56  5DBD               	subwf	sprintf@prec& (0+255),w,b
  2021  000C58  A0D8               	btfss	status,0,c
  2022  000C5A  D004               	goto	l177
  2023  000C5C                     u3200:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2027  000C5C  0E08               	movlw	8
  2028  000C5E  0100               	movlb	0	; () banked
  2029  000C60  6FC2               	movwf	sprintf@c& (0+255),b
  2030  000C62  D002               	goto	l2930
  2031  000C64                     l177:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;doprnt.c: 1213: else
  2035                           ;doprnt.c: 1214: c = prec;
  2036  000C64  C0BD  F0C2         	movff	sprintf@prec,sprintf@c
  2037  000C68                     l2930:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;doprnt.c: 1215: prec -= c;
  2041  000C68  0100               	movlb	0	; () banked
  2042  000C6A  51C2               	movf	sprintf@c& (0+255),w,b
  2043  000C6C  0100               	movlb	0	; () banked
  2044  000C6E  5FBD               	subwf	sprintf@prec& (0+255),f,b
  2045  000C70  0E00               	movlw	0
  2046  000C72  0100               	movlb	0	; () banked
  2047  000C74  BFC2               	btfsc	sprintf@c& (0+255),7,b
  2048  000C76  0EFF               	movlw	255
  2049  000C78  0100               	movlb	0	; () banked
  2050  000C7A  5BBE               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;doprnt.c: 1219: if(c)
  2054  000C7C  0100               	movlb	0	; () banked
  2055  000C7E  51C2               	movf	sprintf@c& (0+255),w,b
  2056  000C80  0100               	movlb	0	; () banked
  2057  000C82  B4D8               	btfsc	status,2,c
  2058  000C84  D009               	goto	l2938
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2062  000C86  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2063  000C8A  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2064  000C8E  0E2E               	movlw	46
  2065  000C90  6EDF               	movwf	indf2,c
  2066                           
  2067                           ; BSR set to: 0
  2068  000C92  0100               	movlb	0	; () banked
  2069  000C94  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2070  000C96  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2071  000C98                     l2938:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2075  000C98  0100               	movlb	0	; () banked
  2076  000C9A  51C2               	movf	sprintf@c& (0+255),w,b
  2077  000C9C  EC0D  F008         	call	_scale
  2078  000CA0  C083  F0AC         	movff	?_scale,_sprintf$985
  2079  000CA4  C084  F0AD         	movff	?_scale+1,_sprintf$985+1
  2080  000CA8  C085  F0AE         	movff	?_scale+2,_sprintf$985+2
  2081                           
  2082                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2083  000CAC  C0BF  F077         	movff	sprintf@fval,___ftmul@f2
  2084  000CB0  C0C0  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  2085  000CB4  C0C1  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  2086  000CB8  C0AC  F074         	movff	_sprintf$985,___ftmul@f1
  2087  000CBC  C0AD  F075         	movff	_sprintf$985+1,___ftmul@f1+1
  2088  000CC0  C0AE  F076         	movff	_sprintf$985+2,___ftmul@f1+2
  2089  000CC4  EC57  F00F         	call	___ftmul	;wreg free
  2090  000CC8  C074  F08A         	movff	?___ftmul,___fttol@f1
  2091  000CCC  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  2092  000CD0  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  2093  000CD4  EC06  F010         	call	___fttol	;wreg free
  2094  000CD8  C08A  F0B9         	movff	?___fttol,sprintf@val
  2095  000CDC  C08B  F0BA         	movff	?___fttol+1,sprintf@val+1
  2096  000CE0  C08C  F0BB         	movff	?___fttol+2,sprintf@val+2
  2097  000CE4  C08D  F0BC         	movff	?___fttol+3,sprintf@val+3
  2098                           
  2099                           ;doprnt.c: 1228: while(c--) {
  2100  000CE8  D074               	goto	l2952
  2101  000CEA                     l2942:
  2102                           
  2103                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2104  000CEA  C0B9  F060         	movff	sprintf@val,___lldiv@dividend
  2105  000CEE  C0BA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  2106  000CF2  C0BB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  2107  000CF6  C0BC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  2108  000CFA  0100               	movlb	0	; () banked
  2109  000CFC  51C2               	movf	sprintf@c& (0+255),w,b
  2110  000CFE  0D04               	mullw	4
  2111  000D00  0E01               	movlw	low _dpowers
  2112  000D02  24F3               	addwf	prodl,w,c
  2113  000D04  6EF6               	movwf	tblptrl,c
  2114  000D06  0E06               	movlw	high _dpowers
  2115  000D08  20F4               	addwfc	prodh,w,c
  2116  000D0A  6EF7               	movwf	tblptrh,c
  2117  000D0C                     	if	0	;There are less than 3 active tblptr bytes
  2118  000D0C                     	endif
  2119  000D0C  0009               	tblrd		*+
  2120  000D0E  CFF5 F064          	movff	tablat,___lldiv@divisor
  2121  000D12  0009               	tblrd		*+
  2122  000D14  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  2123  000D18  0009               	tblrd		*+
  2124  000D1A  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  2125  000D1E  000A               	tblrd		*-
  2126  000D20  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  2127  000D24  EC73  F013         	call	___lldiv	;wreg free
  2128  000D28  C060  F0B5         	movff	?___lldiv,sprintf@tmpval
  2129  000D2C  C061  F0B6         	movff	?___lldiv+1,sprintf@tmpval+1
  2130  000D30  C062  F0B7         	movff	?___lldiv+2,sprintf@tmpval+2
  2131  000D34  C063  F0B8         	movff	?___lldiv+3,sprintf@tmpval+3
  2132                           
  2133                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2134  000D38  C0B5  F06D         	movff	sprintf@tmpval,___llmod@dividend
  2135  000D3C  C0B6  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2136  000D40  C0B7  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2137  000D44  C0B8  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2138  000D48  0E0A               	movlw	10
  2139  000D4A  0100               	movlb	0	; () banked
  2140  000D4C  6F71               	movwf	___llmod@divisor& (0+255),b
  2141  000D4E  0E00               	movlw	0
  2142  000D50  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  2143  000D52  0E00               	movlw	0
  2144  000D54  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  2145  000D56  0E00               	movlw	0
  2146  000D58  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  2147  000D5A  EC79  F014         	call	___llmod	;wreg free
  2148  000D5E  C06D  F0B5         	movff	?___llmod,sprintf@tmpval
  2149  000D62  C06E  F0B6         	movff	?___llmod+1,sprintf@tmpval+1
  2150  000D66  C06F  F0B7         	movff	?___llmod+2,sprintf@tmpval+2
  2151  000D6A  C070  F0B8         	movff	?___llmod+3,sprintf@tmpval+3
  2152                           
  2153                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2154  000D6E  0100               	movlb	0	; () banked
  2155  000D70  51B5               	movf	sprintf@tmpval& (0+255),w,b
  2156  000D72  0F30               	addlw	48
  2157  000D74  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2158  000D78  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2159  000D7C  6EDF               	movwf	indf2,c
  2160                           
  2161                           ; BSR set to: 0
  2162  000D7E  0100               	movlb	0	; () banked
  2163  000D80  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2164  000D82  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;doprnt.c: 1232: val %= dpowers[c];
  2168  000D84  C0B9  F06D         	movff	sprintf@val,___llmod@dividend
  2169  000D88  C0BA  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  2170  000D8C  C0BB  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  2171  000D90  C0BC  F070         	movff	sprintf@val+3,___llmod@dividend+3
  2172  000D94  0100               	movlb	0	; () banked
  2173  000D96  51C2               	movf	sprintf@c& (0+255),w,b
  2174  000D98  0D04               	mullw	4
  2175  000D9A  0E01               	movlw	low _dpowers
  2176  000D9C  24F3               	addwf	prodl,w,c
  2177  000D9E  6EF6               	movwf	tblptrl,c
  2178  000DA0  0E06               	movlw	high _dpowers
  2179  000DA2  20F4               	addwfc	prodh,w,c
  2180  000DA4  6EF7               	movwf	tblptrh,c
  2181  000DA6                     	if	0	;There are less than 3 active tblptr bytes
  2182  000DA6                     	endif
  2183  000DA6  0009               	tblrd		*+
  2184  000DA8  CFF5 F071          	movff	tablat,___llmod@divisor
  2185  000DAC  0009               	tblrd		*+
  2186  000DAE  CFF5 F072          	movff	tablat,___llmod@divisor+1
  2187  000DB2  0009               	tblrd		*+
  2188  000DB4  CFF5 F073          	movff	tablat,___llmod@divisor+2
  2189  000DB8  000A               	tblrd		*-
  2190  000DBA  CFF5 F074          	movff	tablat,___llmod@divisor+3
  2191  000DBE  EC79  F014         	call	___llmod	;wreg free
  2192  000DC2  C06D  F0B9         	movff	?___llmod,sprintf@val
  2193  000DC6  C06E  F0BA         	movff	?___llmod+1,sprintf@val+1
  2194  000DCA  C06F  F0BB         	movff	?___llmod+2,sprintf@val+2
  2195  000DCE  C070  F0BC         	movff	?___llmod+3,sprintf@val+3
  2196  000DD2                     l2952:
  2197  000DD2  0100               	movlb	0	; () banked
  2198  000DD4  07C2               	decf	sprintf@c& (0+255),f,b
  2199  000DD6  0100               	movlb	0	; () banked
  2200  000DD8  29C2               	incf	sprintf@c& (0+255),w,b
  2201  000DDA  B4D8               	btfsc	status,2,c
  2202  000DDC  D00E               	goto	l2960
  2203  000DDE  D785               	goto	l2942
  2204  000DE0                     l2954:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2208  000DE0  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2209  000DE4  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2210  000DE8  0E30               	movlw	48
  2211  000DEA  6EDF               	movwf	indf2,c
  2212                           
  2213                           ; BSR set to: 0
  2214  000DEC  0100               	movlb	0	; () banked
  2215  000DEE  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2216  000DF0  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;doprnt.c: 1237: prec--;
  2220  000DF2  0100               	movlb	0	; () banked
  2221  000DF4  07BD               	decf	sprintf@prec& (0+255),f,b
  2222  000DF6  A0D8               	btfss	status,0,c
  2223  000DF8  07BE               	decf	(sprintf@prec+1)& (0+255),f,b
  2224  000DFA                     l2960:
  2225                           
  2226                           ; BSR set to: 0
  2227  000DFA  0100               	movlb	0	; () banked
  2228  000DFC  51BD               	movf	sprintf@prec& (0+255),w,b
  2229  000DFE  0100               	movlb	0	; () banked
  2230  000E00  11BE               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2231  000E02  B4D8               	btfsc	status,2,c
  2232  000E04  D0F4               	goto	l3014
  2233  000E06  D7EC               	goto	l2954
  2234  000E08                     l2962:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;doprnt.c: 1246: }
  2238                           ;doprnt.c: 1253: {
  2239                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2240  000E08  C0AF  FFD9         	movff	sprintf@ap,fsr2l
  2241  000E0C  C0B0  FFDA         	movff	sprintf@ap+1,fsr2h
  2242  000E10  CFDE F0B9          	movff	postinc2,sprintf@val
  2243  000E14  CFDD F0BA          	movff	postdec2,sprintf@val+1
  2244  000E18  0100               	movlb	0	; () banked
  2245  000E1A  0E00               	movlw	0
  2246  000E1C  BFBA               	btfsc	(sprintf@val+1)& (0+255),7,b
  2247  000E1E  0EFF               	movlw	-1
  2248  000E20  6FBB               	movwf	(sprintf@val+2)& (0+255),b
  2249  000E22  6FBC               	movwf	(sprintf@val+3)& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252  000E24  0E02               	movlw	2
  2253  000E26  0100               	movlb	0	; () banked
  2254  000E28  27AF               	addwf	sprintf@ap& (0+255),f,b
  2255  000E2A  0E00               	movlw	0
  2256  000E2C  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;doprnt.c: 1261: if((long)val < 0) {
  2260  000E2E  0100               	movlb	0	; () banked
  2261  000E30  AFBC               	btfss	(sprintf@val+3)& (0+255),7,b
  2262  000E32  D00C               	goto	l2972
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;doprnt.c: 1262: flag |= 0x03;
  2266  000E34  0E03               	movlw	3
  2267  000E36  0100               	movlb	0	; () banked
  2268  000E38  13B1               	iorwf	sprintf@flag& (0+255),f,b
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;doprnt.c: 1263: val = -val;
  2272  000E3A  0100               	movlb	0	; () banked
  2273  000E3C  1FBC               	comf	(sprintf@val+3)& (0+255),f,b
  2274  000E3E  1FBB               	comf	(sprintf@val+2)& (0+255),f,b
  2275  000E40  1FBA               	comf	(sprintf@val+1)& (0+255),f,b
  2276  000E42  6DB9               	negf	sprintf@val& (0+255),b
  2277  000E44  0E00               	movlw	0
  2278  000E46  23BA               	addwfc	(sprintf@val+1)& (0+255),f,b
  2279  000E48  23BB               	addwfc	(sprintf@val+2)& (0+255),f,b
  2280  000E4A  23BC               	addwfc	(sprintf@val+3)& (0+255),f,b
  2281  000E4C                     l2972:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;doprnt.c: 1264: }
  2285                           ;doprnt.c: 1266: }
  2286                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2287  000E4C  0100               	movlb	0	; () banked
  2288  000E4E  51BD               	movf	sprintf@prec& (0+255),w,b
  2289  000E50  0100               	movlb	0	; () banked
  2290  000E52  11BE               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2291  000E54  A4D8               	btfss	status,2,c
  2292  000E56  D00D               	goto	l2978
  2293                           
  2294                           ; BSR set to: 0
  2295  000E58  0100               	movlb	0	; () banked
  2296  000E5A  51B9               	movf	sprintf@val& (0+255),w,b
  2297  000E5C  0100               	movlb	0	; () banked
  2298  000E5E  11BA               	iorwf	(sprintf@val+1)& (0+255),w,b
  2299  000E60  0100               	movlb	0	; () banked
  2300  000E62  11BB               	iorwf	(sprintf@val+2)& (0+255),w,b
  2301  000E64  0100               	movlb	0	; () banked
  2302  000E66  11BC               	iorwf	(sprintf@val+3)& (0+255),w,b
  2303  000E68  A4D8               	btfss	status,2,c
  2304  000E6A  D003               	goto	l2978
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;doprnt.c: 1291: prec++;
  2308  000E6C  0100               	movlb	0	; () banked
  2309  000E6E  4BBD               	infsnz	sprintf@prec& (0+255),f,b
  2310  000E70  2BBE               	incf	(sprintf@prec+1)& (0+255),f,b
  2311  000E72                     l2978:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2315  000E72  0E01               	movlw	1
  2316  000E74  0100               	movlb	0	; () banked
  2317  000E76  6FC2               	movwf	sprintf@c& (0+255),b
  2318  000E78                     l2980:
  2319                           
  2320                           ; BSR set to: 0
  2321  000E78  0E0A               	movlw	10
  2322  000E7A  0100               	movlb	0	; () banked
  2323  000E7C  19C2               	xorwf	sprintf@c& (0+255),w,b
  2324  000E7E  B4D8               	btfsc	status,2,c
  2325  000E80  D01E               	goto	l2992
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;doprnt.c: 1306: if(val < dpowers[c])
  2329                           
  2330                           ; BSR set to: 0
  2331                           
  2332                           ; BSR set to: 0
  2333  000E82  0100               	movlb	0	; () banked
  2334  000E84  51C2               	movf	sprintf@c& (0+255),w,b
  2335  000E86  0D04               	mullw	4
  2336  000E88  0E01               	movlw	low _dpowers
  2337  000E8A  24F3               	addwf	prodl,w,c
  2338  000E8C  6EF6               	movwf	tblptrl,c
  2339  000E8E  0E06               	movlw	high _dpowers
  2340  000E90  20F4               	addwfc	prodh,w,c
  2341  000E92  6EF7               	movwf	tblptrh,c
  2342  000E94                     	if	0	;There are less than 3 active tblptr bytes
  2343  000E94                     	endif
  2344  000E94  0009               	tblrd		*+
  2345  000E96  50F5               	movf	tablat,w,c
  2346  000E98  0100               	movlb	0	; () banked
  2347  000E9A  5DB9               	subwf	sprintf@val& (0+255),w,b
  2348  000E9C  0009               	tblrd		*+
  2349  000E9E  50F5               	movf	tablat,w,c
  2350  000EA0  0100               	movlb	0	; () banked
  2351  000EA2  59BA               	subwfb	(sprintf@val+1)& (0+255),w,b
  2352  000EA4  0009               	tblrd		*+
  2353  000EA6  50F5               	movf	tablat,w,c
  2354  000EA8  0100               	movlb	0	; () banked
  2355  000EAA  59BB               	subwfb	(sprintf@val+2)& (0+255),w,b
  2356  000EAC  0009               	tblrd		*+
  2357  000EAE  50F5               	movf	tablat,w,c
  2358  000EB0  0100               	movlb	0	; () banked
  2359  000EB2  59BC               	subwfb	(sprintf@val+3)& (0+255),w,b
  2360  000EB4  A0D8               	btfss	status,0,c
  2361  000EB6  D003               	goto	l2992
  2362                           
  2363                           ; BSR set to: 0
  2364                           
  2365                           ; BSR set to: 0
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;doprnt.c: 1307: break;
  2369  000EB8  0100               	movlb	0	; () banked
  2370  000EBA  2BC2               	incf	sprintf@c& (0+255),f,b
  2371  000EBC  D7DD               	goto	l2980
  2372  000EBE                     l2992:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;doprnt.c: 1339: if(c < prec)
  2376  000EBE  0E80               	movlw	128
  2377  000EC0  0100               	movlb	0	; () banked
  2378  000EC2  BFC2               	btfsc	sprintf@c& (0+255),7,b
  2379  000EC4  0E7F               	movlw	127
  2380  000EC6  0100               	movlb	0	; () banked
  2381  000EC8  6FA6               	movwf	??_sprintf& (0+255),b
  2382  000ECA  0100               	movlb	0	; () banked
  2383  000ECC  51BD               	movf	sprintf@prec& (0+255),w,b
  2384  000ECE  0100               	movlb	0	; () banked
  2385  000ED0  5DC2               	subwf	sprintf@c& (0+255),w,b
  2386  000ED2  0100               	movlb	0	; () banked
  2387  000ED4  51BE               	movf	(sprintf@prec+1)& (0+255),w,b
  2388  000ED6  0A80               	xorlw	128
  2389  000ED8  0100               	movlb	0	; () banked
  2390  000EDA  59A6               	subwfb	??_sprintf& (0+255),w,b
  2391  000EDC  B0D8               	btfsc	status,0,c
  2392  000EDE  D003               	goto	l2996
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;doprnt.c: 1340: c = prec;
  2396  000EE0  C0BD  F0C2         	movff	sprintf@prec,sprintf@c
  2397  000EE4  D018               	goto	l3000
  2398  000EE6                     l2996:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;doprnt.c: 1341: else if(prec < c)
  2402  000EE6  0100               	movlb	0	; () banked
  2403  000EE8  51BE               	movf	(sprintf@prec+1)& (0+255),w,b
  2404  000EEA  0A80               	xorlw	128
  2405  000EEC  0100               	movlb	0	; () banked
  2406  000EEE  6FA6               	movwf	??_sprintf& (0+255),b
  2407  000EF0  0100               	movlb	0	; () banked
  2408  000EF2  51C2               	movf	sprintf@c& (0+255),w,b
  2409  000EF4  0100               	movlb	0	; () banked
  2410  000EF6  5DBD               	subwf	sprintf@prec& (0+255),w,b
  2411  000EF8  0E80               	movlw	128
  2412  000EFA  0100               	movlb	0	; () banked
  2413  000EFC  BFC2               	btfsc	sprintf@c& (0+255),7,b
  2414  000EFE  0E7F               	movlw	127
  2415  000F00  0100               	movlb	0	; () banked
  2416  000F02  59A6               	subwfb	??_sprintf& (0+255),w,b
  2417  000F04  B0D8               	btfsc	status,0,c
  2418  000F06  D007               	goto	l3000
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;doprnt.c: 1342: prec = c;
  2422  000F08  0100               	movlb	0	; () banked
  2423  000F0A  51C2               	movf	sprintf@c& (0+255),w,b
  2424  000F0C  0100               	movlb	0	; () banked
  2425  000F0E  6FBD               	movwf	sprintf@prec& (0+255),b
  2426  000F10  6BBE               	clrf	(sprintf@prec+1)& (0+255),b
  2427  000F12  BFBD               	btfsc	sprintf@prec& (0+255),7,b
  2428  000F14  07BE               	decf	(sprintf@prec+1)& (0+255),f,b
  2429  000F16                     l3000:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;doprnt.c: 1422: {
  2433                           ;doprnt.c: 1438: if(flag & 0x03)
  2434  000F16  0E03               	movlw	3
  2435  000F18  0100               	movlb	0	; () banked
  2436  000F1A  15B1               	andwf	sprintf@flag& (0+255),w,b
  2437  000F1C  0100               	movlb	0	; () banked
  2438  000F1E  6FA6               	movwf	??_sprintf& (0+255),b
  2439  000F20  0E00               	movlw	0
  2440  000F22  0100               	movlb	0	; () banked
  2441  000F24  15B2               	andwf	(sprintf@flag+1)& (0+255),w,b
  2442  000F26  0100               	movlb	0	; () banked
  2443  000F28  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  2444  000F2A  0100               	movlb	0	; () banked
  2445  000F2C  51A6               	movf	??_sprintf& (0+255),w,b
  2446  000F2E  0100               	movlb	0	; () banked
  2447  000F30  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  2448  000F32  B4D8               	btfsc	status,2,c
  2449  000F34  D051               	goto	l3012
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2453  000F36  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2454  000F3A  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2455  000F3E  0E2D               	movlw	45
  2456  000F40  6EDF               	movwf	indf2,c
  2457  000F42  D047               	goto	l3010
  2458  000F44                     l3006:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;doprnt.c: 1478: {
  2462                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2463  000F44  C0BD  F0A6         	movff	sprintf@prec,??_sprintf
  2464  000F48  C0BE  F0A7         	movff	sprintf@prec+1,??_sprintf+1
  2465  000F4C  0100               	movlb	0	; () banked
  2466  000F4E  90D8               	bcf	status,0,c
  2467  000F50  37A6               	rlcf	??_sprintf& (0+255),f,b
  2468  000F52  37A7               	rlcf	(??_sprintf+1)& (0+255),f,b
  2469  000F54  0100               	movlb	0	; () banked
  2470  000F56  90D8               	bcf	status,0,c
  2471  000F58  37A6               	rlcf	??_sprintf& (0+255),f,b
  2472  000F5A  37A7               	rlcf	(??_sprintf+1)& (0+255),f,b
  2473  000F5C  0E01               	movlw	low _dpowers
  2474  000F5E  0100               	movlb	0	; () banked
  2475  000F60  25A6               	addwf	??_sprintf& (0+255),w,b
  2476  000F62  6EF6               	movwf	tblptrl,c
  2477  000F64  0E06               	movlw	high _dpowers
  2478  000F66  21A7               	addwfc	(??_sprintf+1)& (0+255),w,b
  2479  000F68  6EF7               	movwf	tblptrh,c
  2480  000F6A                     	if	0	;There are less than 3 active tblptr bytes
  2481  000F6A                     	endif
  2482  000F6A  0009               	tblrd		*+
  2483  000F6C  CFF5 F064          	movff	tablat,___lldiv@divisor
  2484  000F70  0009               	tblrd		*+
  2485  000F72  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  2486  000F76  0009               	tblrd		*+
  2487  000F78  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  2488  000F7C  000A               	tblrd		*-
  2489  000F7E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  2490  000F82  C0B9  F060         	movff	sprintf@val,___lldiv@dividend
  2491  000F86  C0BA  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  2492  000F8A  C0BB  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  2493  000F8E  C0BC  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  2494  000F92  EC73  F013         	call	___lldiv	;wreg free
  2495  000F96  C060  F06D         	movff	?___lldiv,___llmod@dividend
  2496  000F9A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  2497  000F9E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  2498  000FA2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  2499  000FA6  0E0A               	movlw	10
  2500  000FA8  0100               	movlb	0	; () banked
  2501  000FAA  6F71               	movwf	___llmod@divisor& (0+255),b
  2502  000FAC  0E00               	movlw	0
  2503  000FAE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  2504  000FB0  0E00               	movlw	0
  2505  000FB2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  2506  000FB4  0E00               	movlw	0
  2507  000FB6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  2508  000FB8  EC79  F014         	call	___llmod	;wreg free
  2509  000FBC  0100               	movlb	0	; () banked
  2510  000FBE  516D               	movf	?___llmod& (0+255),w,b
  2511  000FC0  0F30               	addlw	48
  2512  000FC2  0100               	movlb	0	; () banked
  2513  000FC4  6FC2               	movwf	sprintf@c& (0+255),b
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;doprnt.c: 1523: }
  2517                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2518  000FC6  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2519  000FCA  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2520  000FCE  C0C2  FFDF         	movff	sprintf@c,indf2
  2521  000FD2                     l3010:
  2522                           
  2523                           ; BSR set to: 0
  2524  000FD2  0100               	movlb	0	; () banked
  2525  000FD4  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2526  000FD6  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2527  000FD8                     l3012:
  2528                           
  2529                           ; BSR set to: 0
  2530  000FD8  0100               	movlb	0	; () banked
  2531  000FDA  07BD               	decf	sprintf@prec& (0+255),f,b
  2532  000FDC  A0D8               	btfss	status,0,c
  2533  000FDE  07BE               	decf	(sprintf@prec+1)& (0+255),f,b
  2534  000FE0  0100               	movlb	0	; () banked
  2535  000FE2  29BD               	incf	sprintf@prec& (0+255),w,b
  2536  000FE4  E1AF               	bnz	l3006
  2537  000FE6  0100               	movlb	0	; () banked
  2538  000FE8  29BE               	incf	(sprintf@prec+1)& (0+255),w,b
  2539  000FEA  A4D8               	btfss	status,2,c
  2540  000FEC  D7AB               	goto	l3006
  2541  000FEE                     l3014:
  2542                           
  2543                           ; BSR set to: 0
  2544  000FEE  C0A1  FFF6         	movff	sprintf@f,tblptrl
  2545  000FF2  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  2546  000FF6  0100               	movlb	0	; () banked
  2547  000FF8  4BA1               	infsnz	sprintf@f& (0+255),f,b
  2548  000FFA  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  2549  000FFC                     	if	0	;tblptru may be non-zero
  2550  000FFC                     	endif
  2551  000FFC                     	if	0	;tblptru may be non-zero
  2552  000FFC                     	endif
  2553  000FFC  0008               	tblrd		*
  2554  000FFE  CFF5 F0C2          	movff	tablat,sprintf@c
  2555  001002  0100               	movlb	0	; () banked
  2556  001004  51C2               	movf	sprintf@c& (0+255),w,b
  2557  001006  A4D8               	btfss	status,2,c
  2558  001008  EF5A  F003         	goto	l2784
  2559  00100C                     l3016:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;doprnt.c: 1538: *sp = 0;
  2563  00100C  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2564  001010  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2565  001014  0E00               	movlw	0
  2566  001016  6EDF               	movwf	indf2,c
  2567  001018  0012               	return	
  2568  00101A                     __end_of_sprintf:
  2569                           	opt stack 0
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           postinc0	equ	0xFEE
  2577                           wreg	equ	0xFE8
  2578                           indf2	equ	0xFDF
  2579                           postinc2	equ	0xFDE
  2580                           postdec2	equ	0xFDD
  2581                           fsr2h	equ	0xFDA
  2582                           fsr2l	equ	0xFD9
  2583                           status	equ	0xFD8
  2584                           
  2585 ;; *************** function _scale *****************
  2586 ;; Defined at:
  2587 ;;		line 425 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  scl             1    wreg     char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  scl             1   41[BANK0 ] char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  3   35[BANK0 ] char 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:         0       3       0       0       0       0       0
  2602 ;;      Locals:         0       4       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0
  2604 ;;      Totals:         0       7       0       0       0       0       0
  2605 ;;Total ram usage:        7 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    6
  2608 ;; This function calls:
  2609 ;;		___awdiv
  2610 ;;		___awmod
  2611 ;;		___ftmul
  2612 ;;		___wmul
  2613 ;; This function is called by:
  2614 ;;		_sprintf
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text2
  2619  00101A                     __ptext2:
  2620                           	opt stack 0
  2621  00101A                     _scale:
  2622                           	opt stack 23
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;incstack = 0
  2626                           ;scale@scl stored from wreg
  2627  00101A  0100               	movlb	0	; () banked
  2628  00101C  6F89               	movwf	scale@scl& (0+255),b
  2629                           
  2630                           ;doprnt.c: 428: if(scl < 0) {
  2631  00101E  0100               	movlb	0	; () banked
  2632  001020  AF89               	btfss	scale@scl& (0+255),7,b
  2633  001022  D12A               	goto	l2390
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;doprnt.c: 429: scl = -scl;
  2637  001024  0100               	movlb	0	; () banked
  2638  001026  6D89               	negf	scale@scl& (0+255),b
  2639                           
  2640                           ;doprnt.c: 430: if(scl>=110)
  2641  001028  0100               	movlb	0	; () banked
  2642  00102A  5189               	movf	scale@scl& (0+255),w,b
  2643  00102C  0A80               	xorlw	128
  2644  00102E  0F12               	addlw	-238
  2645  001030  A0D8               	btfss	status,0,c
  2646  001032  D0AC               	goto	l2380
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2650  001034  0E00               	movlw	0
  2651  001036  0100               	movlb	0	; () banked
  2652  001038  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2653  00103A  0E03               	movlw	3
  2654  00103C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  2655  00103E  0E00               	movlw	0
  2656  001040  0100               	movlb	0	; () banked
  2657  001042  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  2658  001044  0E0A               	movlw	10
  2659  001046  6F68               	movwf	___awdiv@divisor& (0+255),b
  2660  001048  0E00               	movlw	0
  2661  00104A  0100               	movlb	0	; () banked
  2662  00104C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2663  00104E  0E64               	movlw	100
  2664  001050  6F62               	movwf	___awmod@divisor& (0+255),b
  2665  001052  0100               	movlb	0	; () banked
  2666  001054  5189               	movf	scale@scl& (0+255),w,b
  2667  001056  0100               	movlb	0	; () banked
  2668  001058  6F60               	movwf	___awmod@dividend& (0+255),b
  2669  00105A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  2670  00105C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  2671  00105E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  2672  001060  EC28  F014         	call	___awmod	;wreg free
  2673  001064  C060  F066         	movff	?___awmod,___awdiv@dividend
  2674  001068  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  2675  00106C  EC14  F013         	call	___awdiv	;wreg free
  2676  001070  0E09               	movlw	9
  2677  001072  0100               	movlb	0	; () banked
  2678  001074  2566               	addwf	?___awdiv& (0+255),w,b
  2679  001076  0100               	movlb	0	; () banked
  2680  001078  6F6E               	movwf	___wmul@multiplier& (0+255),b
  2681  00107A  0E00               	movlw	0
  2682  00107C  0100               	movlb	0	; () banked
  2683  00107E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  2684  001080  0100               	movlb	0	; () banked
  2685  001082  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  2686  001084  ECAD  F015         	call	___wmul	;wreg free
  2687  001088  0E50               	movlw	low __npowers_
  2688  00108A  0100               	movlb	0	; () banked
  2689  00108C  256E               	addwf	?___wmul& (0+255),w,b
  2690  00108E  6EF6               	movwf	tblptrl,c
  2691  001090  0E06               	movlw	high __npowers_
  2692  001092  0100               	movlb	0	; () banked
  2693  001094  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  2694  001096  6EF7               	movwf	tblptrh,c
  2695  001098                     	if	0	;There are less than 3 active tblptr bytes
  2696  001098                     	endif
  2697  001098  0009               	tblrd		*+
  2698  00109A  CFF5 F077          	movff	tablat,___ftmul@f2
  2699  00109E  0009               	tblrd		*+
  2700  0010A0  CFF5 F078          	movff	tablat,___ftmul@f2+1
  2701  0010A4  000A               	tblrd		*-
  2702  0010A6  CFF5 F079          	movff	tablat,___ftmul@f2+2
  2703  0010AA  0E00               	movlw	0
  2704  0010AC  0100               	movlb	0	; () banked
  2705  0010AE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  2706  0010B0  0E64               	movlw	100
  2707  0010B2  6F68               	movwf	___awdiv@divisor& (0+255),b
  2708  0010B4  0100               	movlb	0	; () banked
  2709  0010B6  5189               	movf	scale@scl& (0+255),w,b
  2710  0010B8  0100               	movlb	0	; () banked
  2711  0010BA  6F66               	movwf	___awdiv@dividend& (0+255),b
  2712  0010BC  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  2713  0010BE  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  2714  0010C0  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2715  0010C2  EC14  F013         	call	___awdiv	;wreg free
  2716  0010C6  0E12               	movlw	18
  2717  0010C8  0100               	movlb	0	; () banked
  2718  0010CA  2566               	addwf	?___awdiv& (0+255),w,b
  2719  0010CC  0100               	movlb	0	; () banked
  2720  0010CE  6F6E               	movwf	___wmul@multiplier& (0+255),b
  2721  0010D0  0E00               	movlw	0
  2722  0010D2  0100               	movlb	0	; () banked
  2723  0010D4  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  2724  0010D6  0100               	movlb	0	; () banked
  2725  0010D8  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  2726  0010DA  0E00               	movlw	0
  2727  0010DC  0100               	movlb	0	; () banked
  2728  0010DE  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2729  0010E0  0E03               	movlw	3
  2730  0010E2  6F70               	movwf	___wmul@multiplicand& (0+255),b
  2731  0010E4  ECAD  F015         	call	___wmul	;wreg free
  2732  0010E8  0E50               	movlw	low __npowers_
  2733  0010EA  0100               	movlb	0	; () banked
  2734  0010EC  256E               	addwf	?___wmul& (0+255),w,b
  2735  0010EE  6EF6               	movwf	tblptrl,c
  2736  0010F0  0E06               	movlw	high __npowers_
  2737  0010F2  0100               	movlb	0	; () banked
  2738  0010F4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  2739  0010F6  6EF7               	movwf	tblptrh,c
  2740  0010F8                     	if	0	;There are less than 3 active tblptr bytes
  2741  0010F8                     	endif
  2742  0010F8  0009               	tblrd		*+
  2743  0010FA  CFF5 F074          	movff	tablat,___ftmul@f1
  2744  0010FE  0009               	tblrd		*+
  2745  001100  CFF5 F075          	movff	tablat,___ftmul@f1+1
  2746  001104  000A               	tblrd		*-
  2747  001106  CFF5 F076          	movff	tablat,___ftmul@f1+2
  2748  00110A  EC57  F00F         	call	___ftmul	;wreg free
  2749  00110E  C074  F086         	movff	?___ftmul,_scale$984
  2750  001112  C075  F087         	movff	?___ftmul+1,_scale$984+1
  2751  001116  C076  F088         	movff	?___ftmul+2,_scale$984+2
  2752                           
  2753                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2754  00111A  C086  F074         	movff	_scale$984,___ftmul@f1
  2755  00111E  C087  F075         	movff	_scale$984+1,___ftmul@f1+1
  2756  001122  C088  F076         	movff	_scale$984+2,___ftmul@f1+2
  2757  001126  0E00               	movlw	0
  2758  001128  0100               	movlb	0	; () banked
  2759  00112A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2760  00112C  0E03               	movlw	3
  2761  00112E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  2762  001130  0E00               	movlw	0
  2763  001132  0100               	movlb	0	; () banked
  2764  001134  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2765  001136  0E0A               	movlw	10
  2766  001138  6F62               	movwf	___awmod@divisor& (0+255),b
  2767  00113A  0100               	movlb	0	; () banked
  2768  00113C  5189               	movf	scale@scl& (0+255),w,b
  2769  00113E  0100               	movlb	0	; () banked
  2770  001140  6F60               	movwf	___awmod@dividend& (0+255),b
  2771  001142  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  2772  001144  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  2773  001146  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  2774  001148  EC28  F014         	call	___awmod	;wreg free
  2775  00114C  C060  F06E         	movff	?___awmod,___wmul@multiplier
  2776  001150  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  2777  001154  ECAD  F015         	call	___wmul	;wreg free
  2778  001158  0E50               	movlw	low __npowers_
  2779  00115A  0100               	movlb	0	; () banked
  2780  00115C  256E               	addwf	?___wmul& (0+255),w,b
  2781  00115E  6EF6               	movwf	tblptrl,c
  2782  001160  0E06               	movlw	high __npowers_
  2783  001162  0100               	movlb	0	; () banked
  2784  001164  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  2785  001166  6EF7               	movwf	tblptrh,c
  2786  001168                     	if	0	;There are less than 3 active tblptr bytes
  2787  001168                     	endif
  2788  001168  0009               	tblrd		*+
  2789  00116A  CFF5 F077          	movff	tablat,___ftmul@f2
  2790  00116E  0009               	tblrd		*+
  2791  001170  CFF5 F078          	movff	tablat,___ftmul@f2+1
  2792  001174  000A               	tblrd		*-
  2793  001176  CFF5 F079          	movff	tablat,___ftmul@f2+2
  2794  00117A  EC57  F00F         	call	___ftmul	;wreg free
  2795  00117E  C074  F083         	movff	?___ftmul,?_scale
  2796  001182  C075  F084         	movff	?___ftmul+1,?_scale+1
  2797  001186  C076  F085         	movff	?___ftmul+2,?_scale+2
  2798  00118A  0012               	return	
  2799  00118C                     l2380:
  2800                           
  2801                           ;doprnt.c: 432: else if(scl > 10)
  2802  00118C  0100               	movlb	0	; () banked
  2803  00118E  5189               	movf	scale@scl& (0+255),w,b
  2804  001190  0A80               	xorlw	128
  2805  001192  0F75               	addlw	-139
  2806  001194  A0D8               	btfss	status,0,c
  2807  001196  D05D               	goto	l2386
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2811  001198  0E00               	movlw	0
  2812  00119A  0100               	movlb	0	; () banked
  2813  00119C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  2814  00119E  0E0A               	movlw	10
  2815  0011A0  6F68               	movwf	___awdiv@divisor& (0+255),b
  2816  0011A2  0100               	movlb	0	; () banked
  2817  0011A4  5189               	movf	scale@scl& (0+255),w,b
  2818  0011A6  0100               	movlb	0	; () banked
  2819  0011A8  6F66               	movwf	___awdiv@dividend& (0+255),b
  2820  0011AA  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  2821  0011AC  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  2822  0011AE  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2823  0011B0  EC14  F013         	call	___awdiv	;wreg free
  2824  0011B4  0E09               	movlw	9
  2825  0011B6  0100               	movlb	0	; () banked
  2826  0011B8  2566               	addwf	?___awdiv& (0+255),w,b
  2827  0011BA  0100               	movlb	0	; () banked
  2828  0011BC  6F6E               	movwf	___wmul@multiplier& (0+255),b
  2829  0011BE  0E00               	movlw	0
  2830  0011C0  0100               	movlb	0	; () banked
  2831  0011C2  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  2832  0011C4  0100               	movlb	0	; () banked
  2833  0011C6  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  2834  0011C8  0E00               	movlw	0
  2835  0011CA  0100               	movlb	0	; () banked
  2836  0011CC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2837  0011CE  0E03               	movlw	3
  2838  0011D0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  2839  0011D2  ECAD  F015         	call	___wmul	;wreg free
  2840  0011D6  0E50               	movlw	low __npowers_
  2841  0011D8  0100               	movlb	0	; () banked
  2842  0011DA  256E               	addwf	?___wmul& (0+255),w,b
  2843  0011DC  6EF6               	movwf	tblptrl,c
  2844  0011DE  0E06               	movlw	high __npowers_
  2845  0011E0  0100               	movlb	0	; () banked
  2846  0011E2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  2847  0011E4  6EF7               	movwf	tblptrh,c
  2848  0011E6                     	if	0	;There are less than 3 active tblptr bytes
  2849  0011E6                     	endif
  2850  0011E6  0009               	tblrd		*+
  2851  0011E8  CFF5 F074          	movff	tablat,___ftmul@f1
  2852  0011EC  0009               	tblrd		*+
  2853  0011EE  CFF5 F075          	movff	tablat,___ftmul@f1+1
  2854  0011F2  000A               	tblrd		*-
  2855  0011F4  CFF5 F076          	movff	tablat,___ftmul@f1+2
  2856  0011F8  0E00               	movlw	0
  2857  0011FA  0100               	movlb	0	; () banked
  2858  0011FC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2859  0011FE  0E03               	movlw	3
  2860  001200  6F70               	movwf	___wmul@multiplicand& (0+255),b
  2861  001202  0E00               	movlw	0
  2862  001204  0100               	movlb	0	; () banked
  2863  001206  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2864  001208  0E0A               	movlw	10
  2865  00120A  6F62               	movwf	___awmod@divisor& (0+255),b
  2866  00120C  0100               	movlb	0	; () banked
  2867  00120E  5189               	movf	scale@scl& (0+255),w,b
  2868  001210  0100               	movlb	0	; () banked
  2869  001212  6F60               	movwf	___awmod@dividend& (0+255),b
  2870  001214  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  2871  001216  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  2872  001218  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  2873  00121A  EC28  F014         	call	___awmod	;wreg free
  2874  00121E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  2875  001222  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  2876  001226  ECAD  F015         	call	___wmul	;wreg free
  2877  00122A  0E50               	movlw	low __npowers_
  2878  00122C  0100               	movlb	0	; () banked
  2879  00122E  256E               	addwf	?___wmul& (0+255),w,b
  2880  001230  6EF6               	movwf	tblptrl,c
  2881  001232  0E06               	movlw	high __npowers_
  2882  001234  0100               	movlb	0	; () banked
  2883  001236  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  2884  001238  6EF7               	movwf	tblptrh,c
  2885  00123A                     	if	0	;There are less than 3 active tblptr bytes
  2886  00123A                     	endif
  2887  00123A  0009               	tblrd		*+
  2888  00123C  CFF5 F077          	movff	tablat,___ftmul@f2
  2889  001240  0009               	tblrd		*+
  2890  001242  CFF5 F078          	movff	tablat,___ftmul@f2+1
  2891  001246  000A               	tblrd		*-
  2892  001248  CFF5 F079          	movff	tablat,___ftmul@f2+2
  2893  00124C  EC57  F00F         	call	___ftmul	;wreg free
  2894  001250  D796               	goto	L3
  2895  001252                     l2386:
  2896                           
  2897                           ;doprnt.c: 434: return _npowers_[scl];
  2898  001252  0100               	movlb	0	; () banked
  2899  001254  5189               	movf	scale@scl& (0+255),w,b
  2900  001256  0D03               	mullw	3
  2901  001258  0E50               	movlw	low __npowers_
  2902  00125A  24F3               	addwf	prodl,w,c
  2903  00125C  6EF6               	movwf	tblptrl,c
  2904  00125E  0E06               	movlw	high __npowers_
  2905  001260  20F4               	addwfc	prodh,w,c
  2906  001262  6EF7               	movwf	tblptrh,c
  2907  001264                     	if	0	;There are less than 3 active tblptr bytes
  2908  001264                     	endif
  2909  001264  0009               	tblrd		*+
  2910  001266  CFF5 F083          	movff	tablat,?_scale
  2911  00126A  0009               	tblrd		*+
  2912  00126C  CFF5 F084          	movff	tablat,?_scale+1
  2913  001270  000A               	tblrd		*-
  2914  001272  CFF5 F085          	movff	tablat,?_scale+2
  2915                           
  2916                           ; BSR set to: 0
  2917  001276  0012               	return	
  2918  001278                     l2390:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;doprnt.c: 435: }
  2922                           ;doprnt.c: 436: if(scl>=110)
  2923  001278  0100               	movlb	0	; () banked
  2924  00127A  5189               	movf	scale@scl& (0+255),w,b
  2925  00127C  0A80               	xorlw	128
  2926  00127E  0F12               	addlw	-238
  2927  001280  A0D8               	btfss	status,0,c
  2928  001282  D0AC               	goto	l2398
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2932  001284  0E00               	movlw	0
  2933  001286  0100               	movlb	0	; () banked
  2934  001288  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2935  00128A  0E03               	movlw	3
  2936  00128C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  2937  00128E  0E00               	movlw	0
  2938  001290  0100               	movlb	0	; () banked
  2939  001292  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  2940  001294  0E0A               	movlw	10
  2941  001296  6F68               	movwf	___awdiv@divisor& (0+255),b
  2942  001298  0E00               	movlw	0
  2943  00129A  0100               	movlb	0	; () banked
  2944  00129C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  2945  00129E  0E64               	movlw	100
  2946  0012A0  6F62               	movwf	___awmod@divisor& (0+255),b
  2947  0012A2  0100               	movlb	0	; () banked
  2948  0012A4  5189               	movf	scale@scl& (0+255),w,b
  2949  0012A6  0100               	movlb	0	; () banked
  2950  0012A8  6F60               	movwf	___awmod@dividend& (0+255),b
  2951  0012AA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  2952  0012AC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  2953  0012AE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  2954  0012B0  EC28  F014         	call	___awmod	;wreg free
  2955  0012B4  C060  F066         	movff	?___awmod,___awdiv@dividend
  2956  0012B8  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  2957  0012BC  EC14  F013         	call	___awdiv	;wreg free
  2958  0012C0  0E09               	movlw	9
  2959  0012C2  0100               	movlb	0	; () banked
  2960  0012C4  2566               	addwf	?___awdiv& (0+255),w,b
  2961  0012C6  0100               	movlb	0	; () banked
  2962  0012C8  6F6E               	movwf	___wmul@multiplier& (0+255),b
  2963  0012CA  0E00               	movlw	0
  2964  0012CC  0100               	movlb	0	; () banked
  2965  0012CE  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  2966  0012D0  0100               	movlb	0	; () banked
  2967  0012D2  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  2968  0012D4  ECAD  F015         	call	___wmul	;wreg free
  2969  0012D8  0E29               	movlw	low __powers_
  2970  0012DA  0100               	movlb	0	; () banked
  2971  0012DC  256E               	addwf	?___wmul& (0+255),w,b
  2972  0012DE  6EF6               	movwf	tblptrl,c
  2973  0012E0  0E06               	movlw	high __powers_
  2974  0012E2  0100               	movlb	0	; () banked
  2975  0012E4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  2976  0012E6  6EF7               	movwf	tblptrh,c
  2977  0012E8                     	if	0	;There are less than 3 active tblptr bytes
  2978  0012E8                     	endif
  2979  0012E8  0009               	tblrd		*+
  2980  0012EA  CFF5 F077          	movff	tablat,___ftmul@f2
  2981  0012EE  0009               	tblrd		*+
  2982  0012F0  CFF5 F078          	movff	tablat,___ftmul@f2+1
  2983  0012F4  000A               	tblrd		*-
  2984  0012F6  CFF5 F079          	movff	tablat,___ftmul@f2+2
  2985  0012FA  0E00               	movlw	0
  2986  0012FC  0100               	movlb	0	; () banked
  2987  0012FE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  2988  001300  0E64               	movlw	100
  2989  001302  6F68               	movwf	___awdiv@divisor& (0+255),b
  2990  001304  0100               	movlb	0	; () banked
  2991  001306  5189               	movf	scale@scl& (0+255),w,b
  2992  001308  0100               	movlb	0	; () banked
  2993  00130A  6F66               	movwf	___awdiv@dividend& (0+255),b
  2994  00130C  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  2995  00130E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  2996  001310  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2997  001312  EC14  F013         	call	___awdiv	;wreg free
  2998  001316  0E12               	movlw	18
  2999  001318  0100               	movlb	0	; () banked
  3000  00131A  2566               	addwf	?___awdiv& (0+255),w,b
  3001  00131C  0100               	movlb	0	; () banked
  3002  00131E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3003  001320  0E00               	movlw	0
  3004  001322  0100               	movlb	0	; () banked
  3005  001324  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3006  001326  0100               	movlb	0	; () banked
  3007  001328  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3008  00132A  0E00               	movlw	0
  3009  00132C  0100               	movlb	0	; () banked
  3010  00132E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3011  001330  0E03               	movlw	3
  3012  001332  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3013  001334  ECAD  F015         	call	___wmul	;wreg free
  3014  001338  0E29               	movlw	low __powers_
  3015  00133A  0100               	movlb	0	; () banked
  3016  00133C  256E               	addwf	?___wmul& (0+255),w,b
  3017  00133E  6EF6               	movwf	tblptrl,c
  3018  001340  0E06               	movlw	high __powers_
  3019  001342  0100               	movlb	0	; () banked
  3020  001344  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3021  001346  6EF7               	movwf	tblptrh,c
  3022  001348                     	if	0	;There are less than 3 active tblptr bytes
  3023  001348                     	endif
  3024  001348  0009               	tblrd		*+
  3025  00134A  CFF5 F074          	movff	tablat,___ftmul@f1
  3026  00134E  0009               	tblrd		*+
  3027  001350  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3028  001354  000A               	tblrd		*-
  3029  001356  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3030  00135A  EC57  F00F         	call	___ftmul	;wreg free
  3031  00135E  C074  F086         	movff	?___ftmul,_scale$984
  3032  001362  C075  F087         	movff	?___ftmul+1,_scale$984+1
  3033  001366  C076  F088         	movff	?___ftmul+2,_scale$984+2
  3034                           
  3035                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3036  00136A  C086  F074         	movff	_scale$984,___ftmul@f1
  3037  00136E  C087  F075         	movff	_scale$984+1,___ftmul@f1+1
  3038  001372  C088  F076         	movff	_scale$984+2,___ftmul@f1+2
  3039  001376  0E00               	movlw	0
  3040  001378  0100               	movlb	0	; () banked
  3041  00137A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3042  00137C  0E03               	movlw	3
  3043  00137E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3044  001380  0E00               	movlw	0
  3045  001382  0100               	movlb	0	; () banked
  3046  001384  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3047  001386  0E0A               	movlw	10
  3048  001388  6F62               	movwf	___awmod@divisor& (0+255),b
  3049  00138A  0100               	movlb	0	; () banked
  3050  00138C  5189               	movf	scale@scl& (0+255),w,b
  3051  00138E  0100               	movlb	0	; () banked
  3052  001390  6F60               	movwf	___awmod@dividend& (0+255),b
  3053  001392  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3054  001394  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3055  001396  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3056  001398  EC28  F014         	call	___awmod	;wreg free
  3057  00139C  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3058  0013A0  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3059  0013A4  ECAD  F015         	call	___wmul	;wreg free
  3060  0013A8  0E29               	movlw	low __powers_
  3061  0013AA  0100               	movlb	0	; () banked
  3062  0013AC  256E               	addwf	?___wmul& (0+255),w,b
  3063  0013AE  6EF6               	movwf	tblptrl,c
  3064  0013B0  0E06               	movlw	high __powers_
  3065  0013B2  0100               	movlb	0	; () banked
  3066  0013B4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3067  0013B6  6EF7               	movwf	tblptrh,c
  3068  0013B8                     	if	0	;There are less than 3 active tblptr bytes
  3069  0013B8                     	endif
  3070  0013B8  0009               	tblrd		*+
  3071  0013BA  CFF5 F077          	movff	tablat,___ftmul@f2
  3072  0013BE  0009               	tblrd		*+
  3073  0013C0  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3074  0013C4  000A               	tblrd		*-
  3075  0013C6  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3076  0013CA  EC57  F00F         	call	___ftmul	;wreg free
  3077  0013CE  C074  F083         	movff	?___ftmul,?_scale
  3078  0013D2  C075  F084         	movff	?___ftmul+1,?_scale+1
  3079  0013D6  C076  F085         	movff	?___ftmul+2,?_scale+2
  3080  0013DA  0012               	return	
  3081  0013DC                     l2398:
  3082                           
  3083                           ;doprnt.c: 438: else if(scl > 10)
  3084  0013DC  0100               	movlb	0	; () banked
  3085  0013DE  5189               	movf	scale@scl& (0+255),w,b
  3086  0013E0  0A80               	xorlw	128
  3087  0013E2  0F75               	addlw	-139
  3088  0013E4  A0D8               	btfss	status,0,c
  3089  0013E6  D05D               	goto	l2404
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3093  0013E8  0E00               	movlw	0
  3094  0013EA  0100               	movlb	0	; () banked
  3095  0013EC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3096  0013EE  0E0A               	movlw	10
  3097  0013F0  6F68               	movwf	___awdiv@divisor& (0+255),b
  3098  0013F2  0100               	movlb	0	; () banked
  3099  0013F4  5189               	movf	scale@scl& (0+255),w,b
  3100  0013F6  0100               	movlb	0	; () banked
  3101  0013F8  6F66               	movwf	___awdiv@dividend& (0+255),b
  3102  0013FA  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3103  0013FC  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  3104  0013FE  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3105  001400  EC14  F013         	call	___awdiv	;wreg free
  3106  001404  0E09               	movlw	9
  3107  001406  0100               	movlb	0	; () banked
  3108  001408  2566               	addwf	?___awdiv& (0+255),w,b
  3109  00140A  0100               	movlb	0	; () banked
  3110  00140C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3111  00140E  0E00               	movlw	0
  3112  001410  0100               	movlb	0	; () banked
  3113  001412  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3114  001414  0100               	movlb	0	; () banked
  3115  001416  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3116  001418  0E00               	movlw	0
  3117  00141A  0100               	movlb	0	; () banked
  3118  00141C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3119  00141E  0E03               	movlw	3
  3120  001420  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3121  001422  ECAD  F015         	call	___wmul	;wreg free
  3122  001426  0E29               	movlw	low __powers_
  3123  001428  0100               	movlb	0	; () banked
  3124  00142A  256E               	addwf	?___wmul& (0+255),w,b
  3125  00142C  6EF6               	movwf	tblptrl,c
  3126  00142E  0E06               	movlw	high __powers_
  3127  001430  0100               	movlb	0	; () banked
  3128  001432  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3129  001434  6EF7               	movwf	tblptrh,c
  3130  001436                     	if	0	;There are less than 3 active tblptr bytes
  3131  001436                     	endif
  3132  001436  0009               	tblrd		*+
  3133  001438  CFF5 F074          	movff	tablat,___ftmul@f1
  3134  00143C  0009               	tblrd		*+
  3135  00143E  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3136  001442  000A               	tblrd		*-
  3137  001444  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3138  001448  0E00               	movlw	0
  3139  00144A  0100               	movlb	0	; () banked
  3140  00144C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3141  00144E  0E03               	movlw	3
  3142  001450  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3143  001452  0E00               	movlw	0
  3144  001454  0100               	movlb	0	; () banked
  3145  001456  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3146  001458  0E0A               	movlw	10
  3147  00145A  6F62               	movwf	___awmod@divisor& (0+255),b
  3148  00145C  0100               	movlb	0	; () banked
  3149  00145E  5189               	movf	scale@scl& (0+255),w,b
  3150  001460  0100               	movlb	0	; () banked
  3151  001462  6F60               	movwf	___awmod@dividend& (0+255),b
  3152  001464  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3153  001466  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3154  001468  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3155  00146A  EC28  F014         	call	___awmod	;wreg free
  3156  00146E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3157  001472  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3158  001476  ECAD  F015         	call	___wmul	;wreg free
  3159  00147A  0E29               	movlw	low __powers_
  3160  00147C  0100               	movlb	0	; () banked
  3161  00147E  256E               	addwf	?___wmul& (0+255),w,b
  3162  001480  6EF6               	movwf	tblptrl,c
  3163  001482  0E06               	movlw	high __powers_
  3164  001484  0100               	movlb	0	; () banked
  3165  001486  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3166  001488  6EF7               	movwf	tblptrh,c
  3167  00148A                     	if	0	;There are less than 3 active tblptr bytes
  3168  00148A                     	endif
  3169  00148A  0009               	tblrd		*+
  3170  00148C  CFF5 F077          	movff	tablat,___ftmul@f2
  3171  001490  0009               	tblrd		*+
  3172  001492  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3173  001496  000A               	tblrd		*-
  3174  001498  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3175  00149C  EC57  F00F         	call	___ftmul	;wreg free
  3176  0014A0  D796               	goto	L4
  3177  0014A2                     l2404:
  3178                           
  3179                           ;doprnt.c: 440: return _powers_[scl];
  3180  0014A2  0100               	movlb	0	; () banked
  3181  0014A4  5189               	movf	scale@scl& (0+255),w,b
  3182  0014A6  0D03               	mullw	3
  3183  0014A8  0E29               	movlw	low __powers_
  3184  0014AA  24F3               	addwf	prodl,w,c
  3185  0014AC  6EF6               	movwf	tblptrl,c
  3186  0014AE  0E06               	movlw	high __powers_
  3187  0014B0  20F4               	addwfc	prodh,w,c
  3188  0014B2  6EF7               	movwf	tblptrh,c
  3189  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  3190  0014B4                     	endif
  3191  0014B4  0009               	tblrd		*+
  3192  0014B6  CFF5 F083          	movff	tablat,?_scale
  3193  0014BA  0009               	tblrd		*+
  3194  0014BC  CFF5 F084          	movff	tablat,?_scale+1
  3195  0014C0  000A               	tblrd		*-
  3196  0014C2  CFF5 F085          	movff	tablat,?_scale+2
  3197  0014C6  0012               	return	
  3198  0014C8                     __end_of_scale:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf2	equ	0xFDF
  3209                           postinc2	equ	0xFDE
  3210                           postdec2	equ	0xFDD
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function _isdigit *****************
  3216 ;; Defined at:
  3217 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\isdigit.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  c               1    wreg     unsigned char 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  c               1    2[BANK0 ] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;		None               void
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3231 ;;      Params:         0       0       0       0       0       0       0
  3232 ;;      Locals:         0       2       0       0       0       0       0
  3233 ;;      Temps:          0       1       0       0       0       0       0
  3234 ;;      Totals:         0       3       0       0       0       0       0
  3235 ;;Total ram usage:        3 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    4
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_sprintf
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text3
  3246  002BC0                     __ptext3:
  3247                           	opt stack 0
  3248  002BC0                     _isdigit:
  3249                           	opt stack 25
  3250                           
  3251                           ;incstack = 0
  3252                           ;isdigit@c stored from wreg
  3253  002BC0  0100               	movlb	0	; () banked
  3254  002BC2  6F62               	movwf	isdigit@c& (0+255),b
  3255  002BC4  0E00               	movlw	0
  3256  002BC6  0100               	movlb	0	; () banked
  3257  002BC8  6F61               	movwf	_isdigit$657& (0+255),b
  3258                           
  3259                           ; BSR set to: 0
  3260  002BCA  0E3A               	movlw	58
  3261  002BCC  0100               	movlb	0	; () banked
  3262  002BCE  6162               	cpfslt	isdigit@c& (0+255),b
  3263  002BD0  D007               	goto	l2416
  3264                           
  3265                           ; BSR set to: 0
  3266  002BD2  0E2F               	movlw	47
  3267  002BD4  0100               	movlb	0	; () banked
  3268  002BD6  6562               	cpfsgt	isdigit@c& (0+255),b
  3269  002BD8  D003               	goto	l2416
  3270                           
  3271                           ; BSR set to: 0
  3272  002BDA  0E01               	movlw	1
  3273  002BDC  0100               	movlb	0	; () banked
  3274  002BDE  6F61               	movwf	_isdigit$657& (0+255),b
  3275  002BE0                     l2416:
  3276                           
  3277                           ; BSR set to: 0
  3278  002BE0  C061  F060         	movff	_isdigit$657,??_isdigit
  3279  002BE4  0100               	movlb	0	; () banked
  3280  002BE6  3160               	rrcf	??_isdigit& (0+255),w,b
  3281  002BE8  0012               	return	
  3282  002BEA                     __end_of_isdigit:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           indf2	equ	0xFDF
  3293                           postinc2	equ	0xFDE
  3294                           postdec2	equ	0xFDD
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _fround *****************
  3300 ;; Defined at:
  3301 ;;		line 409 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\doprnt.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  prec            1    wreg     unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  prec            1   44[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  3   35[BANK0 ] unsigned char 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         0       3       0       0       0       0       0
  3316 ;;      Locals:         0       7       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0
  3318 ;;      Totals:         0      10       0       0       0       0       0
  3319 ;;Total ram usage:       10 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    6
  3322 ;; This function calls:
  3323 ;;		___awdiv
  3324 ;;		___awmod
  3325 ;;		___ftmul
  3326 ;;		___wmul
  3327 ;; This function is called by:
  3328 ;;		_sprintf
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text4
  3333  0014C8                     __ptext4:
  3334                           	opt stack 0
  3335  0014C8                     _fround:
  3336                           	opt stack 23
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;incstack = 0
  3340                           ;fround@prec stored from wreg
  3341  0014C8  0100               	movlb	0	; () banked
  3342  0014CA  6F8C               	movwf	fround@prec& (0+255),b
  3343                           
  3344                           ;doprnt.c: 413: if(prec>=110)
  3345  0014CC  0E6D               	movlw	109
  3346  0014CE  0100               	movlb	0	; () banked
  3347  0014D0  658C               	cpfsgt	fround@prec& (0+255),b
  3348  0014D2  D0BA               	goto	l2358
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3352  0014D4  0E00               	movlw	0
  3353  0014D6  0100               	movlb	0	; () banked
  3354  0014D8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3355  0014DA  0E03               	movlw	3
  3356  0014DC  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3357  0014DE  0E00               	movlw	0
  3358  0014E0  0100               	movlb	0	; () banked
  3359  0014E2  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3360  0014E4  0E0A               	movlw	10
  3361  0014E6  6F68               	movwf	___awdiv@divisor& (0+255),b
  3362  0014E8  0E00               	movlw	0
  3363  0014EA  0100               	movlb	0	; () banked
  3364  0014EC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3365  0014EE  0E64               	movlw	100
  3366  0014F0  6F62               	movwf	___awmod@divisor& (0+255),b
  3367  0014F2  C08C  F060         	movff	fround@prec,___awmod@dividend
  3368  0014F6  0100               	movlb	0	; () banked
  3369  0014F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3370  0014FA  EC28  F014         	call	___awmod	;wreg free
  3371  0014FE  C060  F066         	movff	?___awmod,___awdiv@dividend
  3372  001502  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  3373  001506  EC14  F013         	call	___awdiv	;wreg free
  3374  00150A  0E09               	movlw	9
  3375  00150C  0100               	movlb	0	; () banked
  3376  00150E  2566               	addwf	?___awdiv& (0+255),w,b
  3377  001510  0100               	movlb	0	; () banked
  3378  001512  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3379  001514  0E00               	movlw	0
  3380  001516  0100               	movlb	0	; () banked
  3381  001518  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3382  00151A  0100               	movlb	0	; () banked
  3383  00151C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3384  00151E  ECAD  F015         	call	___wmul	;wreg free
  3385  001522  0E50               	movlw	low __npowers_
  3386  001524  0100               	movlb	0	; () banked
  3387  001526  256E               	addwf	?___wmul& (0+255),w,b
  3388  001528  6EF6               	movwf	tblptrl,c
  3389  00152A  0E06               	movlw	high __npowers_
  3390  00152C  0100               	movlb	0	; () banked
  3391  00152E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3392  001530  6EF7               	movwf	tblptrh,c
  3393  001532                     	if	0	;There are less than 3 active tblptr bytes
  3394  001532                     	endif
  3395  001532  0009               	tblrd		*+
  3396  001534  CFF5 F077          	movff	tablat,___ftmul@f2
  3397  001538  0009               	tblrd		*+
  3398  00153A  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3399  00153E  000A               	tblrd		*-
  3400  001540  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3401  001544  0E00               	movlw	0
  3402  001546  0100               	movlb	0	; () banked
  3403  001548  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3404  00154A  0E64               	movlw	100
  3405  00154C  6F68               	movwf	___awdiv@divisor& (0+255),b
  3406  00154E  C08C  F066         	movff	fround@prec,___awdiv@dividend
  3407  001552  0100               	movlb	0	; () banked
  3408  001554  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3409  001556  EC14  F013         	call	___awdiv	;wreg free
  3410  00155A  0E12               	movlw	18
  3411  00155C  0100               	movlb	0	; () banked
  3412  00155E  2566               	addwf	?___awdiv& (0+255),w,b
  3413  001560  0100               	movlb	0	; () banked
  3414  001562  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3415  001564  0E00               	movlw	0
  3416  001566  0100               	movlb	0	; () banked
  3417  001568  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3418  00156A  0100               	movlb	0	; () banked
  3419  00156C  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3420  00156E  0E00               	movlw	0
  3421  001570  0100               	movlb	0	; () banked
  3422  001572  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3423  001574  0E03               	movlw	3
  3424  001576  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3425  001578  ECAD  F015         	call	___wmul	;wreg free
  3426  00157C  0E50               	movlw	low __npowers_
  3427  00157E  0100               	movlb	0	; () banked
  3428  001580  256E               	addwf	?___wmul& (0+255),w,b
  3429  001582  6EF6               	movwf	tblptrl,c
  3430  001584  0E06               	movlw	high __npowers_
  3431  001586  0100               	movlb	0	; () banked
  3432  001588  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3433  00158A  6EF7               	movwf	tblptrh,c
  3434  00158C                     	if	0	;There are less than 3 active tblptr bytes
  3435  00158C                     	endif
  3436  00158C  0009               	tblrd		*+
  3437  00158E  CFF5 F074          	movff	tablat,___ftmul@f1
  3438  001592  0009               	tblrd		*+
  3439  001594  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3440  001598  000A               	tblrd		*-
  3441  00159A  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3442  00159E  EC57  F00F         	call	___ftmul	;wreg free
  3443  0015A2  C074  F089         	movff	?___ftmul,_fround$982
  3444  0015A6  C075  F08A         	movff	?___ftmul+1,_fround$982+1
  3445  0015AA  C076  F08B         	movff	?___ftmul+2,_fround$982+2
  3446                           
  3447                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3448  0015AE  0E00               	movlw	0
  3449  0015B0  0100               	movlb	0	; () banked
  3450  0015B2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3451  0015B4  0E03               	movlw	3
  3452  0015B6  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3453  0015B8  0E00               	movlw	0
  3454  0015BA  0100               	movlb	0	; () banked
  3455  0015BC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3456  0015BE  0E0A               	movlw	10
  3457  0015C0  6F62               	movwf	___awmod@divisor& (0+255),b
  3458  0015C2  C08C  F060         	movff	fround@prec,___awmod@dividend
  3459  0015C6  0100               	movlb	0	; () banked
  3460  0015C8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3461  0015CA  EC28  F014         	call	___awmod	;wreg free
  3462  0015CE  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3463  0015D2  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3464  0015D6  ECAD  F015         	call	___wmul	;wreg free
  3465  0015DA  0E50               	movlw	low __npowers_
  3466  0015DC  0100               	movlb	0	; () banked
  3467  0015DE  256E               	addwf	?___wmul& (0+255),w,b
  3468  0015E0  6EF6               	movwf	tblptrl,c
  3469  0015E2  0E06               	movlw	high __npowers_
  3470  0015E4  0100               	movlb	0	; () banked
  3471  0015E6  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3472  0015E8  6EF7               	movwf	tblptrh,c
  3473  0015EA                     	if	0	;There are less than 3 active tblptr bytes
  3474  0015EA                     	endif
  3475  0015EA  0009               	tblrd		*+
  3476  0015EC  CFF5 F077          	movff	tablat,___ftmul@f2
  3477  0015F0  0009               	tblrd		*+
  3478  0015F2  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3479  0015F6  000A               	tblrd		*-
  3480  0015F8  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3481  0015FC  C089  F074         	movff	_fround$982,___ftmul@f1
  3482  001600  C08A  F075         	movff	_fround$982+1,___ftmul@f1+1
  3483  001604  C08B  F076         	movff	_fround$982+2,___ftmul@f1+2
  3484  001608  EC57  F00F         	call	___ftmul	;wreg free
  3485  00160C  C074  F086         	movff	?___ftmul,_fround$983
  3486  001610  C075  F087         	movff	?___ftmul+1,_fround$983+1
  3487  001614  C076  F088         	movff	?___ftmul+2,_fround$983+2
  3488                           
  3489                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3490  001618  C086  F074         	movff	_fround$983,___ftmul@f1
  3491  00161C  C087  F075         	movff	_fround$983+1,___ftmul@f1+1
  3492  001620  C088  F076         	movff	_fround$983+2,___ftmul@f1+2
  3493  001624  0E00               	movlw	0
  3494  001626  0100               	movlb	0	; () banked
  3495  001628  6F77               	movwf	___ftmul@f2& (0+255),b
  3496  00162A  0E00               	movlw	0
  3497  00162C  0100               	movlb	0	; () banked
  3498  00162E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  3499  001630  0E3F               	movlw	63
  3500  001632  0100               	movlb	0	; () banked
  3501  001634  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  3502  001636  EC57  F00F         	call	___ftmul	;wreg free
  3503  00163A  C074  F083         	movff	?___ftmul,?_fround
  3504  00163E  C075  F084         	movff	?___ftmul+1,?_fround+1
  3505  001642  C076  F085         	movff	?___ftmul+2,?_fround+2
  3506  001646  0012               	return	
  3507  001648                     l2358:
  3508                           
  3509                           ;doprnt.c: 415: else if(prec > 10)
  3510  001648  0E0A               	movlw	10
  3511  00164A  0100               	movlb	0	; () banked
  3512  00164C  658C               	cpfsgt	fround@prec& (0+255),b
  3513  00164E  D06E               	goto	l2366
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3517  001650  0E00               	movlw	0
  3518  001652  0100               	movlb	0	; () banked
  3519  001654  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3520  001656  0E03               	movlw	3
  3521  001658  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3522  00165A  0E00               	movlw	0
  3523  00165C  0100               	movlb	0	; () banked
  3524  00165E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3525  001660  0E0A               	movlw	10
  3526  001662  6F62               	movwf	___awmod@divisor& (0+255),b
  3527  001664  C08C  F060         	movff	fround@prec,___awmod@dividend
  3528  001668  0100               	movlb	0	; () banked
  3529  00166A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3530  00166C  EC28  F014         	call	___awmod	;wreg free
  3531  001670  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3532  001674  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3533  001678  ECAD  F015         	call	___wmul	;wreg free
  3534  00167C  0E50               	movlw	low __npowers_
  3535  00167E  0100               	movlb	0	; () banked
  3536  001680  256E               	addwf	?___wmul& (0+255),w,b
  3537  001682  6EF6               	movwf	tblptrl,c
  3538  001684  0E06               	movlw	high __npowers_
  3539  001686  0100               	movlb	0	; () banked
  3540  001688  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3541  00168A  6EF7               	movwf	tblptrh,c
  3542  00168C                     	if	0	;There are less than 3 active tblptr bytes
  3543  00168C                     	endif
  3544  00168C  0009               	tblrd		*+
  3545  00168E  CFF5 F077          	movff	tablat,___ftmul@f2
  3546  001692  0009               	tblrd		*+
  3547  001694  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3548  001698  000A               	tblrd		*-
  3549  00169A  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3550  00169E  0E00               	movlw	0
  3551  0016A0  0100               	movlb	0	; () banked
  3552  0016A2  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3553  0016A4  0E0A               	movlw	10
  3554  0016A6  6F68               	movwf	___awdiv@divisor& (0+255),b
  3555  0016A8  C08C  F066         	movff	fround@prec,___awdiv@dividend
  3556  0016AC  0100               	movlb	0	; () banked
  3557  0016AE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3558  0016B0  EC14  F013         	call	___awdiv	;wreg free
  3559  0016B4  0E09               	movlw	9
  3560  0016B6  0100               	movlb	0	; () banked
  3561  0016B8  2566               	addwf	?___awdiv& (0+255),w,b
  3562  0016BA  0100               	movlb	0	; () banked
  3563  0016BC  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3564  0016BE  0E00               	movlw	0
  3565  0016C0  0100               	movlb	0	; () banked
  3566  0016C2  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3567  0016C4  0100               	movlb	0	; () banked
  3568  0016C6  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3569  0016C8  0E00               	movlw	0
  3570  0016CA  0100               	movlb	0	; () banked
  3571  0016CC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3572  0016CE  0E03               	movlw	3
  3573  0016D0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3574  0016D2  ECAD  F015         	call	___wmul	;wreg free
  3575  0016D6  0E50               	movlw	low __npowers_
  3576  0016D8  0100               	movlb	0	; () banked
  3577  0016DA  256E               	addwf	?___wmul& (0+255),w,b
  3578  0016DC  6EF6               	movwf	tblptrl,c
  3579  0016DE  0E06               	movlw	high __npowers_
  3580  0016E0  0100               	movlb	0	; () banked
  3581  0016E2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3582  0016E4  6EF7               	movwf	tblptrh,c
  3583  0016E6                     	if	0	;There are less than 3 active tblptr bytes
  3584  0016E6                     	endif
  3585  0016E6  0009               	tblrd		*+
  3586  0016E8  CFF5 F074          	movff	tablat,___ftmul@f1
  3587  0016EC  0009               	tblrd		*+
  3588  0016EE  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3589  0016F2  000A               	tblrd		*-
  3590  0016F4  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3591  0016F8  EC57  F00F         	call	___ftmul	;wreg free
  3592  0016FC  C074  F089         	movff	?___ftmul,_fround$982
  3593  001700  C075  F08A         	movff	?___ftmul+1,_fround$982+1
  3594  001704  C076  F08B         	movff	?___ftmul+2,_fround$982+2
  3595                           
  3596                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3597  001708  C089  F074         	movff	_fround$982,___ftmul@f1
  3598  00170C  C08A  F075         	movff	_fround$982+1,___ftmul@f1+1
  3599  001710  C08B  F076         	movff	_fround$982+2,___ftmul@f1+2
  3600  001714  0E00               	movlw	0
  3601  001716  0100               	movlb	0	; () banked
  3602  001718  6F77               	movwf	___ftmul@f2& (0+255),b
  3603  00171A  0E00               	movlw	0
  3604  00171C  0100               	movlb	0	; () banked
  3605  00171E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  3606  001720  0E3F               	movlw	63
  3607  001722  0100               	movlb	0	; () banked
  3608  001724  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  3609  001726  EC57  F00F         	call	___ftmul	;wreg free
  3610  00172A  D787               	goto	L5
  3611  00172C                     l2366:
  3612                           
  3613                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3614  00172C  0100               	movlb	0	; () banked
  3615  00172E  518C               	movf	fround@prec& (0+255),w,b
  3616  001730  0D03               	mullw	3
  3617  001732  0E50               	movlw	low __npowers_
  3618  001734  24F3               	addwf	prodl,w,c
  3619  001736  6EF6               	movwf	tblptrl,c
  3620  001738  0E06               	movlw	high __npowers_
  3621  00173A  20F4               	addwfc	prodh,w,c
  3622  00173C  6EF7               	movwf	tblptrh,c
  3623  00173E                     	if	0	;There are less than 3 active tblptr bytes
  3624  00173E                     	endif
  3625  00173E  0009               	tblrd		*+
  3626  001740  CFF5 F074          	movff	tablat,___ftmul@f1
  3627  001744  0009               	tblrd		*+
  3628  001746  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3629  00174A  000A               	tblrd		*-
  3630  00174C  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3631  001750  0E00               	movlw	0
  3632  001752  0100               	movlb	0	; () banked
  3633  001754  6F77               	movwf	___ftmul@f2& (0+255),b
  3634  001756  0E00               	movlw	0
  3635  001758  0100               	movlb	0	; () banked
  3636  00175A  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  3637  00175C  0E3F               	movlw	63
  3638  00175E  0100               	movlb	0	; () banked
  3639  001760  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  3640  001762  EC57  F00F         	call	___ftmul	;wreg free
  3641  001766  C074  F083         	movff	?___ftmul,?_fround
  3642  00176A  C075  F084         	movff	?___ftmul+1,?_fround+1
  3643  00176E  C076  F085         	movff	?___ftmul+2,?_fround+2
  3644  001772  0012               	return	
  3645  001774                     __end_of_fround:
  3646                           	opt stack 0
  3647                           tblptru	equ	0xFF8
  3648                           tblptrh	equ	0xFF7
  3649                           tblptrl	equ	0xFF6
  3650                           tablat	equ	0xFF5
  3651                           prodh	equ	0xFF4
  3652                           prodl	equ	0xFF3
  3653                           postinc0	equ	0xFEE
  3654                           wreg	equ	0xFE8
  3655                           indf2	equ	0xFDF
  3656                           postinc2	equ	0xFDE
  3657                           postdec2	equ	0xFDD
  3658                           fsr2h	equ	0xFDA
  3659                           fsr2l	equ	0xFD9
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function ___wmul *****************
  3663 ;; Defined at:
  3664 ;;		line 15 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\Umul16.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  multiplier      2   14[BANK0 ] unsigned int 
  3667 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  product         2   18[BANK0 ] unsigned int 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  2   14[BANK0 ] unsigned int 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, prodl, prodh
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3679 ;;      Params:         0       4       0       0       0       0       0
  3680 ;;      Locals:         0       2       0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0
  3682 ;;      Totals:         0       6       0       0       0       0       0
  3683 ;;Total ram usage:        6 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    4
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_fround
  3690 ;;		_scale
  3691 ;;		_sprintf
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text5
  3696  002B5A                     __ptext5:
  3697                           	opt stack 0
  3698  002B5A                     ___wmul:
  3699                           	opt stack 24
  3700                           
  3701                           ;incstack = 0
  3702  002B5A  0100               	movlb	0	; () banked
  3703  002B5C  516E               	movf	___wmul@multiplier& (0+255),w,b
  3704  002B5E  0100               	movlb	0	; () banked
  3705  002B60  0370               	mulwf	___wmul@multiplicand& (0+255),b
  3706  002B62  CFF3 F072          	movff	prodl,___wmul@product
  3707  002B66  CFF4 F073          	movff	prodh,___wmul@product+1
  3708  002B6A  0100               	movlb	0	; () banked
  3709  002B6C  516E               	movf	___wmul@multiplier& (0+255),w,b
  3710  002B6E  0100               	movlb	0	; () banked
  3711  002B70  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3712  002B72  50F3               	movf	prodl,w,c
  3713  002B74  0100               	movlb	0	; () banked
  3714  002B76  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  3715  002B78  0100               	movlb	0	; () banked
  3716  002B7A  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3717  002B7C  0100               	movlb	0	; () banked
  3718  002B7E  0370               	mulwf	___wmul@multiplicand& (0+255),b
  3719  002B80  50F3               	movf	prodl,w,c
  3720  002B82  0100               	movlb	0	; () banked
  3721  002B84  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  3722                           
  3723                           ; BSR set to: 0
  3724  002B86  C072  F06E         	movff	___wmul@product,?___wmul
  3725  002B8A  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  3726  002B8E  0012               	return	
  3727  002B90                     __end_of___wmul:
  3728                           	opt stack 0
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           indf2	equ	0xFDF
  3738                           postinc2	equ	0xFDE
  3739                           postdec2	equ	0xFDD
  3740                           fsr2h	equ	0xFDA
  3741                           fsr2l	equ	0xFD9
  3742                           status	equ	0xFD8
  3743                           
  3744 ;; *************** function ___ftmul *****************
  3745 ;; Defined at:
  3746 ;;		line 62 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftmul.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  f1              3   20[BANK0 ] float 
  3749 ;;  f2              3   23[BANK0 ] float 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  3752 ;;  sign            1   34[BANK0 ] unsigned char 
  3753 ;;  cntr            1   33[BANK0 ] unsigned char 
  3754 ;;  exp             1   29[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  3   20[BANK0 ] float 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         0       6       0       0       0       0       0
  3765 ;;      Locals:         0       6       0       0       0       0       0
  3766 ;;      Temps:          0       3       0       0       0       0       0
  3767 ;;      Totals:         0      15       0       0       0       0       0
  3768 ;;Total ram usage:       15 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    5
  3771 ;; This function calls:
  3772 ;;		___ftpack
  3773 ;; This function is called by:
  3774 ;;		_fround
  3775 ;;		_scale
  3776 ;;		_sprintf
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text6
  3781  001EAE                     __ptext6:
  3782                           	opt stack 0
  3783  001EAE                     ___ftmul:
  3784                           	opt stack 23
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;incstack = 0
  3788  001EAE  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  3789  001EB2  0100               	movlb	0	; () banked
  3790  001EB4  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  3791  001EB6  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  3792  001EB8  0100               	movlb	0	; () banked
  3793  001EBA  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  3794  001EBC  0100               	movlb	0	; () banked
  3795  001EBE  377A               	rlcf	??___ftmul& (0+255),f,b
  3796  001EC0  E301               	bnc	u2121
  3797  001EC2  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  3798  001EC4                     u2121:
  3799  001EC4  0100               	movlb	0	; () banked
  3800  001EC6  517A               	movf	??___ftmul& (0+255),w,b
  3801  001EC8  0100               	movlb	0	; () banked
  3802  001ECA  6F7D               	movwf	___ftmul@exp& (0+255),b
  3803  001ECC  0100               	movlb	0	; () banked
  3804  001ECE  517D               	movf	___ftmul@exp& (0+255),w,b
  3805  001ED0  A4D8               	btfss	status,2,c
  3806  001ED2  D00A               	goto	l2148
  3807                           
  3808                           ; BSR set to: 0
  3809  001ED4  0E00               	movlw	0
  3810  001ED6  0100               	movlb	0	; () banked
  3811  001ED8  6F74               	movwf	?___ftmul& (0+255),b
  3812  001EDA  0E00               	movlw	0
  3813  001EDC  0100               	movlb	0	; () banked
  3814  001EDE  6F75               	movwf	(?___ftmul+1)& (0+255),b
  3815  001EE0  0E00               	movlw	0
  3816  001EE2  0100               	movlb	0	; () banked
  3817  001EE4  6F76               	movwf	(?___ftmul+2)& (0+255),b
  3818                           
  3819                           ; BSR set to: 0
  3820  001EE6  0012               	return	
  3821  001EE8                     l2148:
  3822                           
  3823                           ; BSR set to: 0
  3824  001EE8  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  3825  001EEC  0100               	movlb	0	; () banked
  3826  001EEE  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  3827  001EF0  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  3828  001EF2  0100               	movlb	0	; () banked
  3829  001EF4  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  3830  001EF6  0100               	movlb	0	; () banked
  3831  001EF8  377A               	rlcf	??___ftmul& (0+255),f,b
  3832  001EFA  E301               	bnc	u2141
  3833  001EFC  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  3834  001EFE                     u2141:
  3835  001EFE  0100               	movlb	0	; () banked
  3836  001F00  517A               	movf	??___ftmul& (0+255),w,b
  3837  001F02  0100               	movlb	0	; () banked
  3838  001F04  6F82               	movwf	___ftmul@sign& (0+255),b
  3839  001F06  0100               	movlb	0	; () banked
  3840  001F08  5182               	movf	___ftmul@sign& (0+255),w,b
  3841  001F0A  A4D8               	btfss	status,2,c
  3842  001F0C  D00A               	goto	l2154
  3843                           
  3844                           ; BSR set to: 0
  3845  001F0E  0E00               	movlw	0
  3846  001F10  0100               	movlb	0	; () banked
  3847  001F12  6F74               	movwf	?___ftmul& (0+255),b
  3848  001F14  0E00               	movlw	0
  3849  001F16  0100               	movlb	0	; () banked
  3850  001F18  6F75               	movwf	(?___ftmul+1)& (0+255),b
  3851  001F1A  0E00               	movlw	0
  3852  001F1C  0100               	movlb	0	; () banked
  3853  001F1E  6F76               	movwf	(?___ftmul+2)& (0+255),b
  3854                           
  3855                           ; BSR set to: 0
  3856  001F20  0012               	return	
  3857  001F22                     l2154:
  3858                           
  3859                           ; BSR set to: 0
  3860  001F22  0100               	movlb	0	; () banked
  3861  001F24  5182               	movf	___ftmul@sign& (0+255),w,b
  3862  001F26  0F7B               	addlw	123
  3863  001F28  0100               	movlb	0	; () banked
  3864  001F2A  277D               	addwf	___ftmul@exp& (0+255),f,b
  3865                           
  3866                           ; BSR set to: 0
  3867  001F2C  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  3868  001F30  0100               	movlb	0	; () banked
  3869  001F32  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  3870  001F34  0100               	movlb	0	; () banked
  3871  001F36  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  3872  001F38  0E80               	movlw	128
  3873  001F3A  0100               	movlb	0	; () banked
  3874  001F3C  1782               	andwf	___ftmul@sign& (0+255),f,b
  3875                           
  3876                           ; BSR set to: 0
  3877  001F3E  0100               	movlb	0	; () banked
  3878  001F40  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  3879                           
  3880                           ; BSR set to: 0
  3881  001F42  0100               	movlb	0	; () banked
  3882  001F44  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  3883                           
  3884                           ; BSR set to: 0
  3885  001F46  0EFF               	movlw	255
  3886  001F48  0100               	movlb	0	; () banked
  3887  001F4A  1777               	andwf	___ftmul@f2& (0+255),f,b
  3888  001F4C  0EFF               	movlw	255
  3889  001F4E  0100               	movlb	0	; () banked
  3890  001F50  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  3891  001F52  0E00               	movlw	0
  3892  001F54  0100               	movlb	0	; () banked
  3893  001F56  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  3894                           
  3895                           ; BSR set to: 0
  3896  001F58  0E00               	movlw	0
  3897  001F5A  0100               	movlb	0	; () banked
  3898  001F5C  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  3899  001F5E  0E00               	movlw	0
  3900  001F60  0100               	movlb	0	; () banked
  3901  001F62  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  3902  001F64  0E00               	movlw	0
  3903  001F66  0100               	movlb	0	; () banked
  3904  001F68  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  3905                           
  3906                           ; BSR set to: 0
  3907  001F6A  0E07               	movlw	7
  3908  001F6C  0100               	movlb	0	; () banked
  3909  001F6E  6F81               	movwf	___ftmul@cntr& (0+255),b
  3910  001F70                     l2168:
  3911                           
  3912                           ; BSR set to: 0
  3913  001F70  0100               	movlb	0	; () banked
  3914  001F72  A174               	btfss	___ftmul@f1& (0+255),0,b
  3915  001F74  D00C               	goto	l2172
  3916                           
  3917                           ; BSR set to: 0
  3918  001F76  0100               	movlb	0	; () banked
  3919  001F78  5177               	movf	___ftmul@f2& (0+255),w,b
  3920  001F7A  0100               	movlb	0	; () banked
  3921  001F7C  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3922  001F7E  0100               	movlb	0	; () banked
  3923  001F80  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  3924  001F82  0100               	movlb	0	; () banked
  3925  001F84  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3926  001F86  0100               	movlb	0	; () banked
  3927  001F88  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  3928  001F8A  0100               	movlb	0	; () banked
  3929  001F8C  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3930  001F8E                     l2172:
  3931                           
  3932                           ; BSR set to: 0
  3933  001F8E  0100               	movlb	0	; () banked
  3934  001F90  90D8               	bcf	status,0,c
  3935  001F92  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3936  001F94  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3937  001F96  3374               	rrcf	___ftmul@f1& (0+255),f,b
  3938  001F98  0100               	movlb	0	; () banked
  3939  001F9A  90D8               	bcf	status,0,c
  3940  001F9C  3777               	rlcf	___ftmul@f2& (0+255),f,b
  3941  001F9E  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  3942  001FA0  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 0
  3945  001FA2  0100               	movlb	0	; () banked
  3946  001FA4  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  3947  001FA6  D7E4               	goto	l2168
  3948                           
  3949                           ; BSR set to: 0
  3950                           
  3951                           ; BSR set to: 0
  3952  001FA8  0E09               	movlw	9
  3953  001FAA  0100               	movlb	0	; () banked
  3954  001FAC  6F81               	movwf	___ftmul@cntr& (0+255),b
  3955  001FAE                     l2178:
  3956                           
  3957                           ; BSR set to: 0
  3958  001FAE  0100               	movlb	0	; () banked
  3959  001FB0  A174               	btfss	___ftmul@f1& (0+255),0,b
  3960  001FB2  D00C               	goto	l2182
  3961                           
  3962                           ; BSR set to: 0
  3963  001FB4  0100               	movlb	0	; () banked
  3964  001FB6  5177               	movf	___ftmul@f2& (0+255),w,b
  3965  001FB8  0100               	movlb	0	; () banked
  3966  001FBA  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  3967  001FBC  0100               	movlb	0	; () banked
  3968  001FBE  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  3969  001FC0  0100               	movlb	0	; () banked
  3970  001FC2  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  3971  001FC4  0100               	movlb	0	; () banked
  3972  001FC6  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  3973  001FC8  0100               	movlb	0	; () banked
  3974  001FCA  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  3975  001FCC                     l2182:
  3976                           
  3977                           ; BSR set to: 0
  3978  001FCC  0100               	movlb	0	; () banked
  3979  001FCE  90D8               	bcf	status,0,c
  3980  001FD0  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  3981  001FD2  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  3982  001FD4  3374               	rrcf	___ftmul@f1& (0+255),f,b
  3983  001FD6  0100               	movlb	0	; () banked
  3984  001FD8  90D8               	bcf	status,0,c
  3985  001FDA  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  3986  001FDC  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  3987  001FDE  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  3988                           
  3989                           ; BSR set to: 0
  3990  001FE0  0100               	movlb	0	; () banked
  3991  001FE2  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  3992  001FE4  D7E4               	goto	l2178
  3993                           
  3994                           ; BSR set to: 0
  3995                           
  3996                           ; BSR set to: 0
  3997  001FE6  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  3998  001FEA  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3999  001FEE  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4000  001FF2  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
  4001  001FF6  C082  F064         	movff	___ftmul@sign,___ftpack@sign
  4002  001FFA  EC3D  F011         	call	___ftpack	;wreg free
  4003  001FFE  C060  F074         	movff	?___ftpack,?___ftmul
  4004  002002  C061  F075         	movff	?___ftpack+1,?___ftmul+1
  4005  002006  C062  F076         	movff	?___ftpack+2,?___ftmul+2
  4006  00200A  0012               	return	
  4007  00200C                     __end_of___ftmul:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodh	equ	0xFF4
  4014                           prodl	equ	0xFF3
  4015                           postinc0	equ	0xFEE
  4016                           wreg	equ	0xFE8
  4017                           indf2	equ	0xFDF
  4018                           postinc2	equ	0xFDE
  4019                           postdec2	equ	0xFDD
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function ___awmod *****************
  4025 ;; Defined at:
  4026 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\awmod.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  dividend        2    0[BANK0 ] int 
  4029 ;;  divisor         2    2[BANK0 ] int 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  sign            1    5[BANK0 ] unsigned char 
  4032 ;;  counter         1    4[BANK0 ] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  2    0[BANK0 ] int 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         0       4       0       0       0       0       0
  4043 ;;      Locals:         0       2       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0
  4045 ;;      Totals:         0       6       0       0       0       0       0
  4046 ;;Total ram usage:        6 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    4
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_fround
  4053 ;;		_scale
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text7
  4058  002850                     __ptext7:
  4059                           	opt stack 0
  4060  002850                     ___awmod:
  4061                           	opt stack 24
  4062                           
  4063                           ;incstack = 0
  4064  002850  0E00               	movlw	0
  4065  002852  0100               	movlb	0	; () banked
  4066  002854  6F65               	movwf	___awmod@sign& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069  002856  0100               	movlb	0	; () banked
  4070  002858  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4071  00285A  D008               	goto	l2242
  4072                           
  4073                           ; BSR set to: 0
  4074  00285C  0100               	movlb	0	; () banked
  4075  00285E  6D60               	negf	___awmod@dividend& (0+255),b
  4076  002860  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4077  002862  B0D8               	btfsc	status,0,c
  4078  002864  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4079                           
  4080                           ; BSR set to: 0
  4081  002866  0E01               	movlw	1
  4082  002868  0100               	movlb	0	; () banked
  4083  00286A  6F65               	movwf	___awmod@sign& (0+255),b
  4084  00286C                     l2242:
  4085                           
  4086                           ; BSR set to: 0
  4087  00286C  0100               	movlb	0	; () banked
  4088  00286E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4089  002870  D005               	goto	l2246
  4090                           
  4091                           ; BSR set to: 0
  4092  002872  0100               	movlb	0	; () banked
  4093  002874  6D62               	negf	___awmod@divisor& (0+255),b
  4094  002876  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  4095  002878  B0D8               	btfsc	status,0,c
  4096  00287A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  4097  00287C                     l2246:
  4098                           
  4099                           ; BSR set to: 0
  4100  00287C  0100               	movlb	0	; () banked
  4101  00287E  5162               	movf	___awmod@divisor& (0+255),w,b
  4102  002880  0100               	movlb	0	; () banked
  4103  002882  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4104  002884  B4D8               	btfsc	status,2,c
  4105  002886  D026               	goto	l2262
  4106                           
  4107                           ; BSR set to: 0
  4108  002888  0E01               	movlw	1
  4109  00288A  0100               	movlb	0	; () banked
  4110  00288C  6F64               	movwf	___awmod@counter& (0+255),b
  4111  00288E  D006               	goto	l2252
  4112  002890                     l2250:
  4113                           
  4114                           ; BSR set to: 0
  4115  002890  0100               	movlb	0	; () banked
  4116  002892  90D8               	bcf	status,0,c
  4117  002894  3762               	rlcf	___awmod@divisor& (0+255),f,b
  4118  002896  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4119  002898  0100               	movlb	0	; () banked
  4120  00289A  2B64               	incf	___awmod@counter& (0+255),f,b
  4121  00289C                     l2252:
  4122                           
  4123                           ; BSR set to: 0
  4124  00289C  0100               	movlb	0	; () banked
  4125  00289E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4126  0028A0  D7F7               	goto	l2250
  4127  0028A2                     l2254:
  4128                           
  4129                           ; BSR set to: 0
  4130  0028A2  0100               	movlb	0	; () banked
  4131  0028A4  5162               	movf	___awmod@divisor& (0+255),w,b
  4132  0028A6  0100               	movlb	0	; () banked
  4133  0028A8  5D60               	subwf	___awmod@dividend& (0+255),w,b
  4134  0028AA  0100               	movlb	0	; () banked
  4135  0028AC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4136  0028AE  0100               	movlb	0	; () banked
  4137  0028B0  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4138  0028B2  A0D8               	btfss	status,0,c
  4139  0028B4  D008               	goto	l2258
  4140                           
  4141                           ; BSR set to: 0
  4142  0028B6  0100               	movlb	0	; () banked
  4143  0028B8  5162               	movf	___awmod@divisor& (0+255),w,b
  4144  0028BA  0100               	movlb	0	; () banked
  4145  0028BC  5F60               	subwf	___awmod@dividend& (0+255),f,b
  4146  0028BE  0100               	movlb	0	; () banked
  4147  0028C0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4148  0028C2  0100               	movlb	0	; () banked
  4149  0028C4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4150  0028C6                     l2258:
  4151                           
  4152                           ; BSR set to: 0
  4153  0028C6  0100               	movlb	0	; () banked
  4154  0028C8  90D8               	bcf	status,0,c
  4155  0028CA  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4156  0028CC  3362               	rrcf	___awmod@divisor& (0+255),f,b
  4157                           
  4158                           ; BSR set to: 0
  4159  0028CE  0100               	movlb	0	; () banked
  4160  0028D0  2F64               	decfsz	___awmod@counter& (0+255),f,b
  4161  0028D2  D7E7               	goto	l2254
  4162  0028D4                     l2262:
  4163                           
  4164                           ; BSR set to: 0
  4165  0028D4  0100               	movlb	0	; () banked
  4166  0028D6  5165               	movf	___awmod@sign& (0+255),w,b
  4167  0028D8  0100               	movlb	0	; () banked
  4168  0028DA  B4D8               	btfsc	status,2,c
  4169  0028DC  D005               	goto	l2266
  4170                           
  4171                           ; BSR set to: 0
  4172  0028DE  0100               	movlb	0	; () banked
  4173  0028E0  6D60               	negf	___awmod@dividend& (0+255),b
  4174  0028E2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4175  0028E4  B0D8               	btfsc	status,0,c
  4176  0028E6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4177  0028E8                     l2266:
  4178                           
  4179                           ; BSR set to: 0
  4180  0028E8  C060  F060         	movff	___awmod@dividend,?___awmod
  4181  0028EC  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  4182  0028F0  0012               	return	
  4183  0028F2                     __end_of___awmod:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           prodh	equ	0xFF4
  4190                           prodl	equ	0xFF3
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           postdec2	equ	0xFDD
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function ___awdiv *****************
  4201 ;; Defined at:
  4202 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  dividend        2    6[BANK0 ] int 
  4205 ;;  divisor         2    8[BANK0 ] int 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  quotient        2   12[BANK0 ] int 
  4208 ;;  sign            1   11[BANK0 ] unsigned char 
  4209 ;;  counter         1   10[BANK0 ] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2    6[BANK0 ] int 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4219 ;;      Params:         0       4       0       0       0       0       0
  4220 ;;      Locals:         0       4       0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0
  4222 ;;      Totals:         0       8       0       0       0       0       0
  4223 ;;Total ram usage:        8 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    4
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_fround
  4230 ;;		_scale
  4231 ;;		_sprintf
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text8
  4236  002628                     __ptext8:
  4237                           	opt stack 0
  4238  002628                     ___awdiv:
  4239                           	opt stack 24
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;incstack = 0
  4243  002628  0E00               	movlw	0
  4244  00262A  0100               	movlb	0	; () banked
  4245  00262C  6F6B               	movwf	___awdiv@sign& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248  00262E  0100               	movlb	0	; () banked
  4249  002630  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4250  002632  D008               	goto	l2198
  4251                           
  4252                           ; BSR set to: 0
  4253  002634  0100               	movlb	0	; () banked
  4254  002636  6D68               	negf	___awdiv@divisor& (0+255),b
  4255  002638  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4256  00263A  B0D8               	btfsc	status,0,c
  4257  00263C  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4258                           
  4259                           ; BSR set to: 0
  4260  00263E  0E01               	movlw	1
  4261  002640  0100               	movlb	0	; () banked
  4262  002642  6F6B               	movwf	___awdiv@sign& (0+255),b
  4263  002644                     l2198:
  4264                           
  4265                           ; BSR set to: 0
  4266  002644  0100               	movlb	0	; () banked
  4267  002646  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4268  002648  D008               	goto	l2204
  4269                           
  4270                           ; BSR set to: 0
  4271  00264A  0100               	movlb	0	; () banked
  4272  00264C  6D66               	negf	___awdiv@dividend& (0+255),b
  4273  00264E  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4274  002650  B0D8               	btfsc	status,0,c
  4275  002652  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4276                           
  4277                           ; BSR set to: 0
  4278  002654  0E01               	movlw	1
  4279  002656  0100               	movlb	0	; () banked
  4280  002658  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  4281  00265A                     l2204:
  4282                           
  4283                           ; BSR set to: 0
  4284  00265A  0E00               	movlw	0
  4285  00265C  0100               	movlb	0	; () banked
  4286  00265E  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  4287  002660  0E00               	movlw	0
  4288  002662  6F6C               	movwf	___awdiv@quotient& (0+255),b
  4289                           
  4290                           ; BSR set to: 0
  4291  002664  0100               	movlb	0	; () banked
  4292  002666  5168               	movf	___awdiv@divisor& (0+255),w,b
  4293  002668  0100               	movlb	0	; () banked
  4294  00266A  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4295  00266C  B4D8               	btfsc	status,2,c
  4296  00266E  D02C               	goto	l2226
  4297                           
  4298                           ; BSR set to: 0
  4299  002670  0E01               	movlw	1
  4300  002672  0100               	movlb	0	; () banked
  4301  002674  6F6A               	movwf	___awdiv@counter& (0+255),b
  4302  002676  D006               	goto	l2212
  4303  002678                     l2210:
  4304                           
  4305                           ; BSR set to: 0
  4306  002678  0100               	movlb	0	; () banked
  4307  00267A  90D8               	bcf	status,0,c
  4308  00267C  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  4309  00267E  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4310  002680  0100               	movlb	0	; () banked
  4311  002682  2B6A               	incf	___awdiv@counter& (0+255),f,b
  4312  002684                     l2212:
  4313                           
  4314                           ; BSR set to: 0
  4315  002684  0100               	movlb	0	; () banked
  4316  002686  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4317  002688  D7F7               	goto	l2210
  4318  00268A                     l2214:
  4319                           
  4320                           ; BSR set to: 0
  4321  00268A  0100               	movlb	0	; () banked
  4322  00268C  90D8               	bcf	status,0,c
  4323  00268E  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  4324  002690  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4325                           
  4326                           ; BSR set to: 0
  4327  002692  0100               	movlb	0	; () banked
  4328  002694  5168               	movf	___awdiv@divisor& (0+255),w,b
  4329  002696  0100               	movlb	0	; () banked
  4330  002698  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  4331  00269A  0100               	movlb	0	; () banked
  4332  00269C  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4333  00269E  0100               	movlb	0	; () banked
  4334  0026A0  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4335  0026A2  A0D8               	btfss	status,0,c
  4336  0026A4  D00A               	goto	l2222
  4337                           
  4338                           ; BSR set to: 0
  4339  0026A6  0100               	movlb	0	; () banked
  4340  0026A8  5168               	movf	___awdiv@divisor& (0+255),w,b
  4341  0026AA  0100               	movlb	0	; () banked
  4342  0026AC  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  4343  0026AE  0100               	movlb	0	; () banked
  4344  0026B0  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4345  0026B2  0100               	movlb	0	; () banked
  4346  0026B4  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4347                           
  4348                           ; BSR set to: 0
  4349  0026B6  0100               	movlb	0	; () banked
  4350  0026B8  816C               	bsf	___awdiv@quotient& (0+255),0,b
  4351  0026BA                     l2222:
  4352                           
  4353                           ; BSR set to: 0
  4354  0026BA  0100               	movlb	0	; () banked
  4355  0026BC  90D8               	bcf	status,0,c
  4356  0026BE  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4357  0026C0  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  4358                           
  4359                           ; BSR set to: 0
  4360  0026C2  0100               	movlb	0	; () banked
  4361  0026C4  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  4362  0026C6  D7E1               	goto	l2214
  4363  0026C8                     l2226:
  4364                           
  4365                           ; BSR set to: 0
  4366  0026C8  0100               	movlb	0	; () banked
  4367  0026CA  516B               	movf	___awdiv@sign& (0+255),w,b
  4368  0026CC  0100               	movlb	0	; () banked
  4369  0026CE  B4D8               	btfsc	status,2,c
  4370  0026D0  D005               	goto	l2230
  4371                           
  4372                           ; BSR set to: 0
  4373  0026D2  0100               	movlb	0	; () banked
  4374  0026D4  6D6C               	negf	___awdiv@quotient& (0+255),b
  4375  0026D6  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4376  0026D8  B0D8               	btfsc	status,0,c
  4377  0026DA  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4378  0026DC                     l2230:
  4379                           
  4380                           ; BSR set to: 0
  4381  0026DC  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  4382  0026E0  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  4383  0026E4  0012               	return	
  4384  0026E6                     __end_of___awdiv:
  4385                           	opt stack 0
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           postinc0	equ	0xFEE
  4393                           wreg	equ	0xFE8
  4394                           indf2	equ	0xFDF
  4395                           postinc2	equ	0xFDE
  4396                           postdec2	equ	0xFDD
  4397                           fsr2h	equ	0xFDA
  4398                           fsr2l	equ	0xFD9
  4399                           status	equ	0xFD8
  4400                           
  4401 ;; *************** function __tdiv_to_l_ *****************
  4402 ;; Defined at:
  4403 ;;		line 60 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftdivl.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  f1              3    0[BANK0 ] float 
  4406 ;;  f2              3    3[BANK0 ] float 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  quot            4    9[BANK0 ] unsigned long 
  4409 ;;  exp1            1   14[BANK0 ] unsigned char 
  4410 ;;  cntr            1   13[BANK0 ] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  4    0[BANK0 ] unsigned long 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4420 ;;      Params:         0       6       0       0       0       0       0
  4421 ;;      Locals:         0       6       0       0       0       0       0
  4422 ;;      Temps:          0       3       0       0       0       0       0
  4423 ;;      Totals:         0      15       0       0       0       0       0
  4424 ;;Total ram usage:       15 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    4
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_sprintf
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text9
  4435  001B88                     __ptext9:
  4436                           	opt stack 0
  4437  001B88                     __tdiv_to_l_:
  4438                           	opt stack 25
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;incstack = 0
  4442  001B88  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4443  001B8C  0100               	movlb	0	; () banked
  4444  001B8E  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  4445  001B90  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  4446  001B92  0100               	movlb	0	; () banked
  4447  001B94  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  4448  001B96  0100               	movlb	0	; () banked
  4449  001B98  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  4450  001B9A  E301               	bnc	u2491
  4451  001B9C  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  4452  001B9E                     u2491:
  4453  001B9E  0100               	movlb	0	; () banked
  4454  001BA0  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  4455  001BA2  0100               	movlb	0	; () banked
  4456  001BA4  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  4457  001BA6  0100               	movlb	0	; () banked
  4458  001BA8  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  4459  001BAA  A4D8               	btfss	status,2,c
  4460  001BAC  D00A               	goto	l2426
  4461                           
  4462                           ; BSR set to: 0
  4463  001BAE  0E00               	movlw	0
  4464  001BB0  0100               	movlb	0	; () banked
  4465  001BB2  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  4466  001BB4  0E00               	movlw	0
  4467  001BB6  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  4468  001BB8  0E00               	movlw	0
  4469  001BBA  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  4470  001BBC  0E00               	movlw	0
  4471  001BBE  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  4472                           
  4473                           ; BSR set to: 0
  4474  001BC0  0012               	return	
  4475  001BC2                     l2426:
  4476                           
  4477                           ; BSR set to: 0
  4478  001BC2  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4479  001BC6  0100               	movlb	0	; () banked
  4480  001BC8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  4481  001BCA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  4482  001BCC  0100               	movlb	0	; () banked
  4483  001BCE  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  4484  001BD0  0100               	movlb	0	; () banked
  4485  001BD2  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  4486  001BD4  E301               	bnc	u2511
  4487  001BD6  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  4488  001BD8                     u2511:
  4489  001BD8  0100               	movlb	0	; () banked
  4490  001BDA  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  4491  001BDC  0100               	movlb	0	; () banked
  4492  001BDE  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  4493  001BE0  0100               	movlb	0	; () banked
  4494  001BE2  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  4495  001BE4  A4D8               	btfss	status,2,c
  4496  001BE6  D00A               	goto	l2432
  4497                           
  4498                           ; BSR set to: 0
  4499  001BE8  0E00               	movlw	0
  4500  001BEA  0100               	movlb	0	; () banked
  4501  001BEC  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  4502  001BEE  0E00               	movlw	0
  4503  001BF0  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  4504  001BF2  0E00               	movlw	0
  4505  001BF4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  4506  001BF6  0E00               	movlw	0
  4507  001BF8  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  4508                           
  4509                           ; BSR set to: 0
  4510  001BFA  0012               	return	
  4511  001BFC                     l2432:
  4512                           
  4513                           ; BSR set to: 0
  4514  001BFC  0100               	movlb	0	; () banked
  4515  001BFE  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  4516                           
  4517                           ; BSR set to: 0
  4518  001C00  0EFF               	movlw	255
  4519  001C02  0100               	movlb	0	; () banked
  4520  001C04  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  4521  001C06  0EFF               	movlw	255
  4522  001C08  0100               	movlb	0	; () banked
  4523  001C0A  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  4524  001C0C  0E00               	movlw	0
  4525  001C0E  0100               	movlb	0	; () banked
  4526  001C10  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  4527  001C12  0100               	movlb	0	; () banked
  4528  001C14  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  4529                           
  4530                           ; BSR set to: 0
  4531  001C16  0EFF               	movlw	255
  4532  001C18  0100               	movlb	0	; () banked
  4533  001C1A  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  4534  001C1C  0EFF               	movlw	255
  4535  001C1E  0100               	movlb	0	; () banked
  4536  001C20  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  4537  001C22  0E00               	movlw	0
  4538  001C24  0100               	movlb	0	; () banked
  4539  001C26  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  4540                           
  4541                           ; BSR set to: 0
  4542  001C28  0E00               	movlw	0
  4543  001C2A  0100               	movlb	0	; () banked
  4544  001C2C  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
  4545  001C2E  0E00               	movlw	0
  4546  001C30  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  4547  001C32  0E00               	movlw	0
  4548  001C34  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  4549  001C36  0E00               	movlw	0
  4550  001C38  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  4551                           
  4552                           ; BSR set to: 0
  4553  001C3A  0E7F               	movlw	127
  4554  001C3C  0100               	movlb	0	; () banked
  4555  001C3E  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  4556                           
  4557                           ; BSR set to: 0
  4558  001C40  0100               	movlb	0	; () banked
  4559  001C42  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  4560  001C44  0F98               	addlw	152
  4561  001C46  0100               	movlb	0	; () banked
  4562  001C48  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 0
  4565  001C4A  0E18               	movlw	24
  4566  001C4C  0100               	movlb	0	; () banked
  4567  001C4E  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  4568  001C50                     l506:
  4569                           
  4570                           ; BSR set to: 0
  4571  001C50  0100               	movlb	0	; () banked
  4572  001C52  90D8               	bcf	status,0,c
  4573  001C54  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  4574  001C56  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  4575  001C58  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  4576  001C5A  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 0
  4579  001C5C  0100               	movlb	0	; () banked
  4580  001C5E  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  4581  001C60  0100               	movlb	0	; () banked
  4582  001C62  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  4583  001C64  0100               	movlb	0	; () banked
  4584  001C66  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  4585  001C68  0100               	movlb	0	; () banked
  4586  001C6A  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  4587  001C6C  0100               	movlb	0	; () banked
  4588  001C6E  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  4589  001C70  0100               	movlb	0	; () banked
  4590  001C72  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  4591  001C74  A0D8               	btfss	status,0,c
  4592  001C76  D00E               	goto	l507
  4593                           
  4594                           ; BSR set to: 0
  4595  001C78  0100               	movlb	0	; () banked
  4596  001C7A  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  4597  001C7C  0100               	movlb	0	; () banked
  4598  001C7E  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  4599  001C80  0100               	movlb	0	; () banked
  4600  001C82  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  4601  001C84  0100               	movlb	0	; () banked
  4602  001C86  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  4603  001C88  0100               	movlb	0	; () banked
  4604  001C8A  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  4605  001C8C  0100               	movlb	0	; () banked
  4606  001C8E  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  4607                           
  4608                           ; BSR set to: 0
  4609  001C90  0100               	movlb	0	; () banked
  4610  001C92  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  4611  001C94                     l507:
  4612                           
  4613                           ; BSR set to: 0
  4614  001C94  0100               	movlb	0	; () banked
  4615  001C96  90D8               	bcf	status,0,c
  4616  001C98  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  4617  001C9A  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  4618  001C9C  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  4619                           
  4620                           ; BSR set to: 0
  4621  001C9E  0100               	movlb	0	; () banked
  4622  001CA0  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  4623  001CA2  D7D6               	goto	l506
  4624                           
  4625                           ; BSR set to: 0
  4626                           
  4627                           ; BSR set to: 0
  4628  001CA4  0100               	movlb	0	; () banked
  4629  001CA6  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  4630  001CA8  D01A               	goto	l2466
  4631                           
  4632                           ; BSR set to: 0
  4633  001CAA  0100               	movlb	0	; () banked
  4634  001CAC  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  4635  001CAE  0A80               	xorlw	128
  4636  001CB0  0F97               	addlw	151
  4637  001CB2  B0D8               	btfsc	status,0,c
  4638  001CB4  D00A               	goto	l2462
  4639                           
  4640                           ; BSR set to: 0
  4641  001CB6  0E00               	movlw	0
  4642  001CB8  0100               	movlb	0	; () banked
  4643  001CBA  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  4644  001CBC  0E00               	movlw	0
  4645  001CBE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  4646  001CC0  0E00               	movlw	0
  4647  001CC2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  4648  001CC4  0E00               	movlw	0
  4649  001CC6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  4650                           
  4651                           ; BSR set to: 0
  4652  001CC8  0012               	return	
  4653  001CCA                     l2462:
  4654                           
  4655                           ; BSR set to: 0
  4656  001CCA  0100               	movlb	0	; () banked
  4657  001CCC  90D8               	bcf	status,0,c
  4658  001CCE  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  4659  001CD0  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  4660  001CD2  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  4661  001CD4  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  4662                           
  4663                           ; BSR set to: 0
  4664  001CD6  0100               	movlb	0	; () banked
  4665  001CD8  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  4666  001CDA  D7F7               	goto	l2462
  4667                           
  4668                           ; BSR set to: 0
  4669  001CDC  D01B               	goto	l513
  4670  001CDE                     l2466:
  4671                           
  4672                           ; BSR set to: 0
  4673  001CDE  0E17               	movlw	23
  4674  001CE0  0100               	movlb	0	; () banked
  4675  001CE2  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  4676  001CE4  D012               	goto	l2474
  4677                           
  4678                           ; BSR set to: 0
  4679  001CE6  0E00               	movlw	0
  4680  001CE8  0100               	movlb	0	; () banked
  4681  001CEA  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  4682  001CEC  0E00               	movlw	0
  4683  001CEE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  4684  001CF0  0E00               	movlw	0
  4685  001CF2  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  4686  001CF4  0E00               	movlw	0
  4687  001CF6  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690  001CF8  0012               	return	
  4691  001CFA                     l2472:
  4692                           
  4693                           ; BSR set to: 0
  4694  001CFA  0100               	movlb	0	; () banked
  4695  001CFC  90D8               	bcf	status,0,c
  4696  001CFE  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  4697  001D00  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  4698  001D02  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  4699  001D04  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  4700  001D06  0100               	movlb	0	; () banked
  4701  001D08  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  4702  001D0A                     l2474:
  4703                           
  4704                           ; BSR set to: 0
  4705  001D0A  0100               	movlb	0	; () banked
  4706  001D0C  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  4707  001D0E  0100               	movlb	0	; () banked
  4708  001D10  A4D8               	btfss	status,2,c
  4709  001D12  D7F3               	goto	l2472
  4710  001D14                     l513:
  4711                           
  4712                           ; BSR set to: 0
  4713  001D14  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4714  001D18  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4715  001D1C  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4716  001D20  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4717                           
  4718                           ; BSR set to: 0
  4719  001D24  0012               	return		;funcret
  4720  001D26                     __end_of__tdiv_to_l_:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           indf2	equ	0xFDF
  4731                           postinc2	equ	0xFDE
  4732                           postdec2	equ	0xFDD
  4733                           fsr2h	equ	0xFDA
  4734                           fsr2l	equ	0xFD9
  4735                           status	equ	0xFD8
  4736                           
  4737 ;; *************** function __div_to_l_ *****************
  4738 ;; Defined at:
  4739 ;;		line 60 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\fldivl.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  f1              3    0[BANK0 ] unsigned long 
  4742 ;;  f2              3    3[BANK0 ] unsigned long 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  quot            4    6[BANK0 ] unsigned long 
  4745 ;;  exp1            1   11[BANK0 ] unsigned char 
  4746 ;;  cntr            1   10[BANK0 ] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  4    0[BANK0 ] unsigned long 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4756 ;;      Params:         0       6       0       0       0       0       0
  4757 ;;      Locals:         0       6       0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0
  4759 ;;      Totals:         0      12       0       0       0       0       0
  4760 ;;Total ram usage:       12 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    4
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_sprintf
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text10
  4771  001D26                     __ptext10:
  4772                           	opt stack 0
  4773  001D26                     __div_to_l_:
  4774                           	opt stack 25
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;incstack = 0
  4778  001D26  0100               	movlb	0	; () banked
  4779  001D28  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  4780  001D2A  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  4781  001D2C  0100               	movlb	0	; () banked
  4782  001D2E  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
  4783  001D30  0100               	movlb	0	; () banked
  4784  001D32  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  4785  001D34  A4D8               	btfss	status,2,c
  4786  001D36  D00A               	goto	l2482
  4787                           
  4788                           ; BSR set to: 0
  4789  001D38  0E00               	movlw	0
  4790  001D3A  0100               	movlb	0	; () banked
  4791  001D3C  6F60               	movwf	?__div_to_l_& (0+255),b
  4792  001D3E  0E00               	movlw	0
  4793  001D40  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  4794  001D42  0E00               	movlw	0
  4795  001D44  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  4796  001D46  0E00               	movlw	0
  4797  001D48  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  4798                           
  4799                           ; BSR set to: 0
  4800  001D4A  0012               	return	
  4801  001D4C                     l2482:
  4802                           
  4803                           ; BSR set to: 0
  4804  001D4C  0100               	movlb	0	; () banked
  4805  001D4E  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  4806  001D50  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  4807  001D52  0100               	movlb	0	; () banked
  4808  001D54  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  4809  001D56  0100               	movlb	0	; () banked
  4810  001D58  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  4811  001D5A  A4D8               	btfss	status,2,c
  4812  001D5C  D00A               	goto	l2488
  4813                           
  4814                           ; BSR set to: 0
  4815  001D5E  0E00               	movlw	0
  4816  001D60  0100               	movlb	0	; () banked
  4817  001D62  6F60               	movwf	?__div_to_l_& (0+255),b
  4818  001D64  0E00               	movlw	0
  4819  001D66  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  4820  001D68  0E00               	movlw	0
  4821  001D6A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  4822  001D6C  0E00               	movlw	0
  4823  001D6E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  4824                           
  4825                           ; BSR set to: 0
  4826  001D70  0012               	return	
  4827  001D72                     l2488:
  4828                           
  4829                           ; BSR set to: 0
  4830  001D72  0100               	movlb	0	; () banked
  4831  001D74  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  4832                           
  4833                           ; BSR set to: 0
  4834  001D76  0EFF               	movlw	255
  4835  001D78  0100               	movlb	0	; () banked
  4836  001D7A  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  4837  001D7C  0EFF               	movlw	255
  4838  001D7E  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  4839  001D80  0EFF               	movlw	255
  4840  001D82  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  4841  001D84  0E00               	movlw	0
  4842  001D86  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  4843                           
  4844                           ; BSR set to: 0
  4845  001D88  0100               	movlb	0	; () banked
  4846  001D8A  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  4847  001D8C  0EFF               	movlw	255
  4848  001D8E  0100               	movlb	0	; () banked
  4849  001D90  1763               	andwf	__div_to_l_@f2& (0+255),f,b
  4850  001D92  0EFF               	movlw	255
  4851  001D94  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  4852  001D96  0EFF               	movlw	255
  4853  001D98  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  4854  001D9A  0E00               	movlw	0
  4855  001D9C  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  4856                           
  4857                           ; BSR set to: 0
  4858  001D9E  0E00               	movlw	0
  4859  001DA0  0100               	movlb	0	; () banked
  4860  001DA2  6F66               	movwf	__div_to_l_@quot& (0+255),b
  4861  001DA4  0E00               	movlw	0
  4862  001DA6  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
  4863  001DA8  0E00               	movlw	0
  4864  001DAA  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
  4865  001DAC  0E00               	movlw	0
  4866  001DAE  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
  4867                           
  4868                           ; BSR set to: 0
  4869  001DB0  0E7F               	movlw	127
  4870  001DB2  0100               	movlb	0	; () banked
  4871  001DB4  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  4872                           
  4873                           ; BSR set to: 0
  4874  001DB6  0100               	movlb	0	; () banked
  4875  001DB8  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  4876  001DBA  0FA0               	addlw	160
  4877  001DBC  0100               	movlb	0	; () banked
  4878  001DBE  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  4879                           
  4880                           ; BSR set to: 0
  4881  001DC0  0E20               	movlw	32
  4882  001DC2  0100               	movlb	0	; () banked
  4883  001DC4  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  4884  001DC6                     l2502:
  4885                           
  4886                           ; BSR set to: 0
  4887  001DC6  0100               	movlb	0	; () banked
  4888  001DC8  90D8               	bcf	status,0,c
  4889  001DCA  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  4890  001DCC  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  4891  001DCE  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  4892  001DD0  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  4893                           
  4894                           ; BSR set to: 0
  4895  001DD2  0100               	movlb	0	; () banked
  4896  001DD4  5163               	movf	__div_to_l_@f2& (0+255),w,b
  4897  001DD6  0100               	movlb	0	; () banked
  4898  001DD8  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  4899  001DDA  0100               	movlb	0	; () banked
  4900  001DDC  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  4901  001DDE  0100               	movlb	0	; () banked
  4902  001DE0  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  4903  001DE2  0100               	movlb	0	; () banked
  4904  001DE4  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  4905  001DE6  0100               	movlb	0	; () banked
  4906  001DE8  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  4907  001DEA  0100               	movlb	0	; () banked
  4908  001DEC  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  4909  001DEE  0100               	movlb	0	; () banked
  4910  001DF0  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  4911  001DF2  A0D8               	btfss	status,0,c
  4912  001DF4  D012               	goto	l2510
  4913                           
  4914                           ; BSR set to: 0
  4915  001DF6  0100               	movlb	0	; () banked
  4916  001DF8  5163               	movf	__div_to_l_@f2& (0+255),w,b
  4917  001DFA  0100               	movlb	0	; () banked
  4918  001DFC  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  4919  001DFE  0100               	movlb	0	; () banked
  4920  001E00  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  4921  001E02  0100               	movlb	0	; () banked
  4922  001E04  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  4923  001E06  0100               	movlb	0	; () banked
  4924  001E08  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  4925  001E0A  0100               	movlb	0	; () banked
  4926  001E0C  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  4927  001E0E  0100               	movlb	0	; () banked
  4928  001E10  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  4929  001E12  0100               	movlb	0	; () banked
  4930  001E14  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  4931                           
  4932                           ; BSR set to: 0
  4933  001E16  0100               	movlb	0	; () banked
  4934  001E18  8166               	bsf	__div_to_l_@quot& (0+255),0,b
  4935  001E1A                     l2510:
  4936                           
  4937                           ; BSR set to: 0
  4938  001E1A  0100               	movlb	0	; () banked
  4939  001E1C  90D8               	bcf	status,0,c
  4940  001E1E  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  4941  001E20  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  4942  001E22  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  4943  001E24  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  4944                           
  4945                           ; BSR set to: 0
  4946  001E26  0100               	movlb	0	; () banked
  4947  001E28  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  4948  001E2A  D7CD               	goto	l2502
  4949                           
  4950                           ; BSR set to: 0
  4951                           
  4952                           ; BSR set to: 0
  4953  001E2C  0100               	movlb	0	; () banked
  4954  001E2E  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
  4955  001E30  D01A               	goto	l2526
  4956                           
  4957                           ; BSR set to: 0
  4958  001E32  0100               	movlb	0	; () banked
  4959  001E34  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  4960  001E36  0A80               	xorlw	128
  4961  001E38  0F9F               	addlw	159
  4962  001E3A  B0D8               	btfsc	status,0,c
  4963  001E3C  D00A               	goto	l2522
  4964                           
  4965                           ; BSR set to: 0
  4966  001E3E  0E00               	movlw	0
  4967  001E40  0100               	movlb	0	; () banked
  4968  001E42  6F60               	movwf	?__div_to_l_& (0+255),b
  4969  001E44  0E00               	movlw	0
  4970  001E46  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  4971  001E48  0E00               	movlw	0
  4972  001E4A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  4973  001E4C  0E00               	movlw	0
  4974  001E4E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  4975                           
  4976                           ; BSR set to: 0
  4977  001E50  0012               	return	
  4978  001E52                     l2522:
  4979                           
  4980                           ; BSR set to: 0
  4981  001E52  0100               	movlb	0	; () banked
  4982  001E54  90D8               	bcf	status,0,c
  4983  001E56  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  4984  001E58  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  4985  001E5A  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  4986  001E5C  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
  4987                           
  4988                           ; BSR set to: 0
  4989  001E5E  0100               	movlb	0	; () banked
  4990  001E60  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  4991  001E62  D7F7               	goto	l2522
  4992                           
  4993                           ; BSR set to: 0
  4994  001E64  D01B               	goto	l409
  4995  001E66                     l2526:
  4996                           
  4997                           ; BSR set to: 0
  4998  001E66  0E1F               	movlw	31
  4999  001E68  0100               	movlb	0	; () banked
  5000  001E6A  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5001  001E6C  D012               	goto	l2534
  5002                           
  5003                           ; BSR set to: 0
  5004  001E6E  0E00               	movlw	0
  5005  001E70  0100               	movlb	0	; () banked
  5006  001E72  6F60               	movwf	?__div_to_l_& (0+255),b
  5007  001E74  0E00               	movlw	0
  5008  001E76  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5009  001E78  0E00               	movlw	0
  5010  001E7A  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5011  001E7C  0E00               	movlw	0
  5012  001E7E  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5013                           
  5014                           ; BSR set to: 0
  5015  001E80  0012               	return	
  5016  001E82                     l2532:
  5017                           
  5018                           ; BSR set to: 0
  5019  001E82  0100               	movlb	0	; () banked
  5020  001E84  90D8               	bcf	status,0,c
  5021  001E86  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  5022  001E88  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5023  001E8A  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5024  001E8C  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5025  001E8E  0100               	movlb	0	; () banked
  5026  001E90  076B               	decf	__div_to_l_@exp1& (0+255),f,b
  5027  001E92                     l2534:
  5028                           
  5029                           ; BSR set to: 0
  5030  001E92  0100               	movlb	0	; () banked
  5031  001E94  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  5032  001E96  0100               	movlb	0	; () banked
  5033  001E98  A4D8               	btfss	status,2,c
  5034  001E9A  D7F3               	goto	l2532
  5035  001E9C                     l409:
  5036                           
  5037                           ; BSR set to: 0
  5038  001E9C  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
  5039  001EA0  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5040  001EA4  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5041  001EA8  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5042                           
  5043                           ; BSR set to: 0
  5044  001EAC  0012               	return		;funcret
  5045  001EAE                     __end_of__div_to_l_:
  5046                           	opt stack 0
  5047                           tblptru	equ	0xFF8
  5048                           tblptrh	equ	0xFF7
  5049                           tblptrl	equ	0xFF6
  5050                           tablat	equ	0xFF5
  5051                           prodh	equ	0xFF4
  5052                           prodl	equ	0xFF3
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           indf2	equ	0xFDF
  5056                           postinc2	equ	0xFDE
  5057                           postdec2	equ	0xFDD
  5058                           fsr2h	equ	0xFDA
  5059                           fsr2l	equ	0xFD9
  5060                           status	equ	0xFD8
  5061                           
  5062 ;; *************** function ___lltoft *****************
  5063 ;; Defined at:
  5064 ;;		line 35 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\lltoft.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  c               4    8[BANK0 ] unsigned long 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  exp             1   16[BANK0 ] unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  3    8[BANK0 ] float 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5078 ;;      Params:         0       4       0       0       0       0       0
  5079 ;;      Locals:         0       1       0       0       0       0       0
  5080 ;;      Temps:          0       4       0       0       0       0       0
  5081 ;;      Totals:         0       9       0       0       0       0       0
  5082 ;;Total ram usage:        9 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    5
  5085 ;; This function calls:
  5086 ;;		___ftpack
  5087 ;; This function is called by:
  5088 ;;		_sprintf
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text11
  5093  002A12                     __ptext11:
  5094                           	opt stack 0
  5095  002A12                     ___lltoft:
  5096                           	opt stack 24
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;incstack = 0
  5100  002A12  0E8E               	movlw	142
  5101  002A14  0100               	movlb	0	; () banked
  5102  002A16  6F70               	movwf	___lltoft@exp& (0+255),b
  5103  002A18  D008               	goto	l2712
  5104  002A1A                     l2710:
  5105                           
  5106                           ; BSR set to: 0
  5107  002A1A  0100               	movlb	0	; () banked
  5108  002A1C  90D8               	bcf	status,0,c
  5109  002A1E  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  5110  002A20  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  5111  002A22  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  5112  002A24  3368               	rrcf	___lltoft@c& (0+255),f,b
  5113  002A26  0100               	movlb	0	; () banked
  5114  002A28  2B70               	incf	___lltoft@exp& (0+255),f,b
  5115  002A2A                     l2712:
  5116                           
  5117                           ; BSR set to: 0
  5118  002A2A  0E00               	movlw	0
  5119  002A2C  0100               	movlb	0	; () banked
  5120  002A2E  1568               	andwf	___lltoft@c& (0+255),w,b
  5121  002A30  0100               	movlb	0	; () banked
  5122  002A32  6F6C               	movwf	??___lltoft& (0+255),b
  5123  002A34  0E00               	movlw	0
  5124  002A36  0100               	movlb	0	; () banked
  5125  002A38  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  5126  002A3A  0100               	movlb	0	; () banked
  5127  002A3C  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  5128  002A3E  0E00               	movlw	0
  5129  002A40  0100               	movlb	0	; () banked
  5130  002A42  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  5131  002A44  0100               	movlb	0	; () banked
  5132  002A46  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  5133  002A48  0EFF               	movlw	255
  5134  002A4A  0100               	movlb	0	; () banked
  5135  002A4C  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  5136  002A4E  0100               	movlb	0	; () banked
  5137  002A50  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  5138  002A52  0100               	movlb	0	; () banked
  5139  002A54  516C               	movf	??___lltoft& (0+255),w,b
  5140  002A56  0100               	movlb	0	; () banked
  5141  002A58  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  5142  002A5A  0100               	movlb	0	; () banked
  5143  002A5C  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  5144  002A5E  0100               	movlb	0	; () banked
  5145  002A60  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
  5146  002A62  A4D8               	btfss	status,2,c
  5147  002A64  D7DA               	goto	l2710
  5148                           
  5149                           ; BSR set to: 0
  5150                           
  5151                           ; BSR set to: 0
  5152  002A66  C068  F060         	movff	___lltoft@c,___ftpack@arg
  5153  002A6A  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  5154  002A6E  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  5155  002A72  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  5156  002A76  0E00               	movlw	0
  5157  002A78  0100               	movlb	0	; () banked
  5158  002A7A  6F64               	movwf	___ftpack@sign& (0+255),b
  5159  002A7C  EC3D  F011         	call	___ftpack	;wreg free
  5160  002A80  C060  F068         	movff	?___ftpack,?___lltoft
  5161  002A84  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  5162  002A88  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  5163  002A8C  0012               	return	
  5164  002A8E                     __end_of___lltoft:
  5165                           	opt stack 0
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           postinc0	equ	0xFEE
  5173                           wreg	equ	0xFE8
  5174                           indf2	equ	0xFDF
  5175                           postinc2	equ	0xFDE
  5176                           postdec2	equ	0xFDD
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function ___llmod *****************
  5182 ;; Defined at:
  5183 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\llmod.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  dividend        4   13[BANK0 ] unsigned long 
  5186 ;;  divisor         4   17[BANK0 ] unsigned long 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  counter         1   21[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  4   13[BANK0 ] unsigned long 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5198 ;;      Params:         0       8       0       0       0       0       0
  5199 ;;      Locals:         0       1       0       0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0
  5201 ;;      Totals:         0       9       0       0       0       0       0
  5202 ;;Total ram usage:        9 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    4
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_sprintf
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text12
  5213  0028F2                     __ptext12:
  5214                           	opt stack 0
  5215  0028F2                     ___llmod:
  5216                           	opt stack 25
  5217                           
  5218                           ;incstack = 0
  5219  0028F2  0100               	movlb	0	; () banked
  5220  0028F4  5171               	movf	___llmod@divisor& (0+255),w,b
  5221  0028F6  0100               	movlb	0	; () banked
  5222  0028F8  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5223  0028FA  0100               	movlb	0	; () banked
  5224  0028FC  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5225  0028FE  0100               	movlb	0	; () banked
  5226  002900  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5227  002902  B4D8               	btfsc	status,2,c
  5228  002904  D03A               	goto	l598
  5229                           
  5230                           ; BSR set to: 0
  5231  002906  0E01               	movlw	1
  5232  002908  0100               	movlb	0	; () banked
  5233  00290A  6F75               	movwf	___llmod@counter& (0+255),b
  5234  00290C  D008               	goto	l2698
  5235  00290E                     l2696:
  5236                           
  5237                           ; BSR set to: 0
  5238  00290E  0100               	movlb	0	; () banked
  5239  002910  90D8               	bcf	status,0,c
  5240  002912  3771               	rlcf	___llmod@divisor& (0+255),f,b
  5241  002914  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5242  002916  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5243  002918  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5244  00291A  0100               	movlb	0	; () banked
  5245  00291C  2B75               	incf	___llmod@counter& (0+255),f,b
  5246  00291E                     l2698:
  5247                           
  5248                           ; BSR set to: 0
  5249  00291E  0100               	movlb	0	; () banked
  5250  002920  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5251  002922  D7F5               	goto	l2696
  5252  002924                     l2700:
  5253                           
  5254                           ; BSR set to: 0
  5255  002924  0100               	movlb	0	; () banked
  5256  002926  5171               	movf	___llmod@divisor& (0+255),w,b
  5257  002928  0100               	movlb	0	; () banked
  5258  00292A  5D6D               	subwf	___llmod@dividend& (0+255),w,b
  5259  00292C  0100               	movlb	0	; () banked
  5260  00292E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  5261  002930  0100               	movlb	0	; () banked
  5262  002932  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5263  002934  0100               	movlb	0	; () banked
  5264  002936  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  5265  002938  0100               	movlb	0	; () banked
  5266  00293A  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5267  00293C  0100               	movlb	0	; () banked
  5268  00293E  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  5269  002940  0100               	movlb	0	; () banked
  5270  002942  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5271  002944  A0D8               	btfss	status,0,c
  5272  002946  D010               	goto	l2704
  5273                           
  5274                           ; BSR set to: 0
  5275  002948  0100               	movlb	0	; () banked
  5276  00294A  5171               	movf	___llmod@divisor& (0+255),w,b
  5277  00294C  0100               	movlb	0	; () banked
  5278  00294E  5F6D               	subwf	___llmod@dividend& (0+255),f,b
  5279  002950  0100               	movlb	0	; () banked
  5280  002952  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  5281  002954  0100               	movlb	0	; () banked
  5282  002956  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5283  002958  0100               	movlb	0	; () banked
  5284  00295A  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  5285  00295C  0100               	movlb	0	; () banked
  5286  00295E  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5287  002960  0100               	movlb	0	; () banked
  5288  002962  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  5289  002964  0100               	movlb	0	; () banked
  5290  002966  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5291  002968                     l2704:
  5292                           
  5293                           ; BSR set to: 0
  5294  002968  0100               	movlb	0	; () banked
  5295  00296A  90D8               	bcf	status,0,c
  5296  00296C  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5297  00296E  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5298  002970  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5299  002972  3371               	rrcf	___llmod@divisor& (0+255),f,b
  5300                           
  5301                           ; BSR set to: 0
  5302  002974  0100               	movlb	0	; () banked
  5303  002976  2F75               	decfsz	___llmod@counter& (0+255),f,b
  5304  002978  D7D5               	goto	l2700
  5305  00297A                     l598:
  5306                           
  5307                           ; BSR set to: 0
  5308  00297A  C06D  F06D         	movff	___llmod@dividend,?___llmod
  5309  00297E  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
  5310  002982  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
  5311  002986  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
  5312                           
  5313                           ; BSR set to: 0
  5314  00298A  0012               	return		;funcret
  5315  00298C                     __end_of___llmod:
  5316                           	opt stack 0
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           postinc0	equ	0xFEE
  5324                           wreg	equ	0xFE8
  5325                           indf2	equ	0xFDF
  5326                           postinc2	equ	0xFDE
  5327                           postdec2	equ	0xFDD
  5328                           fsr2h	equ	0xFDA
  5329                           fsr2l	equ	0xFD9
  5330                           status	equ	0xFD8
  5331                           
  5332 ;; *************** function ___lldiv *****************
  5333 ;; Defined at:
  5334 ;;		line 8 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\lldiv.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  dividend        4    0[BANK0 ] unsigned long 
  5337 ;;  divisor         4    4[BANK0 ] unsigned long 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  quotient        4    8[BANK0 ] unsigned long 
  5340 ;;  counter         1   12[BANK0 ] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  4    0[BANK0 ] unsigned long 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5350 ;;      Params:         0       8       0       0       0       0       0
  5351 ;;      Locals:         0       5       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0
  5353 ;;      Totals:         0      13       0       0       0       0       0
  5354 ;;Total ram usage:       13 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    4
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_sprintf
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text13
  5365  0026E6                     __ptext13:
  5366                           	opt stack 0
  5367  0026E6                     ___lldiv:
  5368                           	opt stack 25
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;incstack = 0
  5372  0026E6  0E00               	movlw	0
  5373  0026E8  0100               	movlb	0	; () banked
  5374  0026EA  6F68               	movwf	___lldiv@quotient& (0+255),b
  5375  0026EC  0E00               	movlw	0
  5376  0026EE  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  5377  0026F0  0E00               	movlw	0
  5378  0026F2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  5379  0026F4  0E00               	movlw	0
  5380  0026F6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  5381                           
  5382                           ; BSR set to: 0
  5383  0026F8  0100               	movlb	0	; () banked
  5384  0026FA  5164               	movf	___lldiv@divisor& (0+255),w,b
  5385  0026FC  0100               	movlb	0	; () banked
  5386  0026FE  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5387  002700  0100               	movlb	0	; () banked
  5388  002702  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5389  002704  0100               	movlb	0	; () banked
  5390  002706  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5391  002708  B4D8               	btfsc	status,2,c
  5392  00270A  D042               	goto	l588
  5393                           
  5394                           ; BSR set to: 0
  5395  00270C  0E01               	movlw	1
  5396  00270E  0100               	movlb	0	; () banked
  5397  002710  6F6C               	movwf	___lldiv@counter& (0+255),b
  5398  002712  D008               	goto	l2678
  5399  002714                     l2676:
  5400                           
  5401                           ; BSR set to: 0
  5402  002714  0100               	movlb	0	; () banked
  5403  002716  90D8               	bcf	status,0,c
  5404  002718  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  5405  00271A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5406  00271C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5407  00271E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5408  002720  0100               	movlb	0	; () banked
  5409  002722  2B6C               	incf	___lldiv@counter& (0+255),f,b
  5410  002724                     l2678:
  5411                           
  5412                           ; BSR set to: 0
  5413  002724  0100               	movlb	0	; () banked
  5414  002726  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5415  002728  D7F5               	goto	l2676
  5416  00272A                     l2680:
  5417                           
  5418                           ; BSR set to: 0
  5419  00272A  0100               	movlb	0	; () banked
  5420  00272C  90D8               	bcf	status,0,c
  5421  00272E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  5422  002730  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5423  002732  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5424  002734  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5425                           
  5426                           ; BSR set to: 0
  5427  002736  0100               	movlb	0	; () banked
  5428  002738  5164               	movf	___lldiv@divisor& (0+255),w,b
  5429  00273A  0100               	movlb	0	; () banked
  5430  00273C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  5431  00273E  0100               	movlb	0	; () banked
  5432  002740  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5433  002742  0100               	movlb	0	; () banked
  5434  002744  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5435  002746  0100               	movlb	0	; () banked
  5436  002748  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5437  00274A  0100               	movlb	0	; () banked
  5438  00274C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5439  00274E  0100               	movlb	0	; () banked
  5440  002750  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5441  002752  0100               	movlb	0	; () banked
  5442  002754  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5443  002756  A0D8               	btfss	status,0,c
  5444  002758  D012               	goto	l2688
  5445                           
  5446                           ; BSR set to: 0
  5447  00275A  0100               	movlb	0	; () banked
  5448  00275C  5164               	movf	___lldiv@divisor& (0+255),w,b
  5449  00275E  0100               	movlb	0	; () banked
  5450  002760  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  5451  002762  0100               	movlb	0	; () banked
  5452  002764  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5453  002766  0100               	movlb	0	; () banked
  5454  002768  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5455  00276A  0100               	movlb	0	; () banked
  5456  00276C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5457  00276E  0100               	movlb	0	; () banked
  5458  002770  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5459  002772  0100               	movlb	0	; () banked
  5460  002774  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5461  002776  0100               	movlb	0	; () banked
  5462  002778  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5463                           
  5464                           ; BSR set to: 0
  5465  00277A  0100               	movlb	0	; () banked
  5466  00277C  8168               	bsf	___lldiv@quotient& (0+255),0,b
  5467  00277E                     l2688:
  5468                           
  5469                           ; BSR set to: 0
  5470  00277E  0100               	movlb	0	; () banked
  5471  002780  90D8               	bcf	status,0,c
  5472  002782  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5473  002784  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5474  002786  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5475  002788  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  5476                           
  5477                           ; BSR set to: 0
  5478  00278A  0100               	movlb	0	; () banked
  5479  00278C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  5480  00278E  D7CD               	goto	l2680
  5481  002790                     l588:
  5482                           
  5483                           ; BSR set to: 0
  5484  002790  C068  F060         	movff	___lldiv@quotient,?___lldiv
  5485  002794  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  5486  002798  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  5487  00279C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  5488                           
  5489                           ; BSR set to: 0
  5490  0027A0  0012               	return		;funcret
  5491  0027A2                     __end_of___lldiv:
  5492                           	opt stack 0
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           postinc0	equ	0xFEE
  5500                           wreg	equ	0xFE8
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function ___fttol *****************
  5509 ;; Defined at:
  5510 ;;		line 44 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\fttol.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  f1              3   42[BANK0 ] float 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  lval            4   52[BANK0 ] unsigned long 
  5515 ;;  exp1            1   56[BANK0 ] unsigned char 
  5516 ;;  sign1           1   51[BANK0 ] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  4   42[BANK0 ] long 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5526 ;;      Params:         0       4       0       0       0       0       0
  5527 ;;      Locals:         0       6       0       0       0       0       0
  5528 ;;      Temps:          0       5       0       0       0       0       0
  5529 ;;      Totals:         0      15       0       0       0       0       0
  5530 ;;Total ram usage:       15 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    4
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_sprintf
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text14
  5541  00200C                     __ptext14:
  5542                           	opt stack 0
  5543  00200C                     ___fttol:
  5544                           	opt stack 25
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;incstack = 0
  5548  00200C  C08C  F08E         	movff	___fttol@f1+2,??___fttol
  5549  002010  0100               	movlb	0	; () banked
  5550  002012  6B8F               	clrf	(??___fttol+1)& (0+255),b
  5551  002014  6B90               	clrf	(??___fttol+2)& (0+255),b
  5552  002016  0100               	movlb	0	; () banked
  5553  002018  358B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5554  00201A  0100               	movlb	0	; () banked
  5555  00201C  378E               	rlcf	??___fttol& (0+255),f,b
  5556  00201E  E301               	bnc	u2761
  5557  002020  818F               	bsf	(??___fttol+1)& (0+255),0,b
  5558  002022                     u2761:
  5559  002022  0100               	movlb	0	; () banked
  5560  002024  518E               	movf	??___fttol& (0+255),w,b
  5561  002026  0100               	movlb	0	; () banked
  5562  002028  6F98               	movwf	___fttol@exp1& (0+255),b
  5563  00202A  0100               	movlb	0	; () banked
  5564  00202C  5198               	movf	___fttol@exp1& (0+255),w,b
  5565  00202E  A4D8               	btfss	status,2,c
  5566  002030  D00A               	goto	l2630
  5567                           
  5568                           ; BSR set to: 0
  5569  002032  0E00               	movlw	0
  5570  002034  0100               	movlb	0	; () banked
  5571  002036  6F8A               	movwf	?___fttol& (0+255),b
  5572  002038  0E00               	movlw	0
  5573  00203A  6F8B               	movwf	(?___fttol+1)& (0+255),b
  5574  00203C  0E00               	movlw	0
  5575  00203E  6F8C               	movwf	(?___fttol+2)& (0+255),b
  5576  002040  0E00               	movlw	0
  5577  002042  6F8D               	movwf	(?___fttol+3)& (0+255),b
  5578                           
  5579                           ; BSR set to: 0
  5580  002044  0012               	return	
  5581  002046                     l2630:
  5582                           
  5583                           ; BSR set to: 0
  5584  002046  0E17               	movlw	23
  5585  002048  0100               	movlb	0	; () banked
  5586  00204A  6F8E               	movwf	??___fttol& (0+255),b
  5587  00204C  C08A  F08F         	movff	___fttol@f1,??___fttol+1
  5588  002050  C08B  F090         	movff	___fttol@f1+1,??___fttol+2
  5589  002054  C08C  F091         	movff	___fttol@f1+2,??___fttol+3
  5590  002058  0100               	movlb	0	; () banked
  5591  00205A  298E               	incf	??___fttol& (0+255),w,b
  5592  00205C  0100               	movlb	0	; () banked
  5593  00205E  6F92               	movwf	(??___fttol+4)& (0+255),b
  5594  002060  D005               	goto	u2780
  5595  002062                     u2785:
  5596  002062  0100               	movlb	0	; () banked
  5597  002064  90D8               	bcf	status,0,c
  5598  002066  3391               	rrcf	(??___fttol+3)& (0+255),f,b
  5599  002068  3390               	rrcf	(??___fttol+2)& (0+255),f,b
  5600  00206A  338F               	rrcf	(??___fttol+1)& (0+255),f,b
  5601  00206C                     u2780:
  5602  00206C  0100               	movlb	0	; () banked
  5603  00206E  2F92               	decfsz	(??___fttol+4)& (0+255),f,b
  5604  002070  D7F8               	goto	u2785
  5605  002072  0100               	movlb	0	; () banked
  5606  002074  518F               	movf	(??___fttol+1)& (0+255),w,b
  5607  002076  0100               	movlb	0	; () banked
  5608  002078  6F93               	movwf	___fttol@sign1& (0+255),b
  5609                           
  5610                           ; BSR set to: 0
  5611  00207A  0100               	movlb	0	; () banked
  5612  00207C  8F8B               	bsf	(___fttol@f1+1)& (0+255),7,b
  5613                           
  5614                           ; BSR set to: 0
  5615  00207E  0EFF               	movlw	255
  5616  002080  0100               	movlb	0	; () banked
  5617  002082  178A               	andwf	___fttol@f1& (0+255),f,b
  5618  002084  0EFF               	movlw	255
  5619  002086  0100               	movlb	0	; () banked
  5620  002088  178B               	andwf	(___fttol@f1+1)& (0+255),f,b
  5621  00208A  0E00               	movlw	0
  5622  00208C  0100               	movlb	0	; () banked
  5623  00208E  178C               	andwf	(___fttol@f1+2)& (0+255),f,b
  5624                           
  5625                           ; BSR set to: 0
  5626  002090  0100               	movlb	0	; () banked
  5627  002092  518A               	movf	___fttol@f1& (0+255),w,b
  5628  002094  0100               	movlb	0	; () banked
  5629  002096  6F94               	movwf	___fttol@lval& (0+255),b
  5630  002098  0100               	movlb	0	; () banked
  5631  00209A  518B               	movf	(___fttol@f1+1)& (0+255),w,b
  5632  00209C  0100               	movlb	0	; () banked
  5633  00209E  6F95               	movwf	(___fttol@lval+1)& (0+255),b
  5634  0020A0  0100               	movlb	0	; () banked
  5635  0020A2  518C               	movf	(___fttol@f1+2)& (0+255),w,b
  5636  0020A4  0100               	movlb	0	; () banked
  5637  0020A6  6F96               	movwf	(___fttol@lval+2)& (0+255),b
  5638  0020A8  0100               	movlb	0	; () banked
  5639  0020AA  6B97               	clrf	(___fttol@lval+3)& (0+255),b
  5640                           
  5641                           ; BSR set to: 0
  5642  0020AC  0E8E               	movlw	142
  5643  0020AE  0100               	movlb	0	; () banked
  5644  0020B0  5F98               	subwf	___fttol@exp1& (0+255),f,b
  5645                           
  5646                           ; BSR set to: 0
  5647  0020B2  0100               	movlb	0	; () banked
  5648  0020B4  AF98               	btfss	___fttol@exp1& (0+255),7,b
  5649  0020B6  D01A               	goto	l2652
  5650                           
  5651                           ; BSR set to: 0
  5652  0020B8  0100               	movlb	0	; () banked
  5653  0020BA  5198               	movf	___fttol@exp1& (0+255),w,b
  5654  0020BC  0A80               	xorlw	128
  5655  0020BE  0F8F               	addlw	143
  5656  0020C0  B0D8               	btfsc	status,0,c
  5657  0020C2  D00A               	goto	l2648
  5658                           
  5659                           ; BSR set to: 0
  5660  0020C4  0E00               	movlw	0
  5661  0020C6  0100               	movlb	0	; () banked
  5662  0020C8  6F8A               	movwf	?___fttol& (0+255),b
  5663  0020CA  0E00               	movlw	0
  5664  0020CC  6F8B               	movwf	(?___fttol+1)& (0+255),b
  5665  0020CE  0E00               	movlw	0
  5666  0020D0  6F8C               	movwf	(?___fttol+2)& (0+255),b
  5667  0020D2  0E00               	movlw	0
  5668  0020D4  6F8D               	movwf	(?___fttol+3)& (0+255),b
  5669                           
  5670                           ; BSR set to: 0
  5671  0020D6  0012               	return	
  5672  0020D8                     l2648:
  5673                           
  5674                           ; BSR set to: 0
  5675  0020D8  0100               	movlb	0	; () banked
  5676  0020DA  90D8               	bcf	status,0,c
  5677  0020DC  3397               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5678  0020DE  3396               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5679  0020E0  3395               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5680  0020E2  3394               	rrcf	___fttol@lval& (0+255),f,b
  5681                           
  5682                           ; BSR set to: 0
  5683  0020E4  0100               	movlb	0	; () banked
  5684  0020E6  3F98               	incfsz	___fttol@exp1& (0+255),f,b
  5685  0020E8  D7F7               	goto	l2648
  5686                           
  5687                           ; BSR set to: 0
  5688  0020EA  D01B               	goto	l2662
  5689  0020EC                     l2652:
  5690                           
  5691                           ; BSR set to: 0
  5692  0020EC  0E17               	movlw	23
  5693  0020EE  0100               	movlb	0	; () banked
  5694  0020F0  6598               	cpfsgt	___fttol@exp1& (0+255),b
  5695  0020F2  D012               	goto	l2660
  5696                           
  5697                           ; BSR set to: 0
  5698  0020F4  0E00               	movlw	0
  5699  0020F6  0100               	movlb	0	; () banked
  5700  0020F8  6F8A               	movwf	?___fttol& (0+255),b
  5701  0020FA  0E00               	movlw	0
  5702  0020FC  6F8B               	movwf	(?___fttol+1)& (0+255),b
  5703  0020FE  0E00               	movlw	0
  5704  002100  6F8C               	movwf	(?___fttol+2)& (0+255),b
  5705  002102  0E00               	movlw	0
  5706  002104  6F8D               	movwf	(?___fttol+3)& (0+255),b
  5707                           
  5708                           ; BSR set to: 0
  5709  002106  0012               	return	
  5710  002108                     l2658:
  5711                           
  5712                           ; BSR set to: 0
  5713  002108  0100               	movlb	0	; () banked
  5714  00210A  90D8               	bcf	status,0,c
  5715  00210C  3794               	rlcf	___fttol@lval& (0+255),f,b
  5716  00210E  3795               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5717  002110  3796               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5718  002112  3797               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5719  002114  0100               	movlb	0	; () banked
  5720  002116  0798               	decf	___fttol@exp1& (0+255),f,b
  5721  002118                     l2660:
  5722                           
  5723                           ; BSR set to: 0
  5724  002118  0100               	movlb	0	; () banked
  5725  00211A  5198               	movf	___fttol@exp1& (0+255),w,b
  5726  00211C  0100               	movlb	0	; () banked
  5727  00211E  A4D8               	btfss	status,2,c
  5728  002120  D7F3               	goto	l2658
  5729  002122                     l2662:
  5730                           
  5731                           ; BSR set to: 0
  5732  002122  0100               	movlb	0	; () banked
  5733  002124  5193               	movf	___fttol@sign1& (0+255),w,b
  5734  002126  0100               	movlb	0	; () banked
  5735  002128  B4D8               	btfsc	status,2,c
  5736  00212A  D009               	goto	l2666
  5737                           
  5738                           ; BSR set to: 0
  5739  00212C  0100               	movlb	0	; () banked
  5740  00212E  1F97               	comf	(___fttol@lval+3)& (0+255),f,b
  5741  002130  1F96               	comf	(___fttol@lval+2)& (0+255),f,b
  5742  002132  1F95               	comf	(___fttol@lval+1)& (0+255),f,b
  5743  002134  6D94               	negf	___fttol@lval& (0+255),b
  5744  002136  0E00               	movlw	0
  5745  002138  2395               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5746  00213A  2396               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5747  00213C  2397               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5748  00213E                     l2666:
  5749                           
  5750                           ; BSR set to: 0
  5751  00213E  C094  F08A         	movff	___fttol@lval,?___fttol
  5752  002142  C095  F08B         	movff	___fttol@lval+1,?___fttol+1
  5753  002146  C096  F08C         	movff	___fttol@lval+2,?___fttol+2
  5754  00214A  C097  F08D         	movff	___fttol@lval+3,?___fttol+3
  5755  00214E  0012               	return	
  5756  002150                     __end_of___fttol:
  5757                           	opt stack 0
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           postinc0	equ	0xFEE
  5765                           wreg	equ	0xFE8
  5766                           indf2	equ	0xFDF
  5767                           postinc2	equ	0xFDE
  5768                           postdec2	equ	0xFDD
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function ___ftsub *****************
  5774 ;; Defined at:
  5775 ;;		line 20 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftsub.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  f1              3   57[BANK0 ] float 
  5778 ;;  f2              3   60[BANK0 ] float 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  3   57[BANK0 ] float 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5790 ;;      Params:         0       6       0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0
  5793 ;;      Totals:         0       6       0       0       0       0       0
  5794 ;;Total ram usage:        6 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    6
  5797 ;; This function calls:
  5798 ;;		___ftadd
  5799 ;; This function is called by:
  5800 ;;		_sprintf
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text15
  5805  002A8E                     __ptext15:
  5806                           	opt stack 0
  5807  002A8E                     ___ftsub:
  5808                           	opt stack 23
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;incstack = 0
  5812  002A8E  0100               	movlb	0	; () banked
  5813  002A90  519C               	movf	___ftsub@f2& (0+255),w,b
  5814  002A92  0100               	movlb	0	; () banked
  5815  002A94  119D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  5816  002A96  0100               	movlb	0	; () banked
  5817  002A98  119E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  5818  002A9A  B4D8               	btfsc	status,2,c
  5819  002A9C  D009               	goto	l2586
  5820                           
  5821                           ; BSR set to: 0
  5822  002A9E  0E00               	movlw	0
  5823  002AA0  0100               	movlb	0	; () banked
  5824  002AA2  1B9C               	xorwf	___ftsub@f2& (0+255),f,b
  5825  002AA4  0E00               	movlw	0
  5826  002AA6  0100               	movlb	0	; () banked
  5827  002AA8  1B9D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  5828  002AAA  0E80               	movlw	128
  5829  002AAC  0100               	movlb	0	; () banked
  5830  002AAE  1B9E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  5831  002AB0                     l2586:
  5832                           
  5833                           ; BSR set to: 0
  5834  002AB0  C099  F08D         	movff	___ftsub@f1,___ftadd@f1
  5835  002AB4  C09A  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
  5836  002AB8  C09B  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
  5837  002ABC  C09C  F090         	movff	___ftsub@f2,___ftadd@f2
  5838  002AC0  C09D  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
  5839  002AC4  C09E  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
  5840  002AC8  ECBA  F00B         	call	___ftadd	;wreg free
  5841  002ACC  C08D  F099         	movff	?___ftadd,?___ftsub
  5842  002AD0  C08E  F09A         	movff	?___ftadd+1,?___ftsub+1
  5843  002AD4  C08F  F09B         	movff	?___ftadd+2,?___ftsub+2
  5844  002AD8  0012               	return	
  5845  002ADA                     __end_of___ftsub:
  5846                           	opt stack 0
  5847                           tblptru	equ	0xFF8
  5848                           tblptrh	equ	0xFF7
  5849                           tblptrl	equ	0xFF6
  5850                           tablat	equ	0xFF5
  5851                           prodh	equ	0xFF4
  5852                           prodl	equ	0xFF3
  5853                           postinc0	equ	0xFEE
  5854                           wreg	equ	0xFE8
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function ___ftadd *****************
  5863 ;; Defined at:
  5864 ;;		line 86 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftadd.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  f1              3   45[BANK0 ] float 
  5867 ;;  f2              3   48[BANK0 ] float 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  exp1            1   56[BANK0 ] unsigned char 
  5870 ;;  exp2            1   55[BANK0 ] unsigned char 
  5871 ;;  sign            1   54[BANK0 ] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  3   45[BANK0 ] float 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5881 ;;      Params:         0       6       0       0       0       0       0
  5882 ;;      Locals:         0       3       0       0       0       0       0
  5883 ;;      Temps:          0       3       0       0       0       0       0
  5884 ;;      Totals:         0      12       0       0       0       0       0
  5885 ;;Total ram usage:       12 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    5
  5888 ;; This function calls:
  5889 ;;		___ftpack
  5890 ;; This function is called by:
  5891 ;;		_sprintf
  5892 ;;		___ftsub
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text16
  5897  001774                     __ptext16:
  5898                           	opt stack 0
  5899  001774                     ___ftadd:
  5900                           	opt stack 23
  5901                           
  5902                           ;incstack = 0
  5903  001774  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
  5904  001778  0100               	movlb	0	; () banked
  5905  00177A  6B94               	clrf	(??___ftadd+1)& (0+255),b
  5906  00177C  6B95               	clrf	(??___ftadd+2)& (0+255),b
  5907  00177E  0100               	movlb	0	; () banked
  5908  001780  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5909  001782  0100               	movlb	0	; () banked
  5910  001784  3793               	rlcf	??___ftadd& (0+255),f,b
  5911  001786  E301               	bnc	u1911
  5912  001788  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  5913  00178A                     u1911:
  5914  00178A  0100               	movlb	0	; () banked
  5915  00178C  5193               	movf	??___ftadd& (0+255),w,b
  5916  00178E  0100               	movlb	0	; () banked
  5917  001790  6F98               	movwf	___ftadd@exp1& (0+255),b
  5918  001792  C092  F093         	movff	___ftadd@f2+2,??___ftadd
  5919  001796  0100               	movlb	0	; () banked
  5920  001798  6B94               	clrf	(??___ftadd+1)& (0+255),b
  5921  00179A  6B95               	clrf	(??___ftadd+2)& (0+255),b
  5922  00179C  0100               	movlb	0	; () banked
  5923  00179E  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5924  0017A0  0100               	movlb	0	; () banked
  5925  0017A2  3793               	rlcf	??___ftadd& (0+255),f,b
  5926  0017A4  E301               	bnc	u1921
  5927  0017A6  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  5928  0017A8                     u1921:
  5929  0017A8  0100               	movlb	0	; () banked
  5930  0017AA  5193               	movf	??___ftadd& (0+255),w,b
  5931  0017AC  0100               	movlb	0	; () banked
  5932  0017AE  6F97               	movwf	___ftadd@exp2& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935  0017B0  0100               	movlb	0	; () banked
  5936  0017B2  5198               	movf	___ftadd@exp1& (0+255),w,b
  5937  0017B4  0100               	movlb	0	; () banked
  5938  0017B6  B4D8               	btfsc	status,2,c
  5939  0017B8  D011               	goto	l464
  5940                           
  5941                           ; BSR set to: 0
  5942  0017BA  0100               	movlb	0	; () banked
  5943  0017BC  5197               	movf	___ftadd@exp2& (0+255),w,b
  5944  0017BE  0100               	movlb	0	; () banked
  5945  0017C0  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  5946  0017C2  B0D8               	btfsc	status,0,c
  5947  0017C4  D012               	goto	l2080
  5948                           
  5949                           ; BSR set to: 0
  5950  0017C6  0100               	movlb	0	; () banked
  5951  0017C8  5198               	movf	___ftadd@exp1& (0+255),w,b
  5952  0017CA  0800               	sublw	0
  5953  0017CC  0100               	movlb	0	; () banked
  5954  0017CE  2597               	addwf	___ftadd@exp2& (0+255),w,b
  5955  0017D0  0100               	movlb	0	; () banked
  5956  0017D2  6F93               	movwf	??___ftadd& (0+255),b
  5957  0017D4  0E18               	movlw	24
  5958  0017D6  0100               	movlb	0	; () banked
  5959  0017D8  6593               	cpfsgt	??___ftadd& (0+255),b
  5960  0017DA  D007               	goto	l2080
  5961  0017DC                     l464:
  5962                           
  5963                           ; BSR set to: 0
  5964  0017DC  C090  F08D         	movff	___ftadd@f2,?___ftadd
  5965  0017E0  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
  5966  0017E4  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
  5967  0017E8  0012               	return	
  5968  0017EA                     l2080:
  5969                           
  5970                           ; BSR set to: 0
  5971  0017EA  0100               	movlb	0	; () banked
  5972  0017EC  5197               	movf	___ftadd@exp2& (0+255),w,b
  5973  0017EE  0100               	movlb	0	; () banked
  5974  0017F0  B4D8               	btfsc	status,2,c
  5975  0017F2  D011               	goto	l468
  5976                           
  5977                           ; BSR set to: 0
  5978  0017F4  0100               	movlb	0	; () banked
  5979  0017F6  5198               	movf	___ftadd@exp1& (0+255),w,b
  5980  0017F8  0100               	movlb	0	; () banked
  5981  0017FA  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  5982  0017FC  B0D8               	btfsc	status,0,c
  5983  0017FE  D012               	goto	l2086
  5984                           
  5985                           ; BSR set to: 0
  5986  001800  0100               	movlb	0	; () banked
  5987  001802  5197               	movf	___ftadd@exp2& (0+255),w,b
  5988  001804  0800               	sublw	0
  5989  001806  0100               	movlb	0	; () banked
  5990  001808  2598               	addwf	___ftadd@exp1& (0+255),w,b
  5991  00180A  0100               	movlb	0	; () banked
  5992  00180C  6F93               	movwf	??___ftadd& (0+255),b
  5993  00180E  0E18               	movlw	24
  5994  001810  0100               	movlb	0	; () banked
  5995  001812  6593               	cpfsgt	??___ftadd& (0+255),b
  5996  001814  D007               	goto	l2086
  5997  001816                     l468:
  5998                           
  5999                           ; BSR set to: 0
  6000  001816  C08D  F08D         	movff	___ftadd@f1,?___ftadd
  6001  00181A  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
  6002  00181E  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
  6003  001822  0012               	return	
  6004  001824                     l2086:
  6005                           
  6006                           ; BSR set to: 0
  6007  001824  0E06               	movlw	6
  6008  001826  0100               	movlb	0	; () banked
  6009  001828  6F96               	movwf	___ftadd@sign& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012  00182A  0100               	movlb	0	; () banked
  6013  00182C  AF8F               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6014  00182E  D002               	goto	l2092
  6015                           
  6016                           ; BSR set to: 0
  6017  001830  0100               	movlb	0	; () banked
  6018  001832  8F96               	bsf	___ftadd@sign& (0+255),7,b
  6019  001834                     l2092:
  6020                           
  6021                           ; BSR set to: 0
  6022  001834  0100               	movlb	0	; () banked
  6023  001836  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6024  001838  D002               	goto	l470
  6025                           
  6026                           ; BSR set to: 0
  6027  00183A  0100               	movlb	0	; () banked
  6028  00183C  8D96               	bsf	___ftadd@sign& (0+255),6,b
  6029  00183E                     l470:
  6030                           
  6031                           ; BSR set to: 0
  6032  00183E  0100               	movlb	0	; () banked
  6033  001840  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6034                           
  6035                           ; BSR set to: 0
  6036  001842  0EFF               	movlw	255
  6037  001844  0100               	movlb	0	; () banked
  6038  001846  178D               	andwf	___ftadd@f1& (0+255),f,b
  6039  001848  0EFF               	movlw	255
  6040  00184A  0100               	movlb	0	; () banked
  6041  00184C  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6042  00184E  0E00               	movlw	0
  6043  001850  0100               	movlb	0	; () banked
  6044  001852  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6045  001854  0100               	movlb	0	; () banked
  6046  001856  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6047                           
  6048                           ; BSR set to: 0
  6049  001858  0EFF               	movlw	255
  6050  00185A  0100               	movlb	0	; () banked
  6051  00185C  1790               	andwf	___ftadd@f2& (0+255),f,b
  6052  00185E  0EFF               	movlw	255
  6053  001860  0100               	movlb	0	; () banked
  6054  001862  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6055  001864  0E00               	movlw	0
  6056  001866  0100               	movlb	0	; () banked
  6057  001868  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6058                           
  6059                           ; BSR set to: 0
  6060  00186A  0100               	movlb	0	; () banked
  6061  00186C  5197               	movf	___ftadd@exp2& (0+255),w,b
  6062  00186E  0100               	movlb	0	; () banked
  6063  001870  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  6064  001872  B0D8               	btfsc	status,0,c
  6065  001874  D025               	goto	l2112
  6066  001876                     l2102:
  6067                           
  6068                           ; BSR set to: 0
  6069  001876  0100               	movlb	0	; () banked
  6070  001878  90D8               	bcf	status,0,c
  6071  00187A  3790               	rlcf	___ftadd@f2& (0+255),f,b
  6072  00187C  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6073  00187E  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6074  001880  0100               	movlb	0	; () banked
  6075  001882  0797               	decf	___ftadd@exp2& (0+255),f,b
  6076                           
  6077                           ; BSR set to: 0
  6078  001884  0100               	movlb	0	; () banked
  6079  001886  5198               	movf	___ftadd@exp1& (0+255),w,b
  6080  001888  0100               	movlb	0	; () banked
  6081  00188A  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  6082  00188C  B4D8               	btfsc	status,2,c
  6083  00188E  D011               	goto	l2110
  6084                           
  6085                           ; BSR set to: 0
  6086  001890  0100               	movlb	0	; () banked
  6087  001892  0796               	decf	___ftadd@sign& (0+255),f,b
  6088  001894  C096  F093         	movff	___ftadd@sign,??___ftadd
  6089  001898  0E07               	movlw	7
  6090  00189A  0100               	movlb	0	; () banked
  6091  00189C  1793               	andwf	??___ftadd& (0+255),f,b
  6092  00189E  B4D8               	btfsc	status,2,c
  6093  0018A0  D008               	goto	l2110
  6094  0018A2  D7E9               	goto	l2102
  6095  0018A4                     l2108:
  6096                           
  6097                           ; BSR set to: 0
  6098  0018A4  0100               	movlb	0	; () banked
  6099  0018A6  90D8               	bcf	status,0,c
  6100  0018A8  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6101  0018AA  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6102  0018AC  338D               	rrcf	___ftadd@f1& (0+255),f,b
  6103  0018AE  0100               	movlb	0	; () banked
  6104  0018B0  2B98               	incf	___ftadd@exp1& (0+255),f,b
  6105  0018B2                     l2110:
  6106                           
  6107                           ; BSR set to: 0
  6108  0018B2  0100               	movlb	0	; () banked
  6109  0018B4  5197               	movf	___ftadd@exp2& (0+255),w,b
  6110  0018B6  0100               	movlb	0	; () banked
  6111  0018B8  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  6112  0018BA  B4D8               	btfsc	status,2,c
  6113  0018BC  D02B               	goto	l479
  6114  0018BE  D7F2               	goto	l2108
  6115  0018C0                     l2112:
  6116                           
  6117                           ; BSR set to: 0
  6118  0018C0  0100               	movlb	0	; () banked
  6119  0018C2  5198               	movf	___ftadd@exp1& (0+255),w,b
  6120  0018C4  0100               	movlb	0	; () banked
  6121  0018C6  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  6122  0018C8  B0D8               	btfsc	status,0,c
  6123  0018CA  D024               	goto	l479
  6124  0018CC                     l2114:
  6125                           
  6126                           ; BSR set to: 0
  6127  0018CC  0100               	movlb	0	; () banked
  6128  0018CE  90D8               	bcf	status,0,c
  6129  0018D0  378D               	rlcf	___ftadd@f1& (0+255),f,b
  6130  0018D2  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6131  0018D4  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6132  0018D6  0100               	movlb	0	; () banked
  6133  0018D8  0798               	decf	___ftadd@exp1& (0+255),f,b
  6134                           
  6135                           ; BSR set to: 0
  6136  0018DA  0100               	movlb	0	; () banked
  6137  0018DC  5198               	movf	___ftadd@exp1& (0+255),w,b
  6138  0018DE  0100               	movlb	0	; () banked
  6139  0018E0  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  6140  0018E2  B4D8               	btfsc	status,2,c
  6141  0018E4  D011               	goto	l2122
  6142                           
  6143                           ; BSR set to: 0
  6144  0018E6  0100               	movlb	0	; () banked
  6145  0018E8  0796               	decf	___ftadd@sign& (0+255),f,b
  6146  0018EA  C096  F093         	movff	___ftadd@sign,??___ftadd
  6147  0018EE  0E07               	movlw	7
  6148  0018F0  0100               	movlb	0	; () banked
  6149  0018F2  1793               	andwf	??___ftadd& (0+255),f,b
  6150  0018F4  B4D8               	btfsc	status,2,c
  6151  0018F6  D008               	goto	l2122
  6152  0018F8  D7E9               	goto	l2114
  6153  0018FA                     l2120:
  6154                           
  6155                           ; BSR set to: 0
  6156  0018FA  0100               	movlb	0	; () banked
  6157  0018FC  90D8               	bcf	status,0,c
  6158  0018FE  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6159  001900  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6160  001902  3390               	rrcf	___ftadd@f2& (0+255),f,b
  6161  001904  0100               	movlb	0	; () banked
  6162  001906  2B97               	incf	___ftadd@exp2& (0+255),f,b
  6163  001908                     l2122:
  6164                           
  6165                           ; BSR set to: 0
  6166  001908  0100               	movlb	0	; () banked
  6167  00190A  5197               	movf	___ftadd@exp2& (0+255),w,b
  6168  00190C  0100               	movlb	0	; () banked
  6169  00190E  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  6170  001910  A4D8               	btfss	status,2,c
  6171  001912  D7F3               	goto	l2120
  6172  001914                     l479:
  6173                           
  6174                           ; BSR set to: 0
  6175  001914  0100               	movlb	0	; () banked
  6176  001916  AF96               	btfss	___ftadd@sign& (0+255),7,b
  6177  001918  D012               	goto	l488
  6178                           
  6179                           ; BSR set to: 0
  6180  00191A  0EFF               	movlw	255
  6181  00191C  0100               	movlb	0	; () banked
  6182  00191E  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
  6183  001920  0EFF               	movlw	255
  6184  001922  0100               	movlb	0	; () banked
  6185  001924  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6186  001926  0EFF               	movlw	255
  6187  001928  0100               	movlb	0	; () banked
  6188  00192A  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6189  00192C  0E01               	movlw	1
  6190  00192E  0100               	movlb	0	; () banked
  6191  001930  278D               	addwf	___ftadd@f1& (0+255),f,b
  6192  001932  0E00               	movlw	0
  6193  001934  0100               	movlb	0	; () banked
  6194  001936  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6195  001938  0E00               	movlw	0
  6196  00193A  0100               	movlb	0	; () banked
  6197  00193C  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6198  00193E                     l488:
  6199                           
  6200                           ; BSR set to: 0
  6201  00193E  0100               	movlb	0	; () banked
  6202  001940  AD96               	btfss	___ftadd@sign& (0+255),6,b
  6203  001942  D012               	goto	l2128
  6204                           
  6205                           ; BSR set to: 0
  6206  001944  0EFF               	movlw	255
  6207  001946  0100               	movlb	0	; () banked
  6208  001948  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  6209  00194A  0EFF               	movlw	255
  6210  00194C  0100               	movlb	0	; () banked
  6211  00194E  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6212  001950  0EFF               	movlw	255
  6213  001952  0100               	movlb	0	; () banked
  6214  001954  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6215  001956  0E01               	movlw	1
  6216  001958  0100               	movlb	0	; () banked
  6217  00195A  2790               	addwf	___ftadd@f2& (0+255),f,b
  6218  00195C  0E00               	movlw	0
  6219  00195E  0100               	movlb	0	; () banked
  6220  001960  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6221  001962  0E00               	movlw	0
  6222  001964  0100               	movlb	0	; () banked
  6223  001966  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6224  001968                     l2128:
  6225                           
  6226                           ; BSR set to: 0
  6227  001968  0E00               	movlw	0
  6228  00196A  0100               	movlb	0	; () banked
  6229  00196C  6F96               	movwf	___ftadd@sign& (0+255),b
  6230                           
  6231                           ; BSR set to: 0
  6232  00196E  0100               	movlb	0	; () banked
  6233  001970  518D               	movf	___ftadd@f1& (0+255),w,b
  6234  001972  0100               	movlb	0	; () banked
  6235  001974  2790               	addwf	___ftadd@f2& (0+255),f,b
  6236  001976  0100               	movlb	0	; () banked
  6237  001978  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
  6238  00197A  0100               	movlb	0	; () banked
  6239  00197C  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6240  00197E  0100               	movlb	0	; () banked
  6241  001980  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
  6242  001982  0100               	movlb	0	; () banked
  6243  001984  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6244                           
  6245                           ; BSR set to: 0
  6246  001986  0100               	movlb	0	; () banked
  6247  001988  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6248  00198A  D015               	goto	l2138
  6249                           
  6250                           ; BSR set to: 0
  6251  00198C  0EFF               	movlw	255
  6252  00198E  0100               	movlb	0	; () banked
  6253  001990  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  6254  001992  0EFF               	movlw	255
  6255  001994  0100               	movlb	0	; () banked
  6256  001996  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6257  001998  0EFF               	movlw	255
  6258  00199A  0100               	movlb	0	; () banked
  6259  00199C  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6260  00199E  0E01               	movlw	1
  6261  0019A0  0100               	movlb	0	; () banked
  6262  0019A2  2790               	addwf	___ftadd@f2& (0+255),f,b
  6263  0019A4  0E00               	movlw	0
  6264  0019A6  0100               	movlb	0	; () banked
  6265  0019A8  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6266  0019AA  0E00               	movlw	0
  6267  0019AC  0100               	movlb	0	; () banked
  6268  0019AE  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6269                           
  6270                           ; BSR set to: 0
  6271  0019B0  0E01               	movlw	1
  6272  0019B2  0100               	movlb	0	; () banked
  6273  0019B4  6F96               	movwf	___ftadd@sign& (0+255),b
  6274  0019B6                     l2138:
  6275                           
  6276                           ; BSR set to: 0
  6277  0019B6  C090  F060         	movff	___ftadd@f2,___ftpack@arg
  6278  0019BA  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  6279  0019BE  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  6280  0019C2  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
  6281  0019C6  C096  F064         	movff	___ftadd@sign,___ftpack@sign
  6282  0019CA  EC3D  F011         	call	___ftpack	;wreg free
  6283  0019CE  C060  F08D         	movff	?___ftpack,?___ftadd
  6284  0019D2  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
  6285  0019D6  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
  6286  0019DA  0012               	return	
  6287  0019DC                     __end_of___ftadd:
  6288                           	opt stack 0
  6289                           tblptru	equ	0xFF8
  6290                           tblptrh	equ	0xFF7
  6291                           tblptrl	equ	0xFF6
  6292                           tablat	equ	0xFF5
  6293                           prodh	equ	0xFF4
  6294                           prodl	equ	0xFF3
  6295                           postinc0	equ	0xFEE
  6296                           wreg	equ	0xFE8
  6297                           indf2	equ	0xFDF
  6298                           postinc2	equ	0xFDE
  6299                           postdec2	equ	0xFDD
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function ___ftpack *****************
  6305 ;; Defined at:
  6306 ;;		line 62 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\float.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  arg             3    0[BANK0 ] unsigned um
  6309 ;;  exp             1    3[BANK0 ] unsigned char 
  6310 ;;  sign            1    4[BANK0 ] unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  3    0[BANK0 ] float 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6322 ;;      Params:         0       5       0       0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0
  6324 ;;      Temps:          0       3       0       0       0       0       0
  6325 ;;      Totals:         0       8       0       0       0       0       0
  6326 ;;Total ram usage:        8 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; Hardware stack levels required when called:    4
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		___ftadd
  6333 ;;		___ftmul
  6334 ;;		___lltoft
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text17
  6339  00227A                     __ptext17:
  6340                           	opt stack 0
  6341  00227A                     ___ftpack:
  6342                           	opt stack 23
  6343                           
  6344                           ;incstack = 0
  6345  00227A  0100               	movlb	0	; () banked
  6346  00227C  5163               	movf	___ftpack@exp& (0+255),w,b
  6347  00227E  0100               	movlb	0	; () banked
  6348  002280  B4D8               	btfsc	status,2,c
  6349  002282  D008               	goto	l2024
  6350                           
  6351                           ; BSR set to: 0
  6352  002284  0100               	movlb	0	; () banked
  6353  002286  5160               	movf	___ftpack@arg& (0+255),w,b
  6354  002288  0100               	movlb	0	; () banked
  6355  00228A  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  6356  00228C  0100               	movlb	0	; () banked
  6357  00228E  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  6358  002290  A4D8               	btfss	status,2,c
  6359  002292  D011               	goto	l2030
  6360  002294                     l2024:
  6361                           
  6362                           ; BSR set to: 0
  6363  002294  0E00               	movlw	0
  6364  002296  0100               	movlb	0	; () banked
  6365  002298  6F60               	movwf	?___ftpack& (0+255),b
  6366  00229A  0E00               	movlw	0
  6367  00229C  0100               	movlb	0	; () banked
  6368  00229E  6F61               	movwf	(?___ftpack+1)& (0+255),b
  6369  0022A0  0E00               	movlw	0
  6370  0022A2  0100               	movlb	0	; () banked
  6371  0022A4  6F62               	movwf	(?___ftpack+2)& (0+255),b
  6372                           
  6373                           ; BSR set to: 0
  6374  0022A6  0012               	return	
  6375  0022A8                     l2028:
  6376                           
  6377                           ; BSR set to: 0
  6378  0022A8  0100               	movlb	0	; () banked
  6379  0022AA  2B63               	incf	___ftpack@exp& (0+255),f,b
  6380  0022AC  0100               	movlb	0	; () banked
  6381  0022AE  90D8               	bcf	status,0,c
  6382  0022B0  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6383  0022B2  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6384  0022B4  3360               	rrcf	___ftpack@arg& (0+255),f,b
  6385  0022B6                     l2030:
  6386                           
  6387                           ; BSR set to: 0
  6388  0022B6  0E00               	movlw	0
  6389  0022B8  0100               	movlb	0	; () banked
  6390  0022BA  1560               	andwf	___ftpack@arg& (0+255),w,b
  6391  0022BC  0100               	movlb	0	; () banked
  6392  0022BE  6F65               	movwf	??___ftpack& (0+255),b
  6393  0022C0  0E00               	movlw	0
  6394  0022C2  0100               	movlb	0	; () banked
  6395  0022C4  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6396  0022C6  0100               	movlb	0	; () banked
  6397  0022C8  6F66               	movwf	(??___ftpack+1)& (0+255),b
  6398  0022CA  0EFE               	movlw	254
  6399  0022CC  0100               	movlb	0	; () banked
  6400  0022CE  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6401  0022D0  0100               	movlb	0	; () banked
  6402  0022D2  6F67               	movwf	(??___ftpack+2)& (0+255),b
  6403  0022D4  0100               	movlb	0	; () banked
  6404  0022D6  5165               	movf	??___ftpack& (0+255),w,b
  6405  0022D8  0100               	movlb	0	; () banked
  6406  0022DA  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  6407  0022DC  0100               	movlb	0	; () banked
  6408  0022DE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  6409  0022E0  B4D8               	btfsc	status,2,c
  6410  0022E2  D011               	goto	l2036
  6411  0022E4  D7E1               	goto	l2028
  6412  0022E6                     l2032:
  6413                           
  6414                           ; BSR set to: 0
  6415  0022E6  0100               	movlb	0	; () banked
  6416  0022E8  2B63               	incf	___ftpack@exp& (0+255),f,b
  6417                           
  6418                           ; BSR set to: 0
  6419  0022EA  0E01               	movlw	1
  6420  0022EC  0100               	movlb	0	; () banked
  6421  0022EE  2760               	addwf	___ftpack@arg& (0+255),f,b
  6422  0022F0  0E00               	movlw	0
  6423  0022F2  0100               	movlb	0	; () banked
  6424  0022F4  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  6425  0022F6  0E00               	movlw	0
  6426  0022F8  0100               	movlb	0	; () banked
  6427  0022FA  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  6428  0022FC  0100               	movlb	0	; () banked
  6429  0022FE  90D8               	bcf	status,0,c
  6430  002300  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6431  002302  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6432  002304  3360               	rrcf	___ftpack@arg& (0+255),f,b
  6433  002306                     l2036:
  6434                           
  6435                           ; BSR set to: 0
  6436  002306  0E00               	movlw	0
  6437  002308  0100               	movlb	0	; () banked
  6438  00230A  1560               	andwf	___ftpack@arg& (0+255),w,b
  6439  00230C  0100               	movlb	0	; () banked
  6440  00230E  6F65               	movwf	??___ftpack& (0+255),b
  6441  002310  0E00               	movlw	0
  6442  002312  0100               	movlb	0	; () banked
  6443  002314  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6444  002316  0100               	movlb	0	; () banked
  6445  002318  6F66               	movwf	(??___ftpack+1)& (0+255),b
  6446  00231A  0EFF               	movlw	255
  6447  00231C  0100               	movlb	0	; () banked
  6448  00231E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6449  002320  0100               	movlb	0	; () banked
  6450  002322  6F67               	movwf	(??___ftpack+2)& (0+255),b
  6451  002324  0100               	movlb	0	; () banked
  6452  002326  5165               	movf	??___ftpack& (0+255),w,b
  6453  002328  0100               	movlb	0	; () banked
  6454  00232A  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  6455  00232C  0100               	movlb	0	; () banked
  6456  00232E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  6457  002330  B4D8               	btfsc	status,2,c
  6458  002332  D008               	goto	l2040
  6459  002334  D7D8               	goto	l2032
  6460  002336                     l2038:
  6461                           
  6462                           ; BSR set to: 0
  6463  002336  0100               	movlb	0	; () banked
  6464  002338  0763               	decf	___ftpack@exp& (0+255),f,b
  6465  00233A  0100               	movlb	0	; () banked
  6466  00233C  90D8               	bcf	status,0,c
  6467  00233E  3760               	rlcf	___ftpack@arg& (0+255),f,b
  6468  002340  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  6469  002342  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  6470  002344                     l2040:
  6471                           
  6472                           ; BSR set to: 0
  6473  002344  0100               	movlb	0	; () banked
  6474  002346  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  6475  002348  D004               	goto	l441
  6476                           
  6477                           ; BSR set to: 0
  6478  00234A  0E02               	movlw	2
  6479  00234C  0100               	movlb	0	; () banked
  6480  00234E  6163               	cpfslt	___ftpack@exp& (0+255),b
  6481  002350  D7F2               	goto	l2038
  6482  002352                     l441:
  6483                           
  6484                           ; BSR set to: 0
  6485  002352  0100               	movlb	0	; () banked
  6486  002354  B163               	btfsc	___ftpack@exp& (0+255),0,b
  6487  002356  D002               	goto	l2046
  6488                           
  6489                           ; BSR set to: 0
  6490  002358  0100               	movlb	0	; () banked
  6491  00235A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  6492  00235C                     l2046:
  6493                           
  6494                           ; BSR set to: 0
  6495  00235C  0100               	movlb	0	; () banked
  6496  00235E  90D8               	bcf	status,0,c
  6497  002360  3363               	rrcf	___ftpack@exp& (0+255),f,b
  6498  002362  0100               	movlb	0	; () banked
  6499  002364  5163               	movf	___ftpack@exp& (0+255),w,b
  6500  002366  0100               	movlb	0	; () banked
  6501  002368  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6502                           
  6503                           ; BSR set to: 0
  6504  00236A  0100               	movlb	0	; () banked
  6505  00236C  5164               	movf	___ftpack@sign& (0+255),w,b
  6506  00236E  0100               	movlb	0	; () banked
  6507  002370  B4D8               	btfsc	status,2,c
  6508  002372  D002               	goto	l2052
  6509                           
  6510                           ; BSR set to: 0
  6511  002374  0100               	movlb	0	; () banked
  6512  002376  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6513  002378                     l2052:
  6514                           
  6515                           ; BSR set to: 0
  6516  002378  C060  F060         	movff	___ftpack@arg,?___ftpack
  6517  00237C  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  6518  002380  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  6519  002384  0012               	return	
  6520  002386                     __end_of___ftpack:
  6521                           	opt stack 0
  6522                           tblptru	equ	0xFF8
  6523                           tblptrh	equ	0xFF7
  6524                           tblptrl	equ	0xFF6
  6525                           tablat	equ	0xFF5
  6526                           prodh	equ	0xFF4
  6527                           prodl	equ	0xFF3
  6528                           postinc0	equ	0xFEE
  6529                           wreg	equ	0xFE8
  6530                           indf2	equ	0xFDF
  6531                           postinc2	equ	0xFDE
  6532                           postdec2	equ	0xFDD
  6533                           fsr2h	equ	0xFDA
  6534                           fsr2l	equ	0xFD9
  6535                           status	equ	0xFD8
  6536                           
  6537 ;; *************** function ___ftneg *****************
  6538 ;; Defined at:
  6539 ;;		line 15 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftneg.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  f1              3    0[BANK0 ] float 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  3    0[BANK0 ] float 
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6553 ;;      Params:         0       3       0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0
  6556 ;;      Totals:         0       3       0       0       0       0       0
  6557 ;;Total ram usage:        3 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    4
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_sprintf
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text18
  6568  002B90                     __ptext18:
  6569                           	opt stack 0
  6570  002B90                     ___ftneg:
  6571                           	opt stack 25
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;incstack = 0
  6575  002B90  0100               	movlb	0	; () banked
  6576  002B92  5160               	movf	___ftneg@f1& (0+255),w,b
  6577  002B94  0100               	movlb	0	; () banked
  6578  002B96  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6579  002B98  0100               	movlb	0	; () banked
  6580  002B9A  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6581  002B9C  B4D8               	btfsc	status,2,c
  6582  002B9E  D009               	goto	l538
  6583                           
  6584                           ; BSR set to: 0
  6585  002BA0  0E00               	movlw	0
  6586  002BA2  0100               	movlb	0	; () banked
  6587  002BA4  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  6588  002BA6  0E00               	movlw	0
  6589  002BA8  0100               	movlb	0	; () banked
  6590  002BAA  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6591  002BAC  0E80               	movlw	128
  6592  002BAE  0100               	movlb	0	; () banked
  6593  002BB0  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6594  002BB2                     l538:
  6595                           
  6596                           ; BSR set to: 0
  6597  002BB2  C060  F060         	movff	___ftneg@f1,?___ftneg
  6598  002BB6  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  6599  002BBA  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  6600                           
  6601                           ; BSR set to: 0
  6602  002BBE  0012               	return		;funcret
  6603  002BC0                     __end_of___ftneg:
  6604                           	opt stack 0
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           postinc0	equ	0xFEE
  6612                           wreg	equ	0xFE8
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function ___ftge *****************
  6621 ;; Defined at:
  6622 ;;		line 4 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftge.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  ff1             3    0[BANK0 ] float 
  6625 ;;  ff2             3    3[BANK0 ] float 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;		None               void
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6637 ;;      Params:         0       6       0       0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0
  6639 ;;      Temps:          0       3       0       0       0       0       0
  6640 ;;      Totals:         0       9       0       0       0       0       0
  6641 ;;Total ram usage:        9 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    4
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_sprintf
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text19
  6652  002560                     __ptext19:
  6653                           	opt stack 0
  6654  002560                     ___ftge:
  6655                           	opt stack 25
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;incstack = 0
  6659  002560  0100               	movlb	0	; () banked
  6660  002562  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  6661  002564  D01D               	goto	l2606
  6662                           
  6663                           ; BSR set to: 0
  6664  002566  C060  F066         	movff	___ftge@ff1,??___ftge
  6665  00256A  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  6666  00256E  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  6667  002572  0100               	movlb	0	; () banked
  6668  002574  1F66               	comf	??___ftge& (0+255),f,b
  6669  002576  1F67               	comf	(??___ftge+1)& (0+255),f,b
  6670  002578  1F68               	comf	(??___ftge+2)& (0+255),f,b
  6671  00257A  2B66               	incf	??___ftge& (0+255),f,b
  6672  00257C  0E00               	movlw	0
  6673  00257E  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  6674  002580  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  6675  002582  0E00               	movlw	0
  6676  002584  0100               	movlb	0	; () banked
  6677  002586  2566               	addwf	??___ftge& (0+255),w,b
  6678  002588  0100               	movlb	0	; () banked
  6679  00258A  6F60               	movwf	___ftge@ff1& (0+255),b
  6680  00258C  0E00               	movlw	0
  6681  00258E  0100               	movlb	0	; () banked
  6682  002590  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  6683  002592  0100               	movlb	0	; () banked
  6684  002594  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  6685  002596  0E80               	movlw	128
  6686  002598  0100               	movlb	0	; () banked
  6687  00259A  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  6688  00259C  0100               	movlb	0	; () banked
  6689  00259E  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  6690  0025A0                     l2606:
  6691                           
  6692                           ; BSR set to: 0
  6693  0025A0  0100               	movlb	0	; () banked
  6694  0025A2  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  6695  0025A4  D01D               	goto	l2610
  6696                           
  6697                           ; BSR set to: 0
  6698  0025A6  C063  F066         	movff	___ftge@ff2,??___ftge
  6699  0025AA  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  6700  0025AE  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  6701  0025B2  0100               	movlb	0	; () banked
  6702  0025B4  1F66               	comf	??___ftge& (0+255),f,b
  6703  0025B6  1F67               	comf	(??___ftge+1)& (0+255),f,b
  6704  0025B8  1F68               	comf	(??___ftge+2)& (0+255),f,b
  6705  0025BA  2B66               	incf	??___ftge& (0+255),f,b
  6706  0025BC  0E00               	movlw	0
  6707  0025BE  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  6708  0025C0  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  6709  0025C2  0E00               	movlw	0
  6710  0025C4  0100               	movlb	0	; () banked
  6711  0025C6  2566               	addwf	??___ftge& (0+255),w,b
  6712  0025C8  0100               	movlb	0	; () banked
  6713  0025CA  6F63               	movwf	___ftge@ff2& (0+255),b
  6714  0025CC  0E00               	movlw	0
  6715  0025CE  0100               	movlb	0	; () banked
  6716  0025D0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  6717  0025D2  0100               	movlb	0	; () banked
  6718  0025D4  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  6719  0025D6  0E80               	movlw	128
  6720  0025D8  0100               	movlb	0	; () banked
  6721  0025DA  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  6722  0025DC  0100               	movlb	0	; () banked
  6723  0025DE  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  6724  0025E0                     l2610:
  6725                           
  6726                           ; BSR set to: 0
  6727  0025E0  0E00               	movlw	0
  6728  0025E2  0100               	movlb	0	; () banked
  6729  0025E4  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  6730  0025E6  0E00               	movlw	0
  6731  0025E8  0100               	movlb	0	; () banked
  6732  0025EA  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  6733  0025EC  0E80               	movlw	128
  6734  0025EE  0100               	movlb	0	; () banked
  6735  0025F0  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  6736                           
  6737                           ; BSR set to: 0
  6738  0025F2  0E00               	movlw	0
  6739  0025F4  0100               	movlb	0	; () banked
  6740  0025F6  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  6741  0025F8  0E00               	movlw	0
  6742  0025FA  0100               	movlb	0	; () banked
  6743  0025FC  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  6744  0025FE  0E80               	movlw	128
  6745  002600  0100               	movlb	0	; () banked
  6746  002602  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  6747  002604  0100               	movlb	0	; () banked
  6748  002606  5163               	movf	___ftge@ff2& (0+255),w,b
  6749  002608  0100               	movlb	0	; () banked
  6750  00260A  5D60               	subwf	___ftge@ff1& (0+255),w,b
  6751  00260C  0100               	movlb	0	; () banked
  6752  00260E  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  6753  002610  0100               	movlb	0	; () banked
  6754  002612  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  6755  002614  0100               	movlb	0	; () banked
  6756  002616  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  6757  002618  0100               	movlb	0	; () banked
  6758  00261A  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  6759  00261C  B0D8               	btfsc	status,0,c
  6760  00261E  D002               	goto	l2616
  6761                           
  6762                           ; BSR set to: 0
  6763  002620  90D8               	bcf	status,0,c
  6764  002622  0012               	return	
  6765  002624                     l2616:
  6766                           
  6767                           ; BSR set to: 0
  6768  002624  80D8               	bsf	status,0,c
  6769                           
  6770                           ; BSR set to: 0
  6771  002626  0012               	return	
  6772  002628                     __end_of___ftge:
  6773                           	opt stack 0
  6774                           tblptru	equ	0xFF8
  6775                           tblptrh	equ	0xFF7
  6776                           tblptrl	equ	0xFF6
  6777                           tablat	equ	0xFF5
  6778                           prodh	equ	0xFF4
  6779                           prodl	equ	0xFF3
  6780                           postinc0	equ	0xFEE
  6781                           wreg	equ	0xFE8
  6782                           indf2	equ	0xFDF
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           fsr2h	equ	0xFDA
  6786                           fsr2l	equ	0xFD9
  6787                           status	equ	0xFD8
  6788                           
  6789 ;; *************** function _init_timer *****************
  6790 ;; Defined at:
  6791 ;;		line 126 in file "main.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6805 ;;      Params:         0       0       0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0
  6808 ;;      Totals:         0       0       0       0       0       0       0
  6809 ;;Total ram usage:        0 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    4
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_main
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text20
  6820  002CEE                     __ptext20:
  6821                           	opt stack 0
  6822  002CEE                     _init_timer:
  6823                           	opt stack 26
  6824                           
  6825                           ;main.c: 127: INTCONbits.PEIE=1;
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;incstack = 0
  6829  002CEE  8CF2               	bsf	intcon,6,c	;volatile
  6830                           
  6831                           ;main.c: 128: INTCONbits.TMR0IE=1;
  6832  002CF0  8AF2               	bsf	intcon,5,c	;volatile
  6833                           
  6834                           ;main.c: 129: INTCONbits.TMR0IF=0;
  6835  002CF2  94F2               	bcf	intcon,2,c	;volatile
  6836                           
  6837                           ;main.c: 130: T0CONbits.TMR0ON=1;
  6838  002CF4  8ED5               	bsf	4053,7,c	;volatile
  6839                           
  6840                           ;main.c: 131: T0CONbits.T08BIT=1;
  6841  002CF6  8CD5               	bsf	4053,6,c	;volatile
  6842                           
  6843                           ;main.c: 132: T0CONbits.T0CS=0;
  6844  002CF8  9AD5               	bcf	4053,5,c	;volatile
  6845                           
  6846                           ;main.c: 134: TMR0L=0;
  6847  002CFA  0E00               	movlw	0
  6848  002CFC  6ED6               	movwf	4054,c	;volatile
  6849                           
  6850                           ;main.c: 136: INTCONbits.GIE=1;
  6851  002CFE  8EF2               	bsf	intcon,7,c	;volatile
  6852  002D00  0012               	return		;funcret
  6853  002D02                     __end_of_init_timer:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           prodh	equ	0xFF4
  6860                           prodl	equ	0xFF3
  6861                           intcon	equ	0xFF2
  6862                           postinc0	equ	0xFEE
  6863                           wreg	equ	0xFE8
  6864                           indf2	equ	0xFDF
  6865                           postinc2	equ	0xFDE
  6866                           postdec2	equ	0xFDD
  6867                           fsr2h	equ	0xFDA
  6868                           fsr2l	equ	0xFD9
  6869                           status	equ	0xFD8
  6870                           
  6871 ;; *************** function _init_interruption *****************
  6872 ;; Defined at:
  6873 ;;		line 109 in file "main.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		None
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6887 ;;      Params:         0       0       0       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0       0       0
  6890 ;;      Totals:         0       0       0       0       0       0       0
  6891 ;;Total ram usage:        0 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    4
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_main
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text21
  6902  002D02                     __ptext21:
  6903                           	opt stack 0
  6904  002D02                     _init_interruption:
  6905                           	opt stack 26
  6906                           
  6907                           ;main.c: 110: INTCON2bits.RBPU=0;
  6908                           
  6909                           ;incstack = 0
  6910  002D02  9EF1               	bcf	intcon2,7,c	;volatile
  6911                           
  6912                           ;main.c: 112: INTCONbits.INT0IF=0;
  6913  002D04  92F2               	bcf	intcon,1,c	;volatile
  6914                           
  6915                           ;main.c: 113: INTCONbits.INT0IE=1;
  6916  002D06  88F2               	bsf	intcon,4,c	;volatile
  6917                           
  6918                           ;main.c: 115: INTCON3bits.INT1IF=0;
  6919  002D08  90F0               	bcf	intcon3,0,c	;volatile
  6920                           
  6921                           ;main.c: 116: INTCON3bits.INT1IE=1;
  6922  002D0A  86F0               	bsf	intcon3,3,c	;volatile
  6923                           
  6924                           ;main.c: 118: INTCON2bits.INTEDG0=0;
  6925  002D0C  9CF1               	bcf	intcon2,6,c	;volatile
  6926                           
  6927                           ;main.c: 119: INTCON2bits.INTEDG1=0;
  6928  002D0E  9AF1               	bcf	intcon2,5,c	;volatile
  6929                           
  6930                           ;main.c: 121: INTCONbits.GIE=1;
  6931  002D10  8EF2               	bsf	intcon,7,c	;volatile
  6932  002D12  0012               	return		;funcret
  6933  002D14                     __end_of_init_interruption:
  6934                           	opt stack 0
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           intcon3	equ	0xFF0
  6944                           postinc0	equ	0xFEE
  6945                           wreg	equ	0xFE8
  6946                           indf2	equ	0xFDF
  6947                           postinc2	equ	0xFDE
  6948                           postdec2	equ	0xFDD
  6949                           fsr2h	equ	0xFDA
  6950                           fsr2l	equ	0xFD9
  6951                           status	equ	0xFD8
  6952                           
  6953 ;; *************** function _Print_Mensagem_Lcd *****************
  6954 ;; Defined at:
  6955 ;;		line 191 in file "main.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  mensagem        2    3[BANK0 ] PTR unsigned char 
  6958 ;;		 -> main@buf(16), 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  i               2    5[BANK0 ] int 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6970 ;;      Params:         0       2       0       0       0       0       0
  6971 ;;      Locals:         0       2       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0
  6973 ;;      Totals:         0       4       0       0       0       0       0
  6974 ;;Total ram usage:        4 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    6
  6977 ;; This function calls:
  6978 ;;		_Envia_Dado_Lcd
  6979 ;; This function is called by:
  6980 ;;		_main
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text22
  6985  002ADA                     __ptext22:
  6986                           	opt stack 0
  6987  002ADA                     _Print_Mensagem_Lcd:
  6988                           	opt stack 24
  6989                           
  6990                           ;main.c: 193: int i=0;
  6991                           
  6992                           ;incstack = 0
  6993  002ADA  0E00               	movlw	0
  6994  002ADC  0100               	movlb	0	; () banked
  6995  002ADE  6F66               	movwf	(Print_Mensagem_Lcd@i+1)& (0+255),b
  6996  002AE0  0E00               	movlw	0
  6997  002AE2  6F65               	movwf	Print_Mensagem_Lcd@i& (0+255),b
  6998                           
  6999                           ;main.c: 194: while (mensagem[i]) {
  7000  002AE4  D010               	goto	l3026
  7001  002AE6                     l3022:
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;main.c: 195: Envia_Dado_Lcd (mensagem[i]);
  7005  002AE6  0100               	movlb	0	; () banked
  7006  002AE8  5165               	movf	Print_Mensagem_Lcd@i& (0+255),w,b
  7007  002AEA  0100               	movlb	0	; () banked
  7008  002AEC  2563               	addwf	Print_Mensagem_Lcd@mensagem& (0+255),w,b
  7009  002AEE  6ED9               	movwf	fsr2l,c
  7010  002AF0  0100               	movlb	0	; () banked
  7011  002AF2  5166               	movf	(Print_Mensagem_Lcd@i+1)& (0+255),w,b
  7012  002AF4  0100               	movlb	0	; () banked
  7013  002AF6  2164               	addwfc	(Print_Mensagem_Lcd@mensagem+1)& (0+255),w,b
  7014  002AF8  6EDA               	movwf	fsr2h,c
  7015  002AFA  50DF               	movf	indf2,w,c
  7016  002AFC  ECF5  F015         	call	_Envia_Dado_Lcd
  7017                           
  7018                           ;main.c: 196: i++;
  7019  002B00  0100               	movlb	0	; () banked
  7020  002B02  4B65               	infsnz	Print_Mensagem_Lcd@i& (0+255),f,b
  7021  002B04  2B66               	incf	(Print_Mensagem_Lcd@i+1)& (0+255),f,b
  7022  002B06                     l3026:
  7023                           
  7024                           ; BSR set to: 0
  7025  002B06  0100               	movlb	0	; () banked
  7026  002B08  5165               	movf	Print_Mensagem_Lcd@i& (0+255),w,b
  7027  002B0A  0100               	movlb	0	; () banked
  7028  002B0C  2563               	addwf	Print_Mensagem_Lcd@mensagem& (0+255),w,b
  7029  002B0E  6ED9               	movwf	fsr2l,c
  7030  002B10  0100               	movlb	0	; () banked
  7031  002B12  5166               	movf	(Print_Mensagem_Lcd@i+1)& (0+255),w,b
  7032  002B14  0100               	movlb	0	; () banked
  7033  002B16  2164               	addwfc	(Print_Mensagem_Lcd@mensagem+1)& (0+255),w,b
  7034  002B18  6EDA               	movwf	fsr2h,c
  7035  002B1A  50DF               	movf	indf2,w,c
  7036  002B1C  B4D8               	btfsc	status,2,c
  7037  002B1E  0012               	return	
  7038  002B20  D7E2               	goto	l3022
  7039  002B22                     __end_of_Print_Mensagem_Lcd:
  7040                           	opt stack 0
  7041                           tblptru	equ	0xFF8
  7042                           tblptrh	equ	0xFF7
  7043                           tblptrl	equ	0xFF6
  7044                           tablat	equ	0xFF5
  7045                           prodh	equ	0xFF4
  7046                           prodl	equ	0xFF3
  7047                           intcon	equ	0xFF2
  7048                           intcon2	equ	0xFF1
  7049                           intcon3	equ	0xFF0
  7050                           postinc0	equ	0xFEE
  7051                           wreg	equ	0xFE8
  7052                           indf2	equ	0xFDF
  7053                           postinc2	equ	0xFDE
  7054                           postdec2	equ	0xFDD
  7055                           fsr2h	equ	0xFDA
  7056                           fsr2l	equ	0xFD9
  7057                           status	equ	0xFD8
  7058                           
  7059 ;; *************** function _Envia_Dado_Lcd *****************
  7060 ;; Defined at:
  7061 ;;		line 162 in file "main.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  dado            1    wreg     unsigned char 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  dado            1    2[BANK0 ] unsigned char 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7075 ;;      Params:         0       0       0       0       0       0       0
  7076 ;;      Locals:         0       1       0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0       0
  7078 ;;      Totals:         0       1       0       0       0       0       0
  7079 ;;Total ram usage:        1 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    5
  7082 ;; This function calls:
  7083 ;;		_Delay_LCD
  7084 ;; This function is called by:
  7085 ;;		_Print_Mensagem_Lcd
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text23
  7090  002BEA                     __ptext23:
  7091                           	opt stack 0
  7092  002BEA                     _Envia_Dado_Lcd:
  7093                           	opt stack 24
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;incstack = 0
  7097                           ;Envia_Dado_Lcd@dado stored from wreg
  7098  002BEA  0100               	movlb	0	; () banked
  7099  002BEC  6F62               	movwf	Envia_Dado_Lcd@dado& (0+255),b
  7100                           
  7101                           ;main.c: 164: PORTCbits.RC1=0;
  7102  002BEE  9282               	bcf	3970,1,c	;volatile
  7103                           
  7104                           ;main.c: 165: PORTCbits.RC0=1;
  7105  002BF0  8082               	bsf	3970,0,c	;volatile
  7106                           
  7107                           ;main.c: 167: PORTCbits.RC1=1;
  7108  002BF2  8282               	bsf	3970,1,c	;volatile
  7109                           
  7110                           ;main.c: 168: PORTD=dado;
  7111  002BF4  C062  FF83         	movff	Envia_Dado_Lcd@dado,3971	;volatile
  7112                           
  7113                           ;main.c: 169: PORTCbits.RC1=0;
  7114  002BF8  9282               	bcf	3970,1,c	;volatile
  7115                           
  7116                           ;main.c: 171: PORTCbits.RC1=1;
  7117  002BFA  8282               	bsf	3970,1,c	;volatile
  7118                           
  7119                           ;main.c: 172: dado=dado<<4;
  7120  002BFC  0100               	movlb	0	; () banked
  7121  002BFE  3962               	swapf	Envia_Dado_Lcd@dado& (0+255),w,b
  7122  002C00  0BF0               	andlw	240
  7123  002C02  0100               	movlb	0	; () banked
  7124  002C04  6F62               	movwf	Envia_Dado_Lcd@dado& (0+255),b
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;main.c: 173: PORTD=dado;
  7128  002C06  C062  FF83         	movff	Envia_Dado_Lcd@dado,3971	;volatile
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;main.c: 174: PORTCbits.RC1=0;
  7132  002C0A  9282               	bcf	3970,1,c	;volatile
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;main.c: 176: Delay_LCD();
  7136  002C0C  EC1D  F016         	call	_Delay_LCD	;wreg free
  7137  002C10  0012               	return		;funcret
  7138  002C12                     __end_of_Envia_Dado_Lcd:
  7139                           	opt stack 0
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           intcon	equ	0xFF2
  7147                           intcon2	equ	0xFF1
  7148                           intcon3	equ	0xFF0
  7149                           postinc0	equ	0xFEE
  7150                           wreg	equ	0xFE8
  7151                           indf2	equ	0xFDF
  7152                           postinc2	equ	0xFDE
  7153                           postdec2	equ	0xFDD
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _Inicializa_Lcd *****************
  7159 ;; Defined at:
  7160 ;;		line 179 in file "main.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7174 ;;      Params:         0       0       0       0       0       0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0
  7177 ;;      Totals:         0       0       0       0       0       0       0
  7178 ;;Total ram usage:        0 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    6
  7181 ;; This function calls:
  7182 ;;		_Delay_inicializacao_LCD
  7183 ;;		_Envia_Comando_Lcd
  7184 ;; This function is called by:
  7185 ;;		_main
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text24
  7190  002CD0                     __ptext24:
  7191                           	opt stack 0
  7192  002CD0                     _Inicializa_Lcd:
  7193                           	opt stack 24
  7194                           
  7195                           ;main.c: 181: Delay_inicializacao_LCD ();
  7196                           
  7197                           ;incstack = 0
  7198  002CD0  EC31  F016         	call	_Delay_inicializacao_LCD	;wreg free
  7199                           
  7200                           ;main.c: 182: Envia_Comando_Lcd (0b000000010);
  7201  002CD4  0E02               	movlw	2
  7202  002CD6  EC09  F016         	call	_Envia_Comando_Lcd
  7203                           
  7204                           ;main.c: 183: Envia_Comando_Lcd (0b001001000);
  7205  002CDA  0E48               	movlw	72
  7206  002CDC  EC09  F016         	call	_Envia_Comando_Lcd
  7207                           
  7208                           ;main.c: 184: Envia_Comando_Lcd (0b000001110);
  7209  002CE0  0E0E               	movlw	14
  7210  002CE2  EC09  F016         	call	_Envia_Comando_Lcd
  7211                           
  7212                           ;main.c: 185: Envia_Comando_Lcd (0b000000001);
  7213  002CE6  0E01               	movlw	1
  7214  002CE8  EC09  F016         	call	_Envia_Comando_Lcd
  7215  002CEC  0012               	return		;funcret
  7216  002CEE                     __end_of_Inicializa_Lcd:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           intcon2	equ	0xFF1
  7226                           intcon3	equ	0xFF0
  7227                           postinc0	equ	0xFEE
  7228                           wreg	equ	0xFE8
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           postdec2	equ	0xFDD
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _Envia_Comando_Lcd *****************
  7237 ;; Defined at:
  7238 ;;		line 145 in file "main.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  comando         1    wreg     unsigned char 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  comando         1    2[BANK0 ] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2, status,0, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7252 ;;      Params:         0       0       0       0       0       0       0
  7253 ;;      Locals:         0       1       0       0       0       0       0
  7254 ;;      Temps:          0       0       0       0       0       0       0
  7255 ;;      Totals:         0       1       0       0       0       0       0
  7256 ;;Total ram usage:        1 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:    5
  7259 ;; This function calls:
  7260 ;;		_Delay_LCD
  7261 ;; This function is called by:
  7262 ;;		_main
  7263 ;;		_Inicializa_Lcd
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text25
  7268  002C12                     __ptext25:
  7269                           	opt stack 0
  7270  002C12                     _Envia_Comando_Lcd:
  7271                           	opt stack 24
  7272                           
  7273                           ;incstack = 0
  7274                           ;Envia_Comando_Lcd@comando stored from wreg
  7275  002C12  0100               	movlb	0	; () banked
  7276  002C14  6F62               	movwf	Envia_Comando_Lcd@comando& (0+255),b
  7277                           
  7278                           ;main.c: 147: PORTCbits.RC1=0;
  7279  002C16  9282               	bcf	3970,1,c	;volatile
  7280                           
  7281                           ;main.c: 148: PORTCbits.RC0=0;
  7282  002C18  9082               	bcf	3970,0,c	;volatile
  7283                           
  7284                           ;main.c: 150: PORTCbits.RC1=1;
  7285  002C1A  8282               	bsf	3970,1,c	;volatile
  7286                           
  7287                           ;main.c: 151: PORTD=comando;
  7288  002C1C  C062  FF83         	movff	Envia_Comando_Lcd@comando,3971	;volatile
  7289                           
  7290                           ;main.c: 152: PORTCbits.RC1=0;
  7291  002C20  9282               	bcf	3970,1,c	;volatile
  7292                           
  7293                           ;main.c: 154: PORTCbits.RC1=1;
  7294  002C22  8282               	bsf	3970,1,c	;volatile
  7295                           
  7296                           ;main.c: 155: comando = comando<<4;
  7297  002C24  0100               	movlb	0	; () banked
  7298  002C26  3962               	swapf	Envia_Comando_Lcd@comando& (0+255),w,b
  7299  002C28  0BF0               	andlw	240
  7300  002C2A  0100               	movlb	0	; () banked
  7301  002C2C  6F62               	movwf	Envia_Comando_Lcd@comando& (0+255),b
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;main.c: 156: PORTD = comando;
  7305  002C2E  C062  FF83         	movff	Envia_Comando_Lcd@comando,3971	;volatile
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;main.c: 157: PORTCbits.RC1=0;
  7309  002C32  9282               	bcf	3970,1,c	;volatile
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;main.c: 159: Delay_LCD();
  7313  002C34  EC1D  F016         	call	_Delay_LCD	;wreg free
  7314  002C38  0012               	return		;funcret
  7315  002C3A                     __end_of_Envia_Comando_Lcd:
  7316                           	opt stack 0
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           intcon2	equ	0xFF1
  7325                           intcon3	equ	0xFF0
  7326                           postinc0	equ	0xFEE
  7327                           wreg	equ	0xFE8
  7328                           indf2	equ	0xFDF
  7329                           postinc2	equ	0xFDE
  7330                           postdec2	equ	0xFDD
  7331                           fsr2h	equ	0xFDA
  7332                           fsr2l	equ	0xFD9
  7333                           status	equ	0xFD8
  7334                           
  7335 ;; *************** function _Delay_LCD *****************
  7336 ;; Defined at:
  7337 ;;		line 139 in file "main.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  i               2    0[BANK0 ] int 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7351 ;;      Params:         0       0       0       0       0       0       0
  7352 ;;      Locals:         0       2       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0
  7354 ;;      Totals:         0       2       0       0       0       0       0
  7355 ;;Total ram usage:        2 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    4
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_Envia_Comando_Lcd
  7362 ;;		_Envia_Dado_Lcd
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text26
  7367  002C3A                     __ptext26:
  7368                           	opt stack 0
  7369  002C3A                     _Delay_LCD:
  7370                           	opt stack 24
  7371                           
  7372                           ;main.c: 141: int i;
  7373                           ;main.c: 142: for (i=0;i<400;i++){}
  7374                           
  7375                           ;incstack = 0
  7376  002C3A  0E00               	movlw	0
  7377  002C3C  0100               	movlb	0	; () banked
  7378  002C3E  6F61               	movwf	(Delay_LCD@i+1)& (0+255),b
  7379  002C40  0E00               	movlw	0
  7380  002C42  6F60               	movwf	Delay_LCD@i& (0+255),b
  7381  002C44                     l2058:
  7382                           
  7383                           ; BSR set to: 0
  7384  002C44  0100               	movlb	0	; () banked
  7385  002C46  BF61               	btfsc	(Delay_LCD@i+1)& (0+255),7,b
  7386  002C48  D008               	goto	l2062
  7387  002C4A  0E90               	movlw	144
  7388  002C4C  0100               	movlb	0	; () banked
  7389  002C4E  5D60               	subwf	Delay_LCD@i& (0+255),w,b
  7390  002C50  0E01               	movlw	1
  7391  002C52  0100               	movlb	0	; () banked
  7392  002C54  5961               	subwfb	(Delay_LCD@i+1)& (0+255),w,b
  7393  002C56  B0D8               	btfsc	status,0,c
  7394  002C58  0012               	return	
  7395  002C5A                     l2062:
  7396                           
  7397                           ; BSR set to: 0
  7398  002C5A  0100               	movlb	0	; () banked
  7399  002C5C  4B60               	infsnz	Delay_LCD@i& (0+255),f,b
  7400  002C5E  2B61               	incf	(Delay_LCD@i+1)& (0+255),f,b
  7401  002C60  D7F1               	goto	l2058
  7402  002C62                     __end_of_Delay_LCD:
  7403                           	opt stack 0
  7404                           tblptru	equ	0xFF8
  7405                           tblptrh	equ	0xFF7
  7406                           tblptrl	equ	0xFF6
  7407                           tablat	equ	0xFF5
  7408                           prodh	equ	0xFF4
  7409                           prodl	equ	0xFF3
  7410                           intcon	equ	0xFF2
  7411                           intcon2	equ	0xFF1
  7412                           intcon3	equ	0xFF0
  7413                           postinc0	equ	0xFEE
  7414                           wreg	equ	0xFE8
  7415                           indf2	equ	0xFDF
  7416                           postinc2	equ	0xFDE
  7417                           postdec2	equ	0xFDD
  7418                           fsr2h	equ	0xFDA
  7419                           fsr2l	equ	0xFD9
  7420                           status	equ	0xFD8
  7421                           
  7422 ;; *************** function _Delay_inicializacao_LCD *****************
  7423 ;; Defined at:
  7424 ;;		line 200 in file "main.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  i               2    0[BANK0 ] int 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7438 ;;      Params:         0       0       0       0       0       0       0
  7439 ;;      Locals:         0       2       0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0
  7441 ;;      Totals:         0       2       0       0       0       0       0
  7442 ;;Total ram usage:        2 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    4
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_Inicializa_Lcd
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text27
  7453  002C62                     __ptext27:
  7454                           	opt stack 0
  7455  002C62                     _Delay_inicializacao_LCD:
  7456                           	opt stack 25
  7457                           
  7458                           ;main.c: 202: int i;
  7459                           ;main.c: 203: for (i=0;i<4000;i++) {}
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;incstack = 0
  7463  002C62  0E00               	movlw	0
  7464  002C64  0100               	movlb	0	; () banked
  7465  002C66  6F61               	movwf	(Delay_inicializacao_LCD@i+1)& (0+255),b
  7466  002C68  0E00               	movlw	0
  7467  002C6A  6F60               	movwf	Delay_inicializacao_LCD@i& (0+255),b
  7468  002C6C                     l2340:
  7469                           
  7470                           ; BSR set to: 0
  7471  002C6C  0100               	movlb	0	; () banked
  7472  002C6E  BF61               	btfsc	(Delay_inicializacao_LCD@i+1)& (0+255),7,b
  7473  002C70  D008               	goto	l2344
  7474  002C72  0EA0               	movlw	160
  7475  002C74  0100               	movlb	0	; () banked
  7476  002C76  5D60               	subwf	Delay_inicializacao_LCD@i& (0+255),w,b
  7477  002C78  0E0F               	movlw	15
  7478  002C7A  0100               	movlb	0	; () banked
  7479  002C7C  5961               	subwfb	(Delay_inicializacao_LCD@i+1)& (0+255),w,b
  7480  002C7E  B0D8               	btfsc	status,0,c
  7481  002C80  0012               	return	
  7482  002C82                     l2344:
  7483                           
  7484                           ; BSR set to: 0
  7485  002C82  0100               	movlb	0	; () banked
  7486  002C84  4B60               	infsnz	Delay_inicializacao_LCD@i& (0+255),f,b
  7487  002C86  2B61               	incf	(Delay_inicializacao_LCD@i+1)& (0+255),f,b
  7488  002C88  D7F1               	goto	l2340
  7489  002C8A                     __end_of_Delay_inicializacao_LCD:
  7490                           	opt stack 0
  7491                           tblptru	equ	0xFF8
  7492                           tblptrh	equ	0xFF7
  7493                           tblptrl	equ	0xFF6
  7494                           tablat	equ	0xFF5
  7495                           prodh	equ	0xFF4
  7496                           prodl	equ	0xFF3
  7497                           intcon	equ	0xFF2
  7498                           intcon2	equ	0xFF1
  7499                           intcon3	equ	0xFF0
  7500                           postinc0	equ	0xFEE
  7501                           wreg	equ	0xFE8
  7502                           indf2	equ	0xFDF
  7503                           postinc2	equ	0xFDE
  7504                           postdec2	equ	0xFDD
  7505                           fsr2h	equ	0xFDA
  7506                           fsr2l	equ	0xFD9
  7507                           status	equ	0xFD8
  7508                           
  7509 ;; *************** function _ISR *****************
  7510 ;; Defined at:
  7511 ;;		line 34 in file "main.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7525 ;;      Params:         0       0       0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0
  7527 ;;      Temps:         14       0       0       0       0       0       0
  7528 ;;      Totals:        14       0       0       0       0       0       0
  7529 ;;Total ram usage:       14 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    3
  7532 ;; This function calls:
  7533 ;;		___ftdiv
  7534 ;;		_calculate_speed
  7535 ;;		i2___ftadd
  7536 ;;		i2___wmul
  7537 ;; This function is called by:
  7538 ;;		Interrupt level 2
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	intcode
  7543  000008                     __pintcode:
  7544                           	opt stack 0
  7545  000008                     _ISR:
  7546                           	opt stack 23
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;incstack = 0
  7550  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7551  00000A  CFFA F037          	movff	pclath,??_ISR
  7552  00000E  CFFB F038          	movff	pclatu,??_ISR+1
  7553  000012  CFE9 F039          	movff	fsr0l,??_ISR+2
  7554  000016  CFEA F03A          	movff	fsr0h,??_ISR+3
  7555  00001A  CFE1 F03B          	movff	fsr1l,??_ISR+4
  7556  00001E  CFE2 F03C          	movff	fsr1h,??_ISR+5
  7557  000022  CFD9 F03D          	movff	fsr2l,??_ISR+6
  7558  000026  CFDA F03E          	movff	fsr2h,??_ISR+7
  7559  00002A  CFF3 F03F          	movff	prodl,??_ISR+8
  7560  00002E  CFF4 F040          	movff	prodh,??_ISR+9
  7561  000032  CFF6 F041          	movff	tblptrl,??_ISR+10
  7562  000036  CFF7 F042          	movff	tblptrh,??_ISR+11
  7563  00003A  CFF8 F043          	movff	tblptru,??_ISR+12
  7564  00003E  CFF5 F044          	movff	tablat,??_ISR+13
  7565                           
  7566                           ;main.c: 35: if(INTCONbits.INT0IF==1){
  7567  000042  A2F2               	btfss	intcon,1,c	;volatile
  7568  000044  D003               	goto	i2l3110
  7569                           
  7570                           ;main.c: 36: INTCONbits.INT0IF=0;
  7571  000046  92F2               	bcf	intcon,1,c	;volatile
  7572                           
  7573                           ;main.c: 37: RPM_count++;
  7574  000048  4A4D               	infsnz	_RPM_count,f,c
  7575  00004A  2A4E               	incf	_RPM_count+1,f,c
  7576  00004C                     i2l3110:
  7577                           
  7578                           ;main.c: 39: }
  7579                           ;main.c: 41: if(INTCON3bits.INT1IF==1){
  7580  00004C  A0F0               	btfss	intcon3,0,c	;volatile
  7581  00004E  D003               	goto	i2l3116
  7582                           
  7583                           ;main.c: 42: INTCON3bits.INT1IF=0;
  7584  000050  90F0               	bcf	intcon3,0,c	;volatile
  7585                           
  7586                           ;main.c: 43: SPEED_count++;
  7587  000052  4A4B               	infsnz	_SPEED_count,f,c
  7588  000054  2A4C               	incf	_SPEED_count+1,f,c
  7589  000056                     i2l3116:
  7590                           
  7591                           ;main.c: 44: }
  7592                           ;main.c: 46: if(INTCONbits.TMR0IF==1){
  7593  000056  A4F2               	btfss	intcon,2,c	;volatile
  7594  000058  D005               	goto	i2l3124
  7595                           
  7596                           ;main.c: 47: Timer0_count++;
  7597  00005A  4A4F               	infsnz	_Timer0_count,f,c
  7598  00005C  2A50               	incf	_Timer0_count+1,f,c
  7599                           
  7600                           ;main.c: 48: INTCONbits.TMR0IF=0;
  7601  00005E  94F2               	bcf	intcon,2,c	;volatile
  7602                           
  7603                           ;main.c: 49: TMR0L=0;
  7604  000060  0E00               	movlw	0
  7605  000062  6ED6               	movwf	4054,c	;volatile
  7606  000064                     i2l3124:
  7607                           
  7608                           ;main.c: 50: }
  7609                           ;main.c: 52: if(Timer0_count>3333){
  7610  000064  BE50               	btfsc	_Timer0_count+1,7,c
  7611  000066  D04E               	goto	i2l57
  7612  000068  0E06               	movlw	6
  7613  00006A  5C4F               	subwf	_Timer0_count,w,c
  7614  00006C  0E0D               	movlw	13
  7615  00006E  5850               	subwfb	_Timer0_count+1,w,c
  7616  000070  A0D8               	btfss	status,0,c
  7617  000072  D048               	goto	i2l57
  7618                           
  7619                           ;main.c: 53: Timer0_count=0;
  7620  000074  0E00               	movlw	0
  7621  000076  6E50               	movwf	_Timer0_count+1,c
  7622  000078  0E00               	movlw	0
  7623  00007A  6E4F               	movwf	_Timer0_count,c
  7624                           
  7625                           ;main.c: 55: RPM_output=RPM_count*60;
  7626  00007C  C04D  F001         	movff	_RPM_count,i2___wmul@multiplier
  7627  000080  C04E  F002         	movff	_RPM_count+1,i2___wmul@multiplier+1
  7628  000084  0E00               	movlw	0
  7629  000086  6E04               	movwf	i2___wmul@multiplicand+1,c
  7630  000088  0E3C               	movlw	60
  7631  00008A  6E03               	movwf	i2___wmul@multiplicand,c
  7632  00008C  EC45  F016         	call	i2___wmul	;wreg free
  7633  000090  C001  F0D5         	movff	?i2___wmul,_RPM_output
  7634  000094  C002  F0D6         	movff	?i2___wmul+1,_RPM_output+1
  7635                           
  7636                           ;main.c: 56: speed=calculate_speed(SPEED_count);
  7637  000098  C04B  F02B         	movff	_SPEED_count,calculate_speed@count
  7638  00009C  C04C  F02C         	movff	_SPEED_count+1,calculate_speed@count+1
  7639  0000A0  ECC6  F014         	call	_calculate_speed	;wreg free
  7640  0000A4  C02B  F048         	movff	?_calculate_speed,_speed
  7641  0000A8  C02C  F049         	movff	?_calculate_speed+1,_speed+1
  7642  0000AC  C02D  F04A         	movff	?_calculate_speed+2,_speed+2
  7643                           
  7644                           ;main.c: 57: mileage=mileage+speed/3.6;
  7645  0000B0  0E66               	movlw	102
  7646  0000B2  6E1F               	movwf	___ftdiv@f2,c
  7647  0000B4  0E66               	movlw	102
  7648  0000B6  6E20               	movwf	___ftdiv@f2+1,c
  7649  0000B8  0E40               	movlw	64
  7650  0000BA  6E21               	movwf	___ftdiv@f2+2,c
  7651  0000BC  C048  F01C         	movff	_speed,___ftdiv@f1
  7652  0000C0  C049  F01D         	movff	_speed+1,___ftdiv@f1+1
  7653  0000C4  C04A  F01E         	movff	_speed+2,___ftdiv@f1+2
  7654  0000C8  EC3D  F012         	call	___ftdiv	;wreg free
  7655  0000CC  C01C  F02B         	movff	?___ftdiv,i2___ftadd@f1
  7656  0000D0  C01D  F02C         	movff	?___ftdiv+1,i2___ftadd@f1+1
  7657  0000D4  C01E  F02D         	movff	?___ftdiv+2,i2___ftadd@f1+2
  7658  0000D8  C045  F02E         	movff	_mileage,i2___ftadd@f2
  7659  0000DC  C046  F02F         	movff	_mileage+1,i2___ftadd@f2+1
  7660  0000E0  C047  F030         	movff	_mileage+2,i2___ftadd@f2+2
  7661  0000E4  ECEE  F00C         	call	i2___ftadd	;wreg free
  7662  0000E8  C02B  F045         	movff	?i2___ftadd,_mileage
  7663  0000EC  C02C  F046         	movff	?i2___ftadd+1,_mileage+1
  7664  0000F0  C02D  F047         	movff	?i2___ftadd+2,_mileage+2
  7665                           
  7666                           ;main.c: 59: RPM_count=0;
  7667  0000F4  0E00               	movlw	0
  7668  0000F6  6E4E               	movwf	_RPM_count+1,c
  7669  0000F8  0E00               	movlw	0
  7670  0000FA  6E4D               	movwf	_RPM_count,c
  7671                           
  7672                           ;main.c: 60: SPEED_count=0;
  7673  0000FC  0E00               	movlw	0
  7674  0000FE  6E4C               	movwf	_SPEED_count+1,c
  7675  000100  0E00               	movlw	0
  7676  000102  6E4B               	movwf	_SPEED_count,c
  7677  000104                     i2l57:
  7678  000104  C044  FFF5         	movff	??_ISR+13,tablat
  7679  000108  C043  FFF8         	movff	??_ISR+12,tblptru
  7680  00010C  C042  FFF7         	movff	??_ISR+11,tblptrh
  7681  000110  C041  FFF6         	movff	??_ISR+10,tblptrl
  7682  000114  C040  FFF4         	movff	??_ISR+9,prodh
  7683  000118  C03F  FFF3         	movff	??_ISR+8,prodl
  7684  00011C  C03E  FFDA         	movff	??_ISR+7,fsr2h
  7685  000120  C03D  FFD9         	movff	??_ISR+6,fsr2l
  7686  000124  C03C  FFE2         	movff	??_ISR+5,fsr1h
  7687  000128  C03B  FFE1         	movff	??_ISR+4,fsr1l
  7688  00012C  C03A  FFEA         	movff	??_ISR+3,fsr0h
  7689  000130  C039  FFE9         	movff	??_ISR+2,fsr0l
  7690  000134  C038  FFFB         	movff	??_ISR+1,pclatu
  7691  000138  C037  FFFA         	movff	??_ISR,pclath
  7692  00013C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7693  00013E  0011               	retfie		f
  7694  000140                     __end_of_ISR:
  7695                           	opt stack 0
  7696                           pclatu	equ	0xFFB
  7697                           pclath	equ	0xFFA
  7698                           tblptru	equ	0xFF8
  7699                           tblptrh	equ	0xFF7
  7700                           tblptrl	equ	0xFF6
  7701                           tablat	equ	0xFF5
  7702                           prodh	equ	0xFF4
  7703                           prodl	equ	0xFF3
  7704                           intcon	equ	0xFF2
  7705                           intcon2	equ	0xFF1
  7706                           intcon3	equ	0xFF0
  7707                           postinc0	equ	0xFEE
  7708                           fsr0h	equ	0xFEA
  7709                           fsr0l	equ	0xFE9
  7710                           wreg	equ	0xFE8
  7711                           fsr1h	equ	0xFE2
  7712                           fsr1l	equ	0xFE1
  7713                           indf2	equ	0xFDF
  7714                           postinc2	equ	0xFDE
  7715                           postdec2	equ	0xFDD
  7716                           fsr2h	equ	0xFDA
  7717                           fsr2l	equ	0xFD9
  7718                           status	equ	0xFD8
  7719                           
  7720 ;; *************** function i2___wmul *****************
  7721 ;; Defined at:
  7722 ;;		line 15 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\Umul16.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  multiplier      2    0[COMRAM] unsigned int 
  7725 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  __wmul          2    4[COMRAM] unsigned int 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  2    0[COMRAM] unsigned int 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0, prodl, prodh
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7737 ;;      Params:         4       0       0       0       0       0       0
  7738 ;;      Locals:         2       0       0       0       0       0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0
  7740 ;;      Totals:         6       0       0       0       0       0       0
  7741 ;;Total ram usage:        6 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_ISR
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text29
  7751  002C8A                     __ptext29:
  7752                           	opt stack 0
  7753  002C8A                     i2___wmul:
  7754                           	opt stack 25
  7755                           
  7756                           ;incstack = 0
  7757  002C8A  5001               	movf	i2___wmul@multiplier,w,c
  7758  002C8C  0203               	mulwf	i2___wmul@multiplicand,c
  7759  002C8E  CFF3 F005          	movff	prodl,i2___wmul@product
  7760  002C92  CFF4 F006          	movff	prodh,i2___wmul@product+1
  7761  002C96  5001               	movf	i2___wmul@multiplier,w,c
  7762  002C98  0204               	mulwf	i2___wmul@multiplicand+1,c
  7763  002C9A  50F3               	movf	prodl,w,c
  7764  002C9C  2606               	addwf	i2___wmul@product+1,f,c
  7765  002C9E  5002               	movf	i2___wmul@multiplier+1,w,c
  7766  002CA0  0203               	mulwf	i2___wmul@multiplicand,c
  7767  002CA2  50F3               	movf	prodl,w,c
  7768  002CA4  2606               	addwf	i2___wmul@product+1,f,c
  7769  002CA6  C005  F001         	movff	i2___wmul@product,?i2___wmul
  7770  002CAA  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  7771  002CAE  0012               	return	
  7772  002CB0                     __end_ofi2___wmul:
  7773                           	opt stack 0
  7774                           pclatu	equ	0xFFB
  7775                           pclath	equ	0xFFA
  7776                           tblptru	equ	0xFF8
  7777                           tblptrh	equ	0xFF7
  7778                           tblptrl	equ	0xFF6
  7779                           tablat	equ	0xFF5
  7780                           prodh	equ	0xFF4
  7781                           prodl	equ	0xFF3
  7782                           intcon	equ	0xFF2
  7783                           intcon2	equ	0xFF1
  7784                           intcon3	equ	0xFF0
  7785                           postinc0	equ	0xFEE
  7786                           fsr0h	equ	0xFEA
  7787                           fsr0l	equ	0xFE9
  7788                           wreg	equ	0xFE8
  7789                           fsr1h	equ	0xFE2
  7790                           fsr1l	equ	0xFE1
  7791                           indf2	equ	0xFDF
  7792                           postinc2	equ	0xFDE
  7793                           postdec2	equ	0xFDD
  7794                           fsr2h	equ	0xFDA
  7795                           fsr2l	equ	0xFD9
  7796                           status	equ	0xFD8
  7797                           
  7798 ;; *************** function i2___ftadd *****************
  7799 ;; Defined at:
  7800 ;;		line 86 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftadd.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  f1              3   42[COMRAM] float 
  7803 ;;  f2              3   45[COMRAM] float 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  __ftadd         1   53[COMRAM] unsigned char 
  7806 ;;  __ftadd         1   52[COMRAM] unsigned char 
  7807 ;;  __ftadd         1   51[COMRAM] unsigned char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  3   42[COMRAM] float 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2, status,0, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7817 ;;      Params:         6       0       0       0       0       0       0
  7818 ;;      Locals:         3       0       0       0       0       0       0
  7819 ;;      Temps:          3       0       0       0       0       0       0
  7820 ;;      Totals:        12       0       0       0       0       0       0
  7821 ;;Total ram usage:       12 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    1
  7824 ;; This function calls:
  7825 ;;		i2___ftpack
  7826 ;; This function is called by:
  7827 ;;		_ISR
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text30
  7832  0019DC                     __ptext30:
  7833                           	opt stack 0
  7834  0019DC                     i2___ftadd:
  7835                           	opt stack 24
  7836                           
  7837                           ;incstack = 0
  7838  0019DC  C02D  F031         	movff	i2___ftadd@f1+2,??i2___ftadd
  7839  0019E0  6A32               	clrf	(??i2___ftadd+1)& (0+255),c
  7840  0019E2  6A33               	clrf	(??i2___ftadd+2)& (0+255),c
  7841  0019E4  342C               	rlcf	i2___ftadd@f1+1,w,c
  7842  0019E6  3631               	rlcf	??i2___ftadd& (0+255),f,c
  7843  0019E8  E301               	bnc	u336_41
  7844  0019EA  8032               	bsf	(??i2___ftadd+1)& (0+255),0,c
  7845  0019EC                     u336_41:
  7846  0019EC  5031               	movf	??i2___ftadd,w,c
  7847  0019EE  6E36               	movwf	i2___ftadd@exp1,c
  7848  0019F0  C030  F031         	movff	i2___ftadd@f2+2,??i2___ftadd
  7849  0019F4  6A32               	clrf	(??i2___ftadd+1)& (0+255),c
  7850  0019F6  6A33               	clrf	(??i2___ftadd+2)& (0+255),c
  7851  0019F8  342F               	rlcf	i2___ftadd@f2+1,w,c
  7852  0019FA  3631               	rlcf	??i2___ftadd& (0+255),f,c
  7853  0019FC  E301               	bnc	u337_41
  7854  0019FE  8032               	bsf	(??i2___ftadd+1)& (0+255),0,c
  7855  001A00                     u337_41:
  7856  001A00  5031               	movf	??i2___ftadd,w,c
  7857  001A02  6E35               	movwf	i2___ftadd@exp2,c
  7858  001A04  5036               	movf	i2___ftadd@exp1,w,c
  7859  001A06  B4D8               	btfsc	status,2,c
  7860  001A08  D00B               	goto	i2l464
  7861  001A0A  5035               	movf	i2___ftadd@exp2,w,c
  7862  001A0C  5C36               	subwf	i2___ftadd@exp1,w,c
  7863  001A0E  B0D8               	btfsc	status,0,c
  7864  001A10  D00E               	goto	i2l3042
  7865  001A12  5036               	movf	i2___ftadd@exp1,w,c
  7866  001A14  0800               	sublw	0
  7867  001A16  2435               	addwf	i2___ftadd@exp2,w,c
  7868  001A18  6E31               	movwf	??i2___ftadd& (0+255),c
  7869  001A1A  0E18               	movlw	24
  7870  001A1C  6431               	cpfsgt	??i2___ftadd,c
  7871  001A1E  D007               	goto	i2l3042
  7872  001A20                     i2l464:
  7873  001A20  C02E  F02B         	movff	i2___ftadd@f2,?i2___ftadd
  7874  001A24  C02F  F02C         	movff	i2___ftadd@f2+1,?i2___ftadd+1
  7875  001A28  C030  F02D         	movff	i2___ftadd@f2+2,?i2___ftadd+2
  7876  001A2C  0012               	return	
  7877  001A2E                     i2l3042:
  7878  001A2E  5035               	movf	i2___ftadd@exp2,w,c
  7879  001A30  B4D8               	btfsc	status,2,c
  7880  001A32  D00B               	goto	i2l468
  7881  001A34  5036               	movf	i2___ftadd@exp1,w,c
  7882  001A36  5C35               	subwf	i2___ftadd@exp2,w,c
  7883  001A38  B0D8               	btfsc	status,0,c
  7884  001A3A  D00E               	goto	i2l3048
  7885  001A3C  5035               	movf	i2___ftadd@exp2,w,c
  7886  001A3E  0800               	sublw	0
  7887  001A40  2436               	addwf	i2___ftadd@exp1,w,c
  7888  001A42  6E31               	movwf	??i2___ftadd& (0+255),c
  7889  001A44  0E18               	movlw	24
  7890  001A46  6431               	cpfsgt	??i2___ftadd,c
  7891  001A48  D007               	goto	i2l3048
  7892  001A4A                     i2l468:
  7893  001A4A  C02B  F02B         	movff	i2___ftadd@f1,?i2___ftadd
  7894  001A4E  C02C  F02C         	movff	i2___ftadd@f1+1,?i2___ftadd+1
  7895  001A52  C02D  F02D         	movff	i2___ftadd@f1+2,?i2___ftadd+2
  7896  001A56  0012               	return	
  7897  001A58                     i2l3048:
  7898  001A58  0E06               	movlw	6
  7899  001A5A  6E34               	movwf	i2___ftadd@sign,c
  7900  001A5C  BE2D               	btfsc	i2___ftadd@f1+2,7,c
  7901  001A5E  8E34               	bsf	i2___ftadd@sign,7,c
  7902  001A60  BE30               	btfsc	i2___ftadd@f2+2,7,c
  7903  001A62  8C34               	bsf	i2___ftadd@sign,6,c
  7904  001A64  8E2C               	bsf	i2___ftadd@f1+1,7,c
  7905  001A66  0EFF               	movlw	255
  7906  001A68  162B               	andwf	i2___ftadd@f1,f,c
  7907  001A6A  0EFF               	movlw	255
  7908  001A6C  162C               	andwf	i2___ftadd@f1+1,f,c
  7909  001A6E  0E00               	movlw	0
  7910  001A70  162D               	andwf	i2___ftadd@f1+2,f,c
  7911  001A72  8E2F               	bsf	i2___ftadd@f2+1,7,c
  7912  001A74  0EFF               	movlw	255
  7913  001A76  162E               	andwf	i2___ftadd@f2,f,c
  7914  001A78  0EFF               	movlw	255
  7915  001A7A  162F               	andwf	i2___ftadd@f2+1,f,c
  7916  001A7C  0E00               	movlw	0
  7917  001A7E  1630               	andwf	i2___ftadd@f2+2,f,c
  7918  001A80  5035               	movf	i2___ftadd@exp2,w,c
  7919  001A82  5C36               	subwf	i2___ftadd@exp1,w,c
  7920  001A84  B0D8               	btfsc	status,0,c
  7921  001A86  D01B               	goto	i2l3074
  7922  001A88                     i2l3064:
  7923  001A88  90D8               	bcf	status,0,c
  7924  001A8A  362E               	rlcf	i2___ftadd@f2,f,c
  7925  001A8C  362F               	rlcf	i2___ftadd@f2+1,f,c
  7926  001A8E  3630               	rlcf	i2___ftadd@f2+2,f,c
  7927  001A90  0635               	decf	i2___ftadd@exp2,f,c
  7928  001A92  5036               	movf	i2___ftadd@exp1,w,c
  7929  001A94  1835               	xorwf	i2___ftadd@exp2,w,c
  7930  001A96  B4D8               	btfsc	status,2,c
  7931  001A98  D00D               	goto	i2l3072
  7932  001A9A  0634               	decf	i2___ftadd@sign,f,c
  7933  001A9C  C034  F031         	movff	i2___ftadd@sign,??i2___ftadd
  7934  001AA0  0E07               	movlw	7
  7935  001AA2  1631               	andwf	??i2___ftadd,f,c
  7936  001AA4  B4D8               	btfsc	status,2,c
  7937  001AA6  D006               	goto	i2l3072
  7938  001AA8  D7EF               	goto	i2l3064
  7939  001AAA                     i2l3070:
  7940  001AAA  90D8               	bcf	status,0,c
  7941  001AAC  322D               	rrcf	i2___ftadd@f1+2,f,c
  7942  001AAE  322C               	rrcf	i2___ftadd@f1+1,f,c
  7943  001AB0  322B               	rrcf	i2___ftadd@f1,f,c
  7944  001AB2  2A36               	incf	i2___ftadd@exp1,f,c
  7945  001AB4                     i2l3072:
  7946  001AB4  5035               	movf	i2___ftadd@exp2,w,c
  7947  001AB6  1836               	xorwf	i2___ftadd@exp1,w,c
  7948  001AB8  B4D8               	btfsc	status,2,c
  7949  001ABA  D01F               	goto	i2l479
  7950  001ABC  D7F6               	goto	i2l3070
  7951  001ABE                     i2l3074:
  7952  001ABE  5036               	movf	i2___ftadd@exp1,w,c
  7953  001AC0  5C35               	subwf	i2___ftadd@exp2,w,c
  7954  001AC2  B0D8               	btfsc	status,0,c
  7955  001AC4  D01A               	goto	i2l479
  7956  001AC6                     i2l3076:
  7957  001AC6  90D8               	bcf	status,0,c
  7958  001AC8  362B               	rlcf	i2___ftadd@f1,f,c
  7959  001ACA  362C               	rlcf	i2___ftadd@f1+1,f,c
  7960  001ACC  362D               	rlcf	i2___ftadd@f1+2,f,c
  7961  001ACE  0636               	decf	i2___ftadd@exp1,f,c
  7962  001AD0  5036               	movf	i2___ftadd@exp1,w,c
  7963  001AD2  1835               	xorwf	i2___ftadd@exp2,w,c
  7964  001AD4  B4D8               	btfsc	status,2,c
  7965  001AD6  D00D               	goto	i2l3084
  7966  001AD8  0634               	decf	i2___ftadd@sign,f,c
  7967  001ADA  C034  F031         	movff	i2___ftadd@sign,??i2___ftadd
  7968  001ADE  0E07               	movlw	7
  7969  001AE0  1631               	andwf	??i2___ftadd,f,c
  7970  001AE2  B4D8               	btfsc	status,2,c
  7971  001AE4  D006               	goto	i2l3084
  7972  001AE6  D7EF               	goto	i2l3076
  7973  001AE8                     i2l3082:
  7974  001AE8  90D8               	bcf	status,0,c
  7975  001AEA  3230               	rrcf	i2___ftadd@f2+2,f,c
  7976  001AEC  322F               	rrcf	i2___ftadd@f2+1,f,c
  7977  001AEE  322E               	rrcf	i2___ftadd@f2,f,c
  7978  001AF0  2A35               	incf	i2___ftadd@exp2,f,c
  7979  001AF2                     i2l3084:
  7980  001AF2  5035               	movf	i2___ftadd@exp2,w,c
  7981  001AF4  1836               	xorwf	i2___ftadd@exp1,w,c
  7982  001AF6  A4D8               	btfss	status,2,c
  7983  001AF8  D7F7               	goto	i2l3082
  7984  001AFA                     i2l479:
  7985  001AFA  AE34               	btfss	i2___ftadd@sign,7,c
  7986  001AFC  D00C               	goto	i2l488
  7987  001AFE  0EFF               	movlw	255
  7988  001B00  1A2B               	xorwf	i2___ftadd@f1,f,c
  7989  001B02  0EFF               	movlw	255
  7990  001B04  1A2C               	xorwf	i2___ftadd@f1+1,f,c
  7991  001B06  0EFF               	movlw	255
  7992  001B08  1A2D               	xorwf	i2___ftadd@f1+2,f,c
  7993  001B0A  0E01               	movlw	1
  7994  001B0C  262B               	addwf	i2___ftadd@f1,f,c
  7995  001B0E  0E00               	movlw	0
  7996  001B10  222C               	addwfc	i2___ftadd@f1+1,f,c
  7997  001B12  0E00               	movlw	0
  7998  001B14  222D               	addwfc	i2___ftadd@f1+2,f,c
  7999  001B16                     i2l488:
  8000  001B16  AC34               	btfss	i2___ftadd@sign,6,c
  8001  001B18  D00C               	goto	i2l3090
  8002  001B1A  0EFF               	movlw	255
  8003  001B1C  1A2E               	xorwf	i2___ftadd@f2,f,c
  8004  001B1E  0EFF               	movlw	255
  8005  001B20  1A2F               	xorwf	i2___ftadd@f2+1,f,c
  8006  001B22  0EFF               	movlw	255
  8007  001B24  1A30               	xorwf	i2___ftadd@f2+2,f,c
  8008  001B26  0E01               	movlw	1
  8009  001B28  262E               	addwf	i2___ftadd@f2,f,c
  8010  001B2A  0E00               	movlw	0
  8011  001B2C  222F               	addwfc	i2___ftadd@f2+1,f,c
  8012  001B2E  0E00               	movlw	0
  8013  001B30  2230               	addwfc	i2___ftadd@f2+2,f,c
  8014  001B32                     i2l3090:
  8015  001B32  0E00               	movlw	0
  8016  001B34  6E34               	movwf	i2___ftadd@sign,c
  8017  001B36  502B               	movf	i2___ftadd@f1,w,c
  8018  001B38  262E               	addwf	i2___ftadd@f2,f,c
  8019  001B3A  502C               	movf	i2___ftadd@f1+1,w,c
  8020  001B3C  222F               	addwfc	i2___ftadd@f2+1,f,c
  8021  001B3E  502D               	movf	i2___ftadd@f1+2,w,c
  8022  001B40  2230               	addwfc	i2___ftadd@f2+2,f,c
  8023  001B42  AE30               	btfss	i2___ftadd@f2+2,7,c
  8024  001B44  D00E               	goto	i2l3100
  8025  001B46  0EFF               	movlw	255
  8026  001B48  1A2E               	xorwf	i2___ftadd@f2,f,c
  8027  001B4A  0EFF               	movlw	255
  8028  001B4C  1A2F               	xorwf	i2___ftadd@f2+1,f,c
  8029  001B4E  0EFF               	movlw	255
  8030  001B50  1A30               	xorwf	i2___ftadd@f2+2,f,c
  8031  001B52  0E01               	movlw	1
  8032  001B54  262E               	addwf	i2___ftadd@f2,f,c
  8033  001B56  0E00               	movlw	0
  8034  001B58  222F               	addwfc	i2___ftadd@f2+1,f,c
  8035  001B5A  0E00               	movlw	0
  8036  001B5C  2230               	addwfc	i2___ftadd@f2+2,f,c
  8037  001B5E  0E01               	movlw	1
  8038  001B60  6E34               	movwf	i2___ftadd@sign,c
  8039  001B62                     i2l3100:
  8040  001B62  C02E  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
  8041  001B66  C02F  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
  8042  001B6A  C030  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
  8043  001B6E  C036  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
  8044  001B72  C034  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
  8045  001B76  ECD1  F013         	call	i2___ftpack	;wreg free
  8046  001B7A  C001  F02B         	movff	?i2___ftpack,?i2___ftadd
  8047  001B7E  C002  F02C         	movff	?i2___ftpack+1,?i2___ftadd+1
  8048  001B82  C003  F02D         	movff	?i2___ftpack+2,?i2___ftadd+2
  8049  001B86  0012               	return	
  8050  001B88                     __end_ofi2___ftadd:
  8051                           	opt stack 0
  8052                           pclatu	equ	0xFFB
  8053                           pclath	equ	0xFFA
  8054                           tblptru	equ	0xFF8
  8055                           tblptrh	equ	0xFF7
  8056                           tblptrl	equ	0xFF6
  8057                           tablat	equ	0xFF5
  8058                           prodh	equ	0xFF4
  8059                           prodl	equ	0xFF3
  8060                           intcon	equ	0xFF2
  8061                           intcon2	equ	0xFF1
  8062                           intcon3	equ	0xFF0
  8063                           postinc0	equ	0xFEE
  8064                           fsr0h	equ	0xFEA
  8065                           fsr0l	equ	0xFE9
  8066                           wreg	equ	0xFE8
  8067                           fsr1h	equ	0xFE2
  8068                           fsr1l	equ	0xFE1
  8069                           indf2	equ	0xFDF
  8070                           postinc2	equ	0xFDE
  8071                           postdec2	equ	0xFDD
  8072                           fsr2h	equ	0xFDA
  8073                           fsr2l	equ	0xFD9
  8074                           status	equ	0xFD8
  8075                           
  8076 ;; *************** function _calculate_speed *****************
  8077 ;; Defined at:
  8078 ;;		line 104 in file "main.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  count           2   42[COMRAM] int 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  real_speed      3   45[COMRAM] float 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  3   42[COMRAM] float 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0, cstack
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8092 ;;      Params:         3       0       0       0       0       0       0
  8093 ;;      Locals:         6       0       0       0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0
  8095 ;;      Totals:         9       0       0       0       0       0       0
  8096 ;;Total ram usage:        9 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    2
  8099 ;; This function calls:
  8100 ;;		___awtoft
  8101 ;;		___ftdiv
  8102 ;;		i2___ftmul
  8103 ;; This function is called by:
  8104 ;;		_ISR
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text31
  8109  00298C                     __ptext31:
  8110                           	opt stack 0
  8111  00298C                     _calculate_speed:
  8112                           	opt stack 23
  8113                           
  8114                           ;main.c: 105: float real_speed=((count*2.5)/10)*3.6;
  8115                           
  8116                           ;incstack = 0
  8117  00298C  0E00               	movlw	0
  8118  00298E  6E1F               	movwf	___ftdiv@f2,c
  8119  002990  0E20               	movlw	32
  8120  002992  6E20               	movwf	___ftdiv@f2+1,c
  8121  002994  0E41               	movlw	65
  8122  002996  6E21               	movwf	___ftdiv@f2+2,c
  8123  002998  0E00               	movlw	0
  8124  00299A  6E10               	movwf	i2___ftmul@f2,c
  8125  00299C  0E20               	movlw	32
  8126  00299E  6E11               	movwf	i2___ftmul@f2+1,c
  8127  0029A0  0E40               	movlw	64
  8128  0029A2  6E12               	movwf	i2___ftmul@f2+2,c
  8129  0029A4  C02B  F009         	movff	calculate_speed@count,___awtoft@c
  8130  0029A8  C02C  F00A         	movff	calculate_speed@count+1,___awtoft@c+1
  8131  0029AC  EC91  F015         	call	___awtoft	;wreg free
  8132  0029B0  C009  F00D         	movff	?___awtoft,i2___ftmul@f1
  8133  0029B4  C00A  F00E         	movff	?___awtoft+1,i2___ftmul@f1+1
  8134  0029B8  C00B  F00F         	movff	?___awtoft+2,i2___ftmul@f1+2
  8135  0029BC  ECC3  F011         	call	i2___ftmul	;wreg free
  8136  0029C0  C00D  F01C         	movff	?i2___ftmul,___ftdiv@f1
  8137  0029C4  C00E  F01D         	movff	?i2___ftmul+1,___ftdiv@f1+1
  8138  0029C8  C00F  F01E         	movff	?i2___ftmul+2,___ftdiv@f1+2
  8139  0029CC  EC3D  F012         	call	___ftdiv	;wreg free
  8140  0029D0  C01C  F031         	movff	?___ftdiv,_calculate_speed$1020
  8141  0029D4  C01D  F032         	movff	?___ftdiv+1,_calculate_speed$1020+1
  8142  0029D8  C01E  F033         	movff	?___ftdiv+2,_calculate_speed$1020+2
  8143                           
  8144                           ;main.c: 105: float real_speed=((count*2.5)/10)*3.6;
  8145  0029DC  C031  F00D         	movff	_calculate_speed$1020,i2___ftmul@f1
  8146  0029E0  C032  F00E         	movff	_calculate_speed$1020+1,i2___ftmul@f1+1
  8147  0029E4  C033  F00F         	movff	_calculate_speed$1020+2,i2___ftmul@f1+2
  8148  0029E8  0E66               	movlw	102
  8149  0029EA  6E10               	movwf	i2___ftmul@f2,c
  8150  0029EC  0E66               	movlw	102
  8151  0029EE  6E11               	movwf	i2___ftmul@f2+1,c
  8152  0029F0  0E40               	movlw	64
  8153  0029F2  6E12               	movwf	i2___ftmul@f2+2,c
  8154  0029F4  ECC3  F011         	call	i2___ftmul	;wreg free
  8155  0029F8  C00D  F02E         	movff	?i2___ftmul,calculate_speed@real_speed
  8156  0029FC  C00E  F02F         	movff	?i2___ftmul+1,calculate_speed@real_speed+1
  8157  002A00  C00F  F030         	movff	?i2___ftmul+2,calculate_speed@real_speed+2
  8158                           
  8159                           ;main.c: 106: return real_speed;
  8160  002A04  C02E  F02B         	movff	calculate_speed@real_speed,?_calculate_speed
  8161  002A08  C02F  F02C         	movff	calculate_speed@real_speed+1,?_calculate_speed+1
  8162  002A0C  C030  F02D         	movff	calculate_speed@real_speed+2,?_calculate_speed+2
  8163  002A10  0012               	return	
  8164  002A12                     __end_of_calculate_speed:
  8165                           	opt stack 0
  8166                           pclatu	equ	0xFFB
  8167                           pclath	equ	0xFFA
  8168                           tblptru	equ	0xFF8
  8169                           tblptrh	equ	0xFF7
  8170                           tblptrl	equ	0xFF6
  8171                           tablat	equ	0xFF5
  8172                           prodh	equ	0xFF4
  8173                           prodl	equ	0xFF3
  8174                           intcon	equ	0xFF2
  8175                           intcon2	equ	0xFF1
  8176                           intcon3	equ	0xFF0
  8177                           postinc0	equ	0xFEE
  8178                           fsr0h	equ	0xFEA
  8179                           fsr0l	equ	0xFE9
  8180                           wreg	equ	0xFE8
  8181                           fsr1h	equ	0xFE2
  8182                           fsr1l	equ	0xFE1
  8183                           indf2	equ	0xFDF
  8184                           postinc2	equ	0xFDE
  8185                           postdec2	equ	0xFDD
  8186                           fsr2h	equ	0xFDA
  8187                           fsr2l	equ	0xFD9
  8188                           status	equ	0xFD8
  8189                           
  8190 ;; *************** function i2___ftmul *****************
  8191 ;; Defined at:
  8192 ;;		line 62 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftmul.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  f1              3   12[COMRAM] float 
  8195 ;;  f2              3   15[COMRAM] float 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;  __ftmul         3   22[COMRAM] unsigned um
  8198 ;;  __ftmul         1   26[COMRAM] unsigned char 
  8199 ;;  __ftmul         1   25[COMRAM] unsigned char 
  8200 ;;  __ftmul         1   21[COMRAM] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  3   12[COMRAM] float 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8210 ;;      Params:         6       0       0       0       0       0       0
  8211 ;;      Locals:         6       0       0       0       0       0       0
  8212 ;;      Temps:          3       0       0       0       0       0       0
  8213 ;;      Totals:        15       0       0       0       0       0       0
  8214 ;;Total ram usage:       15 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    1
  8217 ;; This function calls:
  8218 ;;		i2___ftpack
  8219 ;; This function is called by:
  8220 ;;		_calculate_speed
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text32
  8225  002386                     __ptext32:
  8226                           	opt stack 0
  8227  002386                     i2___ftmul:
  8228                           	opt stack 23
  8229                           
  8230                           ;incstack = 0
  8231  002386  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
  8232  00238A  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  8233  00238C  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  8234  00238E  340E               	rlcf	i2___ftmul@f1+1,w,c
  8235  002390  3613               	rlcf	??i2___ftmul& (0+255),f,c
  8236  002392  E301               	bnc	u291_41
  8237  002394  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  8238  002396                     u291_41:
  8239  002396  5013               	movf	??i2___ftmul,w,c
  8240  002398  6E16               	movwf	i2___ftmul@exp,c
  8241  00239A  5016               	movf	i2___ftmul@exp,w,c
  8242  00239C  A4D8               	btfss	status,2,c
  8243  00239E  D007               	goto	i2l2724
  8244  0023A0  0E00               	movlw	0
  8245  0023A2  6E0D               	movwf	?i2___ftmul,c
  8246  0023A4  0E00               	movlw	0
  8247  0023A6  6E0E               	movwf	?i2___ftmul+1,c
  8248  0023A8  0E00               	movlw	0
  8249  0023AA  6E0F               	movwf	?i2___ftmul+2,c
  8250  0023AC  0012               	return	
  8251  0023AE                     i2l2724:
  8252  0023AE  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
  8253  0023B2  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  8254  0023B4  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  8255  0023B6  3411               	rlcf	i2___ftmul@f2+1,w,c
  8256  0023B8  3613               	rlcf	??i2___ftmul& (0+255),f,c
  8257  0023BA  E301               	bnc	u293_41
  8258  0023BC  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  8259  0023BE                     u293_41:
  8260  0023BE  5013               	movf	??i2___ftmul,w,c
  8261  0023C0  6E1B               	movwf	i2___ftmul@sign,c
  8262  0023C2  501B               	movf	i2___ftmul@sign,w,c
  8263  0023C4  A4D8               	btfss	status,2,c
  8264  0023C6  D007               	goto	i2l2730
  8265  0023C8  0E00               	movlw	0
  8266  0023CA  6E0D               	movwf	?i2___ftmul,c
  8267  0023CC  0E00               	movlw	0
  8268  0023CE  6E0E               	movwf	?i2___ftmul+1,c
  8269  0023D0  0E00               	movlw	0
  8270  0023D2  6E0F               	movwf	?i2___ftmul+2,c
  8271  0023D4  0012               	return	
  8272  0023D6                     i2l2730:
  8273  0023D6  501B               	movf	i2___ftmul@sign,w,c
  8274  0023D8  0F7B               	addlw	123
  8275  0023DA  2616               	addwf	i2___ftmul@exp,f,c
  8276  0023DC  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  8277  0023E0  5012               	movf	i2___ftmul@f2+2,w,c
  8278  0023E2  1A1B               	xorwf	i2___ftmul@sign,f,c
  8279  0023E4  0E80               	movlw	128
  8280  0023E6  161B               	andwf	i2___ftmul@sign,f,c
  8281  0023E8  8E0E               	bsf	i2___ftmul@f1+1,7,c
  8282  0023EA  8E11               	bsf	i2___ftmul@f2+1,7,c
  8283  0023EC  0EFF               	movlw	255
  8284  0023EE  1610               	andwf	i2___ftmul@f2,f,c
  8285  0023F0  0EFF               	movlw	255
  8286  0023F2  1611               	andwf	i2___ftmul@f2+1,f,c
  8287  0023F4  0E00               	movlw	0
  8288  0023F6  1612               	andwf	i2___ftmul@f2+2,f,c
  8289  0023F8  0E00               	movlw	0
  8290  0023FA  6E17               	movwf	i2___ftmul@f3_as_product,c
  8291  0023FC  0E00               	movlw	0
  8292  0023FE  6E18               	movwf	i2___ftmul@f3_as_product+1,c
  8293  002400  0E00               	movlw	0
  8294  002402  6E19               	movwf	i2___ftmul@f3_as_product+2,c
  8295  002404  0E07               	movlw	7
  8296  002406  6E1A               	movwf	i2___ftmul@cntr,c
  8297  002408                     i2l2744:
  8298  002408  A00D               	btfss	i2___ftmul@f1,0,c
  8299  00240A  D006               	goto	i2l2748
  8300  00240C  5010               	movf	i2___ftmul@f2,w,c
  8301  00240E  2617               	addwf	i2___ftmul@f3_as_product,f,c
  8302  002410  5011               	movf	i2___ftmul@f2+1,w,c
  8303  002412  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  8304  002414  5012               	movf	i2___ftmul@f2+2,w,c
  8305  002416  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  8306  002418                     i2l2748:
  8307  002418  90D8               	bcf	status,0,c
  8308  00241A  320F               	rrcf	i2___ftmul@f1+2,f,c
  8309  00241C  320E               	rrcf	i2___ftmul@f1+1,f,c
  8310  00241E  320D               	rrcf	i2___ftmul@f1,f,c
  8311  002420  90D8               	bcf	status,0,c
  8312  002422  3610               	rlcf	i2___ftmul@f2,f,c
  8313  002424  3611               	rlcf	i2___ftmul@f2+1,f,c
  8314  002426  3612               	rlcf	i2___ftmul@f2+2,f,c
  8315  002428  2E1A               	decfsz	i2___ftmul@cntr,f,c
  8316  00242A  D7EE               	goto	i2l2744
  8317  00242C  0E09               	movlw	9
  8318  00242E  6E1A               	movwf	i2___ftmul@cntr,c
  8319  002430                     i2l2754:
  8320  002430  A00D               	btfss	i2___ftmul@f1,0,c
  8321  002432  D006               	goto	i2l2758
  8322  002434  5010               	movf	i2___ftmul@f2,w,c
  8323  002436  2617               	addwf	i2___ftmul@f3_as_product,f,c
  8324  002438  5011               	movf	i2___ftmul@f2+1,w,c
  8325  00243A  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  8326  00243C  5012               	movf	i2___ftmul@f2+2,w,c
  8327  00243E  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  8328  002440                     i2l2758:
  8329  002440  90D8               	bcf	status,0,c
  8330  002442  320F               	rrcf	i2___ftmul@f1+2,f,c
  8331  002444  320E               	rrcf	i2___ftmul@f1+1,f,c
  8332  002446  320D               	rrcf	i2___ftmul@f1,f,c
  8333  002448  90D8               	bcf	status,0,c
  8334  00244A  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
  8335  00244C  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
  8336  00244E  3217               	rrcf	i2___ftmul@f3_as_product,f,c
  8337  002450  2E1A               	decfsz	i2___ftmul@cntr,f,c
  8338  002452  D7EE               	goto	i2l2754
  8339  002454  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  8340  002458  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  8341  00245C  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  8342  002460  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  8343  002464  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  8344  002468  ECD1  F013         	call	i2___ftpack	;wreg free
  8345  00246C  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
  8346  002470  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
  8347  002474  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
  8348  002478  0012               	return	
  8349  00247A                     __end_ofi2___ftmul:
  8350                           	opt stack 0
  8351                           pclatu	equ	0xFFB
  8352                           pclath	equ	0xFFA
  8353                           tblptru	equ	0xFF8
  8354                           tblptrh	equ	0xFF7
  8355                           tblptrl	equ	0xFF6
  8356                           tablat	equ	0xFF5
  8357                           prodh	equ	0xFF4
  8358                           prodl	equ	0xFF3
  8359                           intcon	equ	0xFF2
  8360                           intcon2	equ	0xFF1
  8361                           intcon3	equ	0xFF0
  8362                           postinc0	equ	0xFEE
  8363                           fsr0h	equ	0xFEA
  8364                           fsr0l	equ	0xFE9
  8365                           wreg	equ	0xFE8
  8366                           fsr1h	equ	0xFE2
  8367                           fsr1l	equ	0xFE1
  8368                           indf2	equ	0xFDF
  8369                           postinc2	equ	0xFDE
  8370                           postdec2	equ	0xFDD
  8371                           fsr2h	equ	0xFDA
  8372                           fsr2l	equ	0xFD9
  8373                           status	equ	0xFD8
  8374                           
  8375 ;; *************** function ___ftdiv *****************
  8376 ;; Defined at:
  8377 ;;		line 54 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  f1              3   27[COMRAM] float 
  8380 ;;  f2              3   30[COMRAM] float 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  f3              3   37[COMRAM] float 
  8383 ;;  sign            1   41[COMRAM] unsigned char 
  8384 ;;  exp             1   40[COMRAM] unsigned char 
  8385 ;;  cntr            1   36[COMRAM] unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  3   27[COMRAM] float 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8395 ;;      Params:         6       0       0       0       0       0       0
  8396 ;;      Locals:         6       0       0       0       0       0       0
  8397 ;;      Temps:          3       0       0       0       0       0       0
  8398 ;;      Totals:        15       0       0       0       0       0       0
  8399 ;;Total ram usage:       15 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    1
  8402 ;; This function calls:
  8403 ;;		i2___ftpack
  8404 ;; This function is called by:
  8405 ;;		_ISR
  8406 ;;		_calculate_speed
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text33
  8411  00247A                     __ptext33:
  8412                           	opt stack 0
  8413  00247A                     ___ftdiv:
  8414                           	opt stack 23
  8415                           
  8416                           ;incstack = 0
  8417  00247A  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  8418  00247E  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  8419  002480  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  8420  002482  341D               	rlcf	___ftdiv@f1+1,w,c
  8421  002484  3622               	rlcf	??___ftdiv& (0+255),f,c
  8422  002486  E301               	bnc	u265_41
  8423  002488  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  8424  00248A                     u265_41:
  8425  00248A  5022               	movf	??___ftdiv,w,c
  8426  00248C  6E29               	movwf	___ftdiv@exp,c
  8427  00248E  5029               	movf	___ftdiv@exp,w,c
  8428  002490  A4D8               	btfss	status,2,c
  8429  002492  D007               	goto	i2l2542
  8430  002494  0E00               	movlw	0
  8431  002496  6E1C               	movwf	?___ftdiv,c
  8432  002498  0E00               	movlw	0
  8433  00249A  6E1D               	movwf	?___ftdiv+1,c
  8434  00249C  0E00               	movlw	0
  8435  00249E  6E1E               	movwf	?___ftdiv+2,c
  8436  0024A0  0012               	return	
  8437  0024A2                     i2l2542:
  8438  0024A2  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  8439  0024A6  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  8440  0024A8  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  8441  0024AA  3420               	rlcf	___ftdiv@f2+1,w,c
  8442  0024AC  3622               	rlcf	??___ftdiv& (0+255),f,c
  8443  0024AE  E301               	bnc	u267_41
  8444  0024B0  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  8445  0024B2                     u267_41:
  8446  0024B2  5022               	movf	??___ftdiv,w,c
  8447  0024B4  6E2A               	movwf	___ftdiv@sign,c
  8448  0024B6  502A               	movf	___ftdiv@sign,w,c
  8449  0024B8  A4D8               	btfss	status,2,c
  8450  0024BA  D007               	goto	i2l2548
  8451  0024BC  0E00               	movlw	0
  8452  0024BE  6E1C               	movwf	?___ftdiv,c
  8453  0024C0  0E00               	movlw	0
  8454  0024C2  6E1D               	movwf	?___ftdiv+1,c
  8455  0024C4  0E00               	movlw	0
  8456  0024C6  6E1E               	movwf	?___ftdiv+2,c
  8457  0024C8  0012               	return	
  8458  0024CA                     i2l2548:
  8459  0024CA  0E00               	movlw	0
  8460  0024CC  6E26               	movwf	___ftdiv@f3,c
  8461  0024CE  0E00               	movlw	0
  8462  0024D0  6E27               	movwf	___ftdiv@f3+1,c
  8463  0024D2  0E00               	movlw	0
  8464  0024D4  6E28               	movwf	___ftdiv@f3+2,c
  8465  0024D6  502A               	movf	___ftdiv@sign,w,c
  8466  0024D8  0F89               	addlw	137
  8467  0024DA  5E29               	subwf	___ftdiv@exp,f,c
  8468  0024DC  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  8469  0024E0  5021               	movf	___ftdiv@f2+2,w,c
  8470  0024E2  1A2A               	xorwf	___ftdiv@sign,f,c
  8471  0024E4  0E80               	movlw	128
  8472  0024E6  162A               	andwf	___ftdiv@sign,f,c
  8473  0024E8  8E1D               	bsf	___ftdiv@f1+1,7,c
  8474  0024EA  0EFF               	movlw	255
  8475  0024EC  161C               	andwf	___ftdiv@f1,f,c
  8476  0024EE  0EFF               	movlw	255
  8477  0024F0  161D               	andwf	___ftdiv@f1+1,f,c
  8478  0024F2  0E00               	movlw	0
  8479  0024F4  161E               	andwf	___ftdiv@f1+2,f,c
  8480  0024F6  8E20               	bsf	___ftdiv@f2+1,7,c
  8481  0024F8  0EFF               	movlw	255
  8482  0024FA  161F               	andwf	___ftdiv@f2,f,c
  8483  0024FC  0EFF               	movlw	255
  8484  0024FE  1620               	andwf	___ftdiv@f2+1,f,c
  8485  002500  0E00               	movlw	0
  8486  002502  1621               	andwf	___ftdiv@f2+2,f,c
  8487  002504  0E18               	movlw	24
  8488  002506  6E25               	movwf	___ftdiv@cntr,c
  8489  002508                     i2l2568:
  8490  002508  90D8               	bcf	status,0,c
  8491  00250A  3626               	rlcf	___ftdiv@f3,f,c
  8492  00250C  3627               	rlcf	___ftdiv@f3+1,f,c
  8493  00250E  3628               	rlcf	___ftdiv@f3+2,f,c
  8494  002510  501F               	movf	___ftdiv@f2,w,c
  8495  002512  5C1C               	subwf	___ftdiv@f1,w,c
  8496  002514  5020               	movf	___ftdiv@f2+1,w,c
  8497  002516  581D               	subwfb	___ftdiv@f1+1,w,c
  8498  002518  5021               	movf	___ftdiv@f2+2,w,c
  8499  00251A  581E               	subwfb	___ftdiv@f1+2,w,c
  8500  00251C  A0D8               	btfss	status,0,c
  8501  00251E  D007               	goto	i2l499
  8502  002520  501F               	movf	___ftdiv@f2,w,c
  8503  002522  5E1C               	subwf	___ftdiv@f1,f,c
  8504  002524  5020               	movf	___ftdiv@f2+1,w,c
  8505  002526  5A1D               	subwfb	___ftdiv@f1+1,f,c
  8506  002528  5021               	movf	___ftdiv@f2+2,w,c
  8507  00252A  5A1E               	subwfb	___ftdiv@f1+2,f,c
  8508  00252C  8026               	bsf	___ftdiv@f3,0,c
  8509  00252E                     i2l499:
  8510  00252E  90D8               	bcf	status,0,c
  8511  002530  361C               	rlcf	___ftdiv@f1,f,c
  8512  002532  361D               	rlcf	___ftdiv@f1+1,f,c
  8513  002534  361E               	rlcf	___ftdiv@f1+2,f,c
  8514  002536  2E25               	decfsz	___ftdiv@cntr,f,c
  8515  002538  D7E7               	goto	i2l2568
  8516  00253A  C026  F001         	movff	___ftdiv@f3,i2___ftpack@arg
  8517  00253E  C027  F002         	movff	___ftdiv@f3+1,i2___ftpack@arg+1
  8518  002542  C028  F003         	movff	___ftdiv@f3+2,i2___ftpack@arg+2
  8519  002546  C029  F004         	movff	___ftdiv@exp,i2___ftpack@exp
  8520  00254A  C02A  F005         	movff	___ftdiv@sign,i2___ftpack@sign
  8521  00254E  ECD1  F013         	call	i2___ftpack	;wreg free
  8522  002552  C001  F01C         	movff	?i2___ftpack,?___ftdiv
  8523  002556  C002  F01D         	movff	?i2___ftpack+1,?___ftdiv+1
  8524  00255A  C003  F01E         	movff	?i2___ftpack+2,?___ftdiv+2
  8525  00255E  0012               	return	
  8526  002560                     __end_of___ftdiv:
  8527                           	opt stack 0
  8528                           pclatu	equ	0xFFB
  8529                           pclath	equ	0xFFA
  8530                           tblptru	equ	0xFF8
  8531                           tblptrh	equ	0xFF7
  8532                           tblptrl	equ	0xFF6
  8533                           tablat	equ	0xFF5
  8534                           prodh	equ	0xFF4
  8535                           prodl	equ	0xFF3
  8536                           intcon	equ	0xFF2
  8537                           intcon2	equ	0xFF1
  8538                           intcon3	equ	0xFF0
  8539                           postinc0	equ	0xFEE
  8540                           fsr0h	equ	0xFEA
  8541                           fsr0l	equ	0xFE9
  8542                           wreg	equ	0xFE8
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           postdec2	equ	0xFDD
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function ___awtoft *****************
  8553 ;; Defined at:
  8554 ;;		line 32 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\awtoft.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  c               2    8[COMRAM] int 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  sign            1   11[COMRAM] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  3    8[COMRAM] float 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2, status,0, cstack
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8568 ;;      Params:         3       0       0       0       0       0       0
  8569 ;;      Locals:         1       0       0       0       0       0       0
  8570 ;;      Temps:          0       0       0       0       0       0       0
  8571 ;;      Totals:         4       0       0       0       0       0       0
  8572 ;;Total ram usage:        4 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    1
  8575 ;; This function calls:
  8576 ;;		i2___ftpack
  8577 ;; This function is called by:
  8578 ;;		_calculate_speed
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text34
  8583  002B22                     __ptext34:
  8584                           	opt stack 0
  8585  002B22                     ___awtoft:
  8586                           	opt stack 23
  8587                           
  8588                           ;incstack = 0
  8589  002B22  0E00               	movlw	0
  8590  002B24  6E0C               	movwf	___awtoft@sign,c
  8591  002B26  AE0A               	btfss	___awtoft@c+1,7,c
  8592  002B28  D006               	goto	i2l2598
  8593  002B2A  6C09               	negf	___awtoft@c,c
  8594  002B2C  1E0A               	comf	___awtoft@c+1,f,c
  8595  002B2E  B0D8               	btfsc	status,0,c
  8596  002B30  2A0A               	incf	___awtoft@c+1,f,c
  8597  002B32  0E01               	movlw	1
  8598  002B34  6E0C               	movwf	___awtoft@sign,c
  8599  002B36                     i2l2598:
  8600  002B36  C009  F001         	movff	___awtoft@c,i2___ftpack@arg
  8601  002B3A  C00A  F002         	movff	___awtoft@c+1,i2___ftpack@arg+1
  8602  002B3E  6A03               	clrf	i2___ftpack@arg+2,c
  8603  002B40  0E8E               	movlw	142
  8604  002B42  6E04               	movwf	i2___ftpack@exp,c
  8605  002B44  C00C  F005         	movff	___awtoft@sign,i2___ftpack@sign
  8606  002B48  ECD1  F013         	call	i2___ftpack	;wreg free
  8607  002B4C  C001  F009         	movff	?i2___ftpack,?___awtoft
  8608  002B50  C002  F00A         	movff	?i2___ftpack+1,?___awtoft+1
  8609  002B54  C003  F00B         	movff	?i2___ftpack+2,?___awtoft+2
  8610  002B58  0012               	return	
  8611  002B5A                     __end_of___awtoft:
  8612                           	opt stack 0
  8613                           pclatu	equ	0xFFB
  8614                           pclath	equ	0xFFA
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           intcon3	equ	0xFF0
  8624                           postinc0	equ	0xFEE
  8625                           fsr0h	equ	0xFEA
  8626                           fsr0l	equ	0xFE9
  8627                           wreg	equ	0xFE8
  8628                           fsr1h	equ	0xFE2
  8629                           fsr1l	equ	0xFE1
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637 ;; *************** function i2___ftpack *****************
  8638 ;; Defined at:
  8639 ;;		line 62 in file "E:\Jogos\Microchip\xc8\v1.41\sources\common\float.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  arg             3    0[COMRAM] unsigned um
  8642 ;;  exp             1    3[COMRAM] unsigned char 
  8643 ;;  sign            1    4[COMRAM] unsigned char 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  3    0[COMRAM] float 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8655 ;;      Params:         5       0       0       0       0       0       0
  8656 ;;      Locals:         0       0       0       0       0       0       0
  8657 ;;      Temps:          3       0       0       0       0       0       0
  8658 ;;      Totals:         8       0       0       0       0       0       0
  8659 ;;Total ram usage:        8 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		___awtoft
  8665 ;;		___ftdiv
  8666 ;;		i2___ftadd
  8667 ;;		i2___ftmul
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text35
  8672  0027A2                     __ptext35:
  8673                           	opt stack 0
  8674  0027A2                     i2___ftpack:
  8675                           	opt stack 24
  8676                           
  8677                           ;incstack = 0
  8678  0027A2  5004               	movf	i2___ftpack@exp,w,c
  8679  0027A4  B4D8               	btfsc	status,2,c
  8680  0027A6  D005               	goto	i2l2274
  8681  0027A8  5001               	movf	i2___ftpack@arg,w,c
  8682  0027AA  1002               	iorwf	i2___ftpack@arg+1,w,c
  8683  0027AC  1003               	iorwf	i2___ftpack@arg+2,w,c
  8684  0027AE  A4D8               	btfss	status,2,c
  8685  0027B0  D00C               	goto	i2l2280
  8686  0027B2                     i2l2274:
  8687  0027B2  0E00               	movlw	0
  8688  0027B4  6E01               	movwf	?i2___ftpack,c
  8689  0027B6  0E00               	movlw	0
  8690  0027B8  6E02               	movwf	?i2___ftpack+1,c
  8691  0027BA  0E00               	movlw	0
  8692  0027BC  6E03               	movwf	?i2___ftpack+2,c
  8693  0027BE  0012               	return	
  8694  0027C0                     i2l2278:
  8695  0027C0  2A04               	incf	i2___ftpack@exp,f,c
  8696  0027C2  90D8               	bcf	status,0,c
  8697  0027C4  3203               	rrcf	i2___ftpack@arg+2,f,c
  8698  0027C6  3202               	rrcf	i2___ftpack@arg+1,f,c
  8699  0027C8  3201               	rrcf	i2___ftpack@arg,f,c
  8700  0027CA                     i2l2280:
  8701  0027CA  0E00               	movlw	0
  8702  0027CC  1401               	andwf	i2___ftpack@arg,w,c
  8703  0027CE  6E06               	movwf	??i2___ftpack& (0+255),c
  8704  0027D0  0E00               	movlw	0
  8705  0027D2  1402               	andwf	i2___ftpack@arg+1,w,c
  8706  0027D4  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8707  0027D6  0EFE               	movlw	254
  8708  0027D8  1403               	andwf	i2___ftpack@arg+2,w,c
  8709  0027DA  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8710  0027DC  5006               	movf	??i2___ftpack,w,c
  8711  0027DE  1007               	iorwf	??i2___ftpack+1,w,c
  8712  0027E0  1008               	iorwf	??i2___ftpack+2,w,c
  8713  0027E2  B4D8               	btfsc	status,2,c
  8714  0027E4  D00C               	goto	i2l2286
  8715  0027E6  D7EC               	goto	i2l2278
  8716  0027E8                     i2l2282:
  8717  0027E8  2A04               	incf	i2___ftpack@exp,f,c
  8718  0027EA  0E01               	movlw	1
  8719  0027EC  2601               	addwf	i2___ftpack@arg,f,c
  8720  0027EE  0E00               	movlw	0
  8721  0027F0  2202               	addwfc	i2___ftpack@arg+1,f,c
  8722  0027F2  0E00               	movlw	0
  8723  0027F4  2203               	addwfc	i2___ftpack@arg+2,f,c
  8724  0027F6  90D8               	bcf	status,0,c
  8725  0027F8  3203               	rrcf	i2___ftpack@arg+2,f,c
  8726  0027FA  3202               	rrcf	i2___ftpack@arg+1,f,c
  8727  0027FC  3201               	rrcf	i2___ftpack@arg,f,c
  8728  0027FE                     i2l2286:
  8729  0027FE  0E00               	movlw	0
  8730  002800  1401               	andwf	i2___ftpack@arg,w,c
  8731  002802  6E06               	movwf	??i2___ftpack& (0+255),c
  8732  002804  0E00               	movlw	0
  8733  002806  1402               	andwf	i2___ftpack@arg+1,w,c
  8734  002808  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  8735  00280A  0EFF               	movlw	255
  8736  00280C  1403               	andwf	i2___ftpack@arg+2,w,c
  8737  00280E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  8738  002810  5006               	movf	??i2___ftpack,w,c
  8739  002812  1007               	iorwf	??i2___ftpack+1,w,c
  8740  002814  1008               	iorwf	??i2___ftpack+2,w,c
  8741  002816  B4D8               	btfsc	status,2,c
  8742  002818  D006               	goto	i2l2290
  8743  00281A  D7E6               	goto	i2l2282
  8744  00281C                     i2l2288:
  8745  00281C  0604               	decf	i2___ftpack@exp,f,c
  8746  00281E  90D8               	bcf	status,0,c
  8747  002820  3601               	rlcf	i2___ftpack@arg,f,c
  8748  002822  3602               	rlcf	i2___ftpack@arg+1,f,c
  8749  002824  3603               	rlcf	i2___ftpack@arg+2,f,c
  8750  002826                     i2l2290:
  8751  002826  BE02               	btfsc	i2___ftpack@arg+1,7,c
  8752  002828  D003               	goto	i2l441
  8753  00282A  0E02               	movlw	2
  8754  00282C  6004               	cpfslt	i2___ftpack@exp,c
  8755  00282E  D7F6               	goto	i2l2288
  8756  002830                     i2l441:
  8757  002830  A004               	btfss	i2___ftpack@exp,0,c
  8758  002832  9E02               	bcf	i2___ftpack@arg+1,7,c
  8759  002834  90D8               	bcf	status,0,c
  8760  002836  3204               	rrcf	i2___ftpack@exp,f,c
  8761  002838  5004               	movf	i2___ftpack@exp,w,c
  8762  00283A  1203               	iorwf	i2___ftpack@arg+2,f,c
  8763  00283C  5005               	movf	i2___ftpack@sign,w,c
  8764  00283E  A4D8               	btfss	status,2,c
  8765  002840  8E03               	bsf	i2___ftpack@arg+2,7,c
  8766  002842  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  8767  002846  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  8768  00284A  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  8769  00284E  0012               	return	
  8770  002850                     __end_ofi2___ftpack:
  8771                           	opt stack 0
  8772                           pclatu	equ	0xFFB
  8773                           pclath	equ	0xFFA
  8774                           tblptru	equ	0xFF8
  8775                           tblptrh	equ	0xFF7
  8776                           tblptrl	equ	0xFF6
  8777                           tablat	equ	0xFF5
  8778                           prodh	equ	0xFF4
  8779                           prodl	equ	0xFF3
  8780                           intcon	equ	0xFF2
  8781                           intcon2	equ	0xFF1
  8782                           intcon3	equ	0xFF0
  8783                           postinc0	equ	0xFEE
  8784                           fsr0h	equ	0xFEA
  8785                           fsr0l	equ	0xFE9
  8786                           wreg	equ	0xFE8
  8787                           fsr1h	equ	0xFE2
  8788                           fsr1l	equ	0xFE1
  8789                           indf2	equ	0xFDF
  8790                           postinc2	equ	0xFDE
  8791                           postdec2	equ	0xFDD
  8792                           fsr2h	equ	0xFDA
  8793                           fsr2l	equ	0xFD9
  8794                           status	equ	0xFD8
  8795                           pclatu	equ	0xFFB
  8796                           pclath	equ	0xFFA
  8797                           tblptru	equ	0xFF8
  8798                           tblptrh	equ	0xFF7
  8799                           tblptrl	equ	0xFF6
  8800                           tablat	equ	0xFF5
  8801                           prodh	equ	0xFF4
  8802                           prodl	equ	0xFF3
  8803                           intcon	equ	0xFF2
  8804                           intcon2	equ	0xFF1
  8805                           intcon3	equ	0xFF0
  8806                           postinc0	equ	0xFEE
  8807                           fsr0h	equ	0xFEA
  8808                           fsr0l	equ	0xFE9
  8809                           wreg	equ	0xFE8
  8810                           fsr1h	equ	0xFE2
  8811                           fsr1l	equ	0xFE1
  8812                           indf2	equ	0xFDF
  8813                           postinc2	equ	0xFDE
  8814                           postdec2	equ	0xFDD
  8815                           fsr2h	equ	0xFDA
  8816                           fsr2l	equ	0xFD9
  8817                           status	equ	0xFD8
  8818                           
  8819                           	psect	rparam
  8820  0000                     pclatu	equ	0xFFB
  8821                           pclath	equ	0xFFA
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           intcon2	equ	0xFF1
  8830                           intcon3	equ	0xFF0
  8831                           postinc0	equ	0xFEE
  8832                           fsr0h	equ	0xFEA
  8833                           fsr0l	equ	0xFE9
  8834                           wreg	equ	0xFE8
  8835                           fsr1h	equ	0xFE2
  8836                           fsr1l	equ	0xFE1
  8837                           indf2	equ	0xFDF
  8838                           postinc2	equ	0xFDE
  8839                           postdec2	equ	0xFDD
  8840                           fsr2h	equ	0xFDA
  8841                           fsr2l	equ	0xFD9
  8842                           status	equ	0xFD8
  8843                           
  8844                           	psect	temp
  8845  000051                     btemp:
  8846                           	opt stack 0
  8847  000051                     	ds	1
  8848  0000                     int$flags	set	btemp
  8849                           pclatu	equ	0xFFB
  8850                           pclath	equ	0xFFA
  8851                           tblptru	equ	0xFF8
  8852                           tblptrh	equ	0xFF7
  8853                           tblptrl	equ	0xFF6
  8854                           tablat	equ	0xFF5
  8855                           prodh	equ	0xFF4
  8856                           prodl	equ	0xFF3
  8857                           intcon	equ	0xFF2
  8858                           intcon2	equ	0xFF1
  8859                           intcon3	equ	0xFF0
  8860                           postinc0	equ	0xFEE
  8861                           fsr0h	equ	0xFEA
  8862                           fsr0l	equ	0xFE9
  8863                           wreg	equ	0xFE8
  8864                           fsr1h	equ	0xFE2
  8865                           fsr1l	equ	0xFE1
  8866                           indf2	equ	0xFDF
  8867                           postinc2	equ	0xFDE
  8868                           postdec2	equ	0xFDD
  8869                           fsr2h	equ	0xFDA
  8870                           fsr2l	equ	0xFD9
  8871                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    118
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160    117     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[17]), STR_2(CODE[18]), STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Print_Mensagem_Lcd@mensagem	PTR unsigned char  size(2) Largest target is 16
		 -> main@buf(BANK0[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2___ftadd
    i2___ftadd->___ftdiv
    _calculate_speed->___ftdiv
    i2___ftmul->___awtoft
    ___ftdiv->i2___ftmul
    ___awtoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _Print_Mensagem_Lcd->_Envia_Dado_Lcd
    _Envia_Dado_Lcd->_Delay_LCD
    _Inicializa_Lcd->_Envia_Comando_Lcd
    _Envia_Comando_Lcd->_Delay_LCD

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   44196
                                             99 BANK0     18    18      0
                  _Envia_Comando_Lcd
                     _Inicializa_Lcd
                 _Print_Mensagem_Lcd
                  _init_interruption
                         _init_timer
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   43375
                                             63 BANK0     36    29      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10255
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   10057
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2413
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4325
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2086
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     671
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     546
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     444
                                             42 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3524
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3227
                                             45 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1953
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     520
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interruption                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Print_Mensagem_Lcd                                   4     2      2     395
                                              3 BANK0      4     2      2
                     _Envia_Dado_Lcd
 ---------------------------------------------------------------------------------
 (2) _Envia_Dado_Lcd                                       1     1      0     113
                                              2 BANK0      1     1      0
                          _Delay_LCD
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Lcd                                       0     0      0     159
            _Delay_inicializacao_LCD
                  _Envia_Comando_Lcd
 ---------------------------------------------------------------------------------
 (2) _Envia_Comando_Lcd                                    1     1      0     113
                                              2 BANK0      1     1      0
                          _Delay_LCD
 ---------------------------------------------------------------------------------
 (3) _Delay_LCD                                            2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Delay_inicializacao_LCD                              2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0    5809
                                             54 COMRAM    14    14      0
                            ___ftdiv
                    _calculate_speed
                          i2___ftadd
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) i2___ftadd                                           12     6      6    1435
                                             42 COMRAM    12     6      6
                            ___ftdiv (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (6) _calculate_speed                                      9     6      3    2984
                                             42 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (7) i2___ftmul                                           15     9      6     973
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             15     9      6    1181
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3     698
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftpack                                           8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Envia_Comando_Lcd
     _Delay_LCD
   _Inicializa_Lcd
     _Delay_inicializacao_LCD
     _Envia_Comando_Lcd
       _Delay_LCD
   _Print_Mensagem_Lcd
     _Envia_Dado_Lcd
       _Delay_LCD
   _init_interruption
   _init_timer
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _ISR (ROOT)
   ___ftdiv
     ___awtoft (ARG)
       i2___ftpack
     i2___ftmul (ARG)
       ___awtoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftpack (ARG)
   _calculate_speed
     ___awtoft
       i2___ftpack
     ___ftdiv
       ___awtoft (ARG)
         i2___ftpack
       i2___ftmul (ARG)
         ___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul
       ___awtoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2___ftpack (ARG)
   i2___ftadd
     ___ftdiv (ARG)
       ___awtoft (ARG)
         i2___ftpack
       i2___ftmul (ARG)
         ___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftpack (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      50       1       85.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C7      15        0.0%
DATA                 0      0      C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 18 19:25:09 2020

                    ___awdiv@sign 006B               ___wmul@multiplicand 0070  
                      i2___ftpack 27A2                      ___ftadd@exp1 0098  
                    ___ftadd@exp2 0097                      ___ftadd@sign 0096  
                             l441 2352                               l409 1E9C  
                             l513 1D14                               l177 0C64  
                             l506 1C50                               l507 1C94  
                             l470 183E                               l464 17DC  
                             l538 2BB2                               l468 1816  
                             l479 1914                               l488 193E  
                             l588 2790                               l598 297A  
                             _ISR 0008                        _RPM_output 00D5  
                    ___awmod@sign 0065                               wreg 000FE8  
                     _sprintf$985 00AC                              ?_ISR 0001  
                    ___ftdiv@cntr 0025                      ___ftdiv@sign 002A  
                            l2030 22B6                              l2110 18B2  
                            l2102 1876                              l2040 2344  
                            l2032 22E6                              l2024 2294  
                            l2120 18FA                              l2112 18C0  
                            l3000 0F16                              l2122 1908  
                            l2114 18CC                              l2210 2678  
                            l3010 0FD2                              l2052 2378  
                            l2036 2306                              l2028 22A8  
                            l2108 18A4                              l2212 2684  
                            l2204 265A                              l3012 0FD8  
                            l2062 2C5A                              l3022 2AE6  
                            l2046 235C                              l2038 2336  
                            l2230 26DC                              l2222 26BA  
                            l2214 268A                              l3006 0F44  
                            l3014 0FEE                              l2128 1968  
                            l2080 17EA                              l3016 100C  
                            l2058 2C44                              l3026 2B06  
                            l2138 19B6                              l2226 26C8  
                            l2250 2890                              l2242 286C  
                            l2154 1F22                              l2340 2C6C  
                            l2092 1834                              l2252 289C  
                            l2172 1F8E                              l2148 1EE8  
                            l2404 14A2                              l2086 1824  
                            l2510 1E1A                              l2502 1DC6  
                            l2254 28A2                              l2262 28D4  
                            l2246 287C                              l2182 1FCC  
                            l2344 2C82                              l2432 1BFC  
                            l2168 1F70                              l2416 2BE0  
                            l3144 2168                              l2610 25E0  
                            l2522 1E52                              l2426 1BC2  
                            l2266 28E8                              l2258 28C6  
                            l2178 1FAE                              l2700 2924  
                            l2532 1E82                              l2380 118C  
                            l2606 25A0                              l2630 2046  
                            l2710 2A1A                              l2534 1E92  
                            l2526 1E66                              l2462 1CCA  
                            l2198 2644                              l2366 172C  
                            l2358 1648                              l2390 1278  
                            l2616 2624                              l2704 2968  
                            l2712 2A2A                              l2472 1CFA  
                            l2482 1D4C                              l2474 1D0A  
                            l2466 1CDE                              l2386 1252  
                            l2802 074C                              l2660 2118  
                            l2652 20EC                              l2820 07C6  
                            l2812 0778                              l2804 0762  
                            l2662 2122                              l2398 13DC  
                            l2902 0B40                              l2830 080C  
                            l2814 07AC                              l2648 20D8  
                            l2680 272A                              l2488 1D72  
                            l2808 0772                              l2586 2AB0  
                            l2666 213E                              l2658 2108  
                            l2930 0C68                              l2906 0B6C  
                            l2676 2714                              l2924 0C32  
                            l2908 0B74                              l2916 0C0A  
                            l2860 0972                              l2678 2724  
                            l2942 0CEA                              l2926 0C46  
                            l2918 0C18                              l2870 0A02  
                            l2862 09A2                              l2854 092E  
                            l2846 08BE                              l2790 06D4  
                            l2688 277E                              l2696 290E  
                            l2960 0DFA                              l2952 0DD2  
                            l2864 09B8                              l2784 06B4  
                            l2698 291E                              l2954 0DE0  
                            l2938 0C98                              l2890 0AFA  
                            l2874 0A30                              l2858 095C  
                            l2962 0E08                              l2980 0E78  
                            l2972 0E4C                              l2884 0A8E  
                            l2798 0706                              l2992 0EBE  
                            l2888 0AF4                              l2978 0E72  
                            l2996 0EE6                              STR_1 069A  
                            STR_2 0677                              STR_3 0689  
                            u2121 1EC4                              u2141 1EFE  
                            u3200 0C5C                              u3040 0852  
                            u3045 0846                              u2511 1BD8  
                            u1911 178A                              u1921 17A8  
                            u2491 1B9E                              u2761 2022  
                            u3617 21B0                              u3627 220C  
                            u2780 206C                              u3637 2268  
                            u2785 2062                              i2l57 0104  
                  _Inicializa_Lcd 2CD0                              _main 2150  
                    ___ftpack@arg 0060                      ___ftpack@exp 0063  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0051  
                    i2___ftadd@f1 002B                      i2___ftadd@f2 002E  
                            prodh 000FF4                              prodl 000FF3  
                            start 0140                 _init_interruption 2D02  
                    ___ftmul@cntr 0081                      i2___ftmul@f1 000D  
                    i2___ftmul@f2 0010                      ___param_bank 000000  
                    ___ftmul@sign 0082                             ??_ISR 0037  
              ?_init_interruption 0001                      ___fttol@exp1 0098  
                    ___fttol@lval 0094                             ?_main 0001  
                 __end_of___awdiv 26E6                   __end_of___ftadd 19DC  
                 __end_of___awmod 28F2                   __end_of___ftdiv 2560  
                 __end_of___ftneg 2BC0                   __end_of___lldiv 27A2  
                 __end_of___ftmul 200C                   ___awdiv@divisor 0068  
                 __end_of___llmod 298C                   __end_of___ftsub 2ADA  
                 __end_of___fttol 2150               ??_init_interruption 0060  
                           i2l441 2830                             i2l464 1A20  
                           i2l468 1A4A                             i2l479 1AFA  
                           i2l488 1B16                             i2l499 252E  
                 ___awdiv@counter 006A                  ?_calculate_speed 002B  
                           _TMR0L 000FD6                             _PORTD 000F83  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                      ___lltoft@exp 0070  
               _Envia_Comando_Lcd 2C12                     ___awtoft@sign 000C  
                 __end_of_dpowers 0629            __end_of_Inicializa_Lcd 2CEE  
                           _scale 101A                   __end_of_isdigit 2BEA  
                   ___ftpack@sign 0064                             _speed 0048  
              ?_Envia_Comando_Lcd 0001                             pclath 000FFA  
                           tablat 000FF5           _Delay_inicializacao_LCD 2C62  
                __end_ofi2___wmul 2CB0                             status 000FD8  
                 __end_of_sprintf 101A         __end_of_init_interruption 2D14  
             ??_Envia_Comando_Lcd 0062                __size_ofi2___ftadd 01AC  
              __size_ofi2___ftmul 00F4                   __initialization 2CB0  
                    __end_of_main 227A                     i2___ftmul@exp 0016  
              __size_of_Delay_LCD 0028                       ?i2___ftpack 0001  
                          ??_main 00C3                     ___fttol@sign1 0093  
                   __activetblptr 000002              __size_of__tdiv_to_l_ 019E  
       __end_of_Envia_Comando_Lcd 2C3A                   ?_Inicializa_Lcd 0001  
                ___llmod@dividend 006D                            ?_scale 0083  
                ___awdiv@dividend 0066                  __end_of___awtoft 2B5A  
                __end_of___ftpack 2386                  __end_of___lltoft 2A8E  
                          i2l3100 1B62                            i2l3110 004C  
                          i2l3042 1A2E                            i2l3124 0064  
                          i2l3116 0056                            i2l3070 1AAA  
                          i2l2280 27CA                            i2l3072 1AB4  
                          i2l3064 1A88                            i2l3048 1A58  
                          i2l2290 2826                            i2l2282 27E8  
                          i2l2274 27B2                            i2l3090 1B32  
                          i2l3082 1AE8                            i2l3074 1ABE  
                          i2l3084 1AF2                            i2l3076 1AC6  
                          i2l2286 27FE                            i2l2278 27C0  
                          i2l2542 24A2                            i2l2288 281C  
                          i2l2730 23D6                            i2l2548 24CA  
                          i2l2724 23AE                            i2l2568 2508  
                          i2l2744 2408                            i2l2754 2430  
                          i2l2748 2418                            i2l2598 2B36  
                          i2l2758 2440                            u336_41 19EC  
                          u265_41 248A                            u337_41 1A00  
                          u267_41 24B2                            u291_41 2396  
                          u293_41 23BE        __end_of_Print_Mensagem_Lcd 2B22  
                __end_of__powers_ 0650                            ___ftge 2560  
        Envia_Comando_Lcd@comando 0062                            ___wmul 2B5A  
                       ??___awdiv 006A                         ??___ftadd 0093  
                       ??___awmod 0064                         ??___ftdiv 0022  
                       ??___ftneg 0063                         ??___lldiv 0068  
                       ??___ftmul 007A                         ??___llmod 0075  
                       ??___ftsub 009F                         ??___fttol 008E  
                          _fround 14C8                            clear_0 2CBC  
                ___awdiv@quotient 006C                   ___awmod@divisor 0062  
                 ___awmod@counter 0064             ___ftmul@f3_as_product 007E  
                       ??_isdigit 0060                 __end_ofi2___ftadd 1B88  
             Print_Mensagem_Lcd@i 0065                    i2___ftadd@exp1 0036  
                  i2___ftadd@exp2 0035                 __end_ofi2___ftmul 247A  
                  i2___ftadd@sign 0034                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8         ??_Delay_inicializacao_LCD 0060  
                       ??_sprintf 00A6                 __end_of_Delay_LCD 2C62  
                ??_Envia_Dado_Lcd 0062                        __accesstop 0060  
         __end_of__initialization 2CC2                   __CFG_PBADEN$OFF 000000  
                      ___ftadd@f1 008D                        ___ftadd@f2 0090  
             __size_ofi2___ftpack 00AE                        ___ftge@ff1 0060  
                      ___ftge@ff2 0063        __size_of_init_interruption 0012  
                   ___rparam_used 000001                        ___ftdiv@f1 001C  
                      ___ftdiv@f2 001F                        ___ftdiv@f3 0026  
                      ___ftneg@f1 0060                        ___awtoft@c 0009  
                  i2___ftpack@arg 0001                    i2___ftpack@exp 0004  
                      ___ftmul@f1 0074                        ___ftmul@f2 0077  
                      ___ftsub@f1 0099                        ___ftsub@f2 009C  
                      ___fttol@f1 008A                    __pcstackCOMRAM 0001  
                      ___lltoft@c 0068                    i2___ftmul@cntr 001A  
                   __end_of_scale 14C8                    i2___ftmul@sign 001B  
            calculate_speed@count 002B                         ?i2___wmul 0001  
                      __div_to_l_ 1D26        __size_of_Envia_Comando_Lcd 0028  
                 __div_to_l_@exp1 006B                   __div_to_l_@cntr 006A  
                         ??_scale 0086                   __div_to_l_@quot 0066  
                      __pbssBANK0 00D5                     __div_to_l_@f1 0060  
                   __div_to_l_@f2 0063                           ?___ftge 0060  
                         ?___wmul 006E                           ?_fround 0083  
                       ?___awtoft 0009                         ?___ftpack 0060  
                       ?___lltoft 0068                        ??i2___wmul 0005  
               __end_of__npowers_ 0677                           __Hparam 0000  
                         __Lparam 0000                   __size_of___ftge 00C8  
                         ___awdiv 2628                           ___ftadd 1774  
                         ___awmod 2850                           ___ftdiv 247A  
                         ___ftneg 2B90                           ___lldiv 26E6  
                 __size_of___wmul 0036                           ___ftmul 1EAE  
                         ___llmod 28F2                           ___ftsub 2A8E  
                         ___fttol 200C                        _fround$982 0089  
                      _fround$983 0086                      __psmallconst 0600  
                         __pcinit 2CB0                      ??i2___ftpack 0006  
                      ??___awtoft 000C                        ??___ftpack 0065  
                      _init_timer 2CEE                   __size_of_fround 02AC  
         i2___ftmul@f3_as_product 0017                           __ramtop 0600  
                      ??___lltoft 006C                           __ptext0 2150  
                         __ptext1 06A4                           __ptext2 101A  
                         __ptext3 2BC0                           __ptext4 14C8  
                         __ptext5 2B5A                           __ptext6 1EAE  
                         __ptext7 2850                           __ptext8 2628  
                         __ptext9 1B88        Print_Mensagem_Lcd@mensagem 0063  
                       _T0CONbits 000FD5                      __size_of_ISR 0138  
                     ?__div_to_l_ 0060                           _dpowers 0601  
                ??_Inicializa_Lcd 0063                           _mileage 0045  
                         _isdigit 2BC0                  ___awmod@dividend 0060  
                         main@buf 00C5                           _sprintf 06A4  
            end_of_initialization 2CC2          __size_of_calculate_speed 0086  
                   __Lmediumconst 0000               i2___wmul@multiplier 0001  
              __end_ofi2___ftpack 2850                   ___lldiv@divisor 0064  
                 ___lldiv@counter 006C                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                  __tdiv_to_l_@f1 0060                    __tdiv_to_l_@f2 0063  
                   ??__tdiv_to_l_ 0066                Envia_Dado_Lcd@dado 0062  
                       _PORTCbits 000F82                _Print_Mensagem_Lcd 2ADA  
             ?_Print_Mensagem_Lcd 0063                         i2___ftadd 19DC  
                       _RPM_count 004D                         i2___ftmul 2386  
                     ___ftdiv@exp 0029                         _Delay_LCD 2C3A  
                 i2___ftpack@sign 0005               __size_of__div_to_l_ 0188  
                     ___ftmul@exp 007D              ??_Print_Mensagem_Lcd 0065  
                  __end_of___ftge 2628                    __end_of___wmul 2B90  
                     ?_init_timer 0001                    __end_of_fround 1774  
                i2___wmul@product 0005               start_initialization 2CB0  
                     __end_of_ISR 0140                 __size_ofi2___wmul 0026  
             __end_of__tdiv_to_l_ 1D26                        ?i2___ftadd 002B  
                      ?i2___ftmul 000D                   ___llmod@divisor 0071  
        Delay_inicializacao_LCD@i 0060                   ___llmod@counter 0075  
                      ?_Delay_LCD 0001                 ??_calculate_speed 002E  
                        ??___ftge 0066                          ??___wmul 0072  
                        ??_fround 0086                     sprintf@tmpval 00B5  
                      fround@prec 008C                 __size_of___awtoft 0038  
               __size_of___ftpack 010C          ?_Delay_inicializacao_LCD 0001  
               __size_of___lltoft 007C                       __pbssCOMRAM 0045  
                   __pcstackBANK0 0060                       sprintf@flag 00B1  
                     sprintf@fval 00BF               __size_of_init_timer 0014  
                     sprintf@prec 00BD                         __pintcode 0008  
         __size_of_Envia_Dado_Lcd 0028                          ?___awdiv 0066  
                        ?___ftadd 008D                          ?___awmod 0060  
                        ?___ftdiv 001C                          ?___ftneg 0060  
                        ?___lldiv 0060                          ?___ftmul 0074  
                        ?___llmod 006D                          ?___ftsub 0099  
                       __npowers_ 0650                          ?___fttol 008A  
                     __tdiv_to_l_ 1B88                      ??__div_to_l_ 0066  
                     __smallconst 0600                          ?_isdigit 0001  
       calculate_speed@real_speed 002E                         _scale$984 0086  
                     ??i2___ftadd 0031                          ?_sprintf 009F  
                     ??i2___ftmul 0013                    __size_of_scale 04AE  
                  ___wmul@product 0072                       ??_Delay_LCD 0060  
              __end_of__div_to_l_ 1EAE   __end_of_Delay_inicializacao_LCD 2C8A  
               ___wmul@multiplier 006E                          i2___wmul 2C8A  
                     _INTCON2bits 000FF1                       _INTCON3bits 000FF0  
                        __Hrparam 0000                          __Lrparam 0000  
                    _Timer0_count 004F                  __size_of___awdiv 00BE  
                __size_of___ftadd 0268                  __size_of___awmod 00A2  
                __size_of___ftdiv 00E6                  __size_of___ftneg 0030  
           i2___wmul@multiplicand 0003                  __size_of___lldiv 00BC  
                __size_of___ftmul 015E                  __size_of___llmod 009A  
                __size_of___ftsub 004C                  __size_of___fttol 0144  
                    ??_init_timer 0060                          ___awtoft 2B22  
                        ___ftpack 227A                          ___lltoft 2A12  
                     _isdigit$657 0061                        sprintf@exp 00B3  
                      sprintf@val 00B9                  __size_of_isdigit 002A  
            _calculate_speed$1020 0031                          __ptext10 1D26  
                        __ptext11 2A12                          __ptext20 2CEE  
                        __ptext12 28F2                          __ptext21 2D02  
                        __ptext13 26E6                          __ptext30 19DC  
                        __ptext22 2ADA                          __ptext14 200C  
                        __ptext31 298C                          __ptext23 2BEA  
                        __ptext15 2A8E                          __ptext32 2386  
                        __ptext24 2CD0                          __ptext16 1774  
                        __ptext33 247A                          __ptext25 2C12  
                        __ptext17 227A                          __ptext34 2B22  
                        __ptext26 2C3A                          __ptext18 2B90  
                        __ptext35 27A2                          __ptext27 2C62  
                        __ptext19 2560                          __ptext29 2C8A  
                 _calculate_speed 298C                          __powers_ 0629  
                __size_of_sprintf 0976           __size_of_Inicializa_Lcd 001E  
                   __size_of_main 012A                __end_of_init_timer 2D02  
     __size_of_Print_Mensagem_Lcd 0048                    _Envia_Dado_Lcd 2BEA  
                        int$flags 0051                        Delay_LCD@i 0060  
                      _INTCONbits 000FF2                          isdigit@c 0062  
                        scale@scl 0089                          intlevel2 0000  
                       sprintf@ap 00AF                  __tdiv_to_l_@exp1 006E  
                       sprintf@sp 009F                  __tdiv_to_l_@cntr 006D  
                     _SPEED_count 004B                  __tdiv_to_l_@quot 0069  
                ___lldiv@dividend 0060  __size_of_Delay_inicializacao_LCD 0028  
          __end_of_Envia_Dado_Lcd 2C12                      ?__tdiv_to_l_ 0060  
                        sprintf@c 00C2                          sprintf@f 00A1  
         __end_of_calculate_speed 2A12                  ___lldiv@quotient 0068  
                 ?_Envia_Dado_Lcd 0001  
